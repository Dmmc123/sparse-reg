[{"text": "Sunday Daily Thread: What's everyone working on this week?. Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.", "score": 3}, {"text": "Wednesday Daily Thread: Beginner questions. New to Python and have questions? Use this thread to ask anything about Python, there are no bad questions!\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.", "score": 1}, {"text": "I made a 2D Shadow system with Ray Tracing. I've made a one function system to draw shadows based on coordinates provided using ray tracing\n\nSource code: [https://github.com/Intergalactic-Carpet/2D-Birds-eye-view-shadow-render-for-Pygame](https://github.com/Intergalactic-Carpet/2D-Birds-eye-view-shadow-render-for-Pygame)\n\n&amp;#x200B;\n\n&amp;#x200B;\n\nhttps://reddit.com/link/125ioi7/video/13fse03bfnqa1/player", "score": 106}, {"text": "Writing python extensions never been easier\u2026 with Rust and PyO3. Do you need to write performance sensitive code? Consider Rust+PyO3+maturin \u2013 the developer experience couldn't be better. \n\nI wrote a piece about it: [https://www.equalto.com/blog/rust-in-anger-high-performance-web-applications](https://www.equalto.com/blog/rust-in-anger-high-performance-web-applications)\n\nFor the impatient, the associated GitHub repo: [https://github.com/EqualTo-Software/birthday-book-app](https://github.com/EqualTo-Software/birthday-book-app)", "score": 42}, {"text": "Using \"any\" and \"all\" in Python. ", "score": 18}, {"text": "Textual 0.17.0 adds translucent screens and Option List widget. ", "score": 9}, {"text": "PEP 582 rejected - consensus among the community needed. ", "score": 336}, {"text": "Datapane - Build internal data products in 100% Python. Hello! We\u2019re Leo and Mandeep, founders of Datapane (https://github.com/datapane/datapane)\n\nWe're building an open-source app development platform specifically focused on Python data ecosystem. Today Datapane lets you build reports, dashboards, and full-stack apps in ~10 lines of Python, but our goal is to provide all the tools developers need to create internal data products (such as scheduled tasks, auth, integrations, OLAP) in a single simple, standardized framework. \n\nThrough our own experience building full-stack data science products for clients at our last startup, we realized that creating and deploying analytics products required a bunch of complex moving pieces, e.g. a front-end UI framework, backend server + REST/GraphQL, scheduled tasks, backend workers, caching, integrations into Slack/email, scheduled reports, and often a data layer for OLAP \u2013 the list goes on! Unsurprisingly, many companies opt to buy from external vendors instead of building in-house analytics products using Python, as this usually requires months of development time and multiple teams.\n\nWe set out to build a unified app framework which provides all the necessary parts of an internal data product, in a simple, Pythonic package. We started by building a Python-based UI framework for constructing HTML views from data-centric blocks \u2013 like plots, data tables, and layout components. You can export these to standalone HTML files, or host them as a web app on somewhere like GitHub Pages or Fly.io. \n\nNext, we added the ability to build data web apps by connecting Python functions to forms and front-end events. We handle the entire network and RPC layer, so you only need to write plain Python functions that take parameters and return other blocks. You can check out an example of the code to create a simple app: https://github.com/datapane/examples/blob/main/apps/iris-plotter/app.py \n\nCurrently, we\u2019re adding support for background tasks, scheduled tasks, and a DuckDB-based data layer for OLAP. We would love to hear from you what you find difficult about building data products so we can prioritize. \n\nOn the technical side, we wanted to keep things simple, but avoid the footguns our users faced with frameworks like Streamlit, where the reactive/network-aware model was hard to move beyond an MVP or POC. For backend interactivity, we believe the original web got a lot right, and unlike reactive models which rely on websockets, Datapane is unashamedly request/response. This takes inspiration from HTTP and our own experiences with htmx, which offers an elegant way to add interactivity to HTML. Under the hood, we actually compile down to a (gasp!) XML-based hypermedia format, akin to HTML, but tailored specifically for constructing data UIs.\n\nWe\u2019d love to hear your feedback and any questions.\n\nYou can see a few apps we\u2019ve built already in [our gallery](https://datapane.com/gallery), or get started [here](https://docs.datapane.com/quickstart/).", "score": 23}, {"text": "A countdown timer in your terminal. I created a super simple countdown timer accessible globally in your terminal and would love feedback. It's installable simply by typing `pip install timer-cli` in the terminal.\n\nThe idea for this came when I was planning to do a 2hr sprint, but that ended up with me procrastinating and coding this instead haha.\n\n[A screenshot of the timer in action](https://preview.redd.it/41ovbryjynqa1.png?width=1344&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=baf271899ce1322843c34c217e24221ea84fec67)\n\nGitHub: [https://github.com/1Blademaster/timer-cli](https://github.com/1Blademaster/timer-cli)  \nPyPi: [https://pypi.org/project/timer-cli/](https://pypi.org/project/timer-cli/)", "score": 21}, {"text": "AITA? Unless building for a container (docker/k8s), always use a virtual environment for your projects.. One time I had a PR to some installation documentation for a library (not an app) rejected because in the process of updating downstream steps I instinctively included steps for setting up a venv.  \n\nThe essence of the justification for rejecting the PR was that the project has no dependencies, therefore the using a venv is not necessary for the installation of the project.\n\nI don\u2019t want to put the project on blast, but I will say that the project is maintained by a notable company in the AI/ML space who employs more kaggle competition winners than any other company out there.\n\nI\u2019ve been working in python on and off for about a decade and have found that project-level dependency isolation is an absolute requirement and should be the sane default provided to the \u2018uninitiated.\u2019   \n\nObviously, this isn\u2019t even just a python thing.  basically every stack has a concept of project-level dependency isolation.\n\nA global install of a package has much larger ramifications that a new developer has a harder time grasping, so a more experienced dev should be required to opt-in to a global install, because they\u2019ll have the ability to better understand and manage cross-project version conflicts, etc\u2026\n\nDocker and K8s are also advanced topics to (in-part) achieve the same project-level isolation and opting in to global install in those environments is akin to swapping out a venv for an alternative \u201cisolation manager\u201d.\n\nI dunno, AITA for instinctively including a venv step in a larger set of installation instructions?", "score": 3}, {"text": "I created a Porsche Model Classification AI using Deep Learning. Hey,\n\nI am a CS student from Germany and wanted to share my latest project with you all: PorscheInsight-CarClassification-AI. It's a collection of scripts to train models to classify pictures of Porsche cars, with two versions of the model - one for broad car model types and another for specific model variants and years. You can find the project on GitHub: [**https://github.com/Flippchen/PorscheInsight-CarClassification-AI**](https://github.com/Flippchen/PorscheInsight-CarClassification-AI)\n\nThis project is still in its early stages, and I plan to add more models and features in the future and a web app for users to easily classify their Porsche models.\n\nCurrently, the 10-class model can predict broad Porsche car model types like 911, Cayman, and Panamera with 95% accuracy on the validation set. The 88-class model can predict specific Porsche car model variants and years with 46% accuracy on the validation set.\n\nCheck out GitHub for more information on the dataset, models, and usage instructions, as well as some sample images with SHAP values explaining the models' predictions.\n\nFeel free to leave any feedback or suggestions for improvement. Thanks for checking it out", "score": 4}, {"text": "First Flask project - YouTube video downloader. So just published my first Flask project\n\na simple YouTube downloader using Flask\n\n[https://www.tubemate4u.com/youtube](https://www.tubemate4u.com/youtube)\n\nWould love to hear some feedback and advice to improve \n\nfeel free to use this tool :)", "score": 2}, {"text": "Hello, I made a program called PyKorean.. Hi, I made a app, or well program called PyKorean. It's like Google Translate, but from scratch! I'm a beginner in Python, and coded this. \n\n[PyKorean](https://github.com/ChristianHiland/PyKorean/tree/master)", "score": 2}, {"text": "Stock tracker. https://github.com/Avb2/Stock-Tracker\n\nStock tracker I made with sqlite3, bs4, requests, and matplotlib.\nComes with an auto run future, email alert, graphs, and real time stock information. Please let me know what you think below!", "score": 6}, {"text": "help for a beginner:-) modul could not be resolved:-/. using visual studio on ubuntu\npip list shows the modul (openpyxl) is installed\nif i import thw modul in .py it gives me the error reportMissingModuleSource\ntried pipenv shell + install the modul, didnt help :-/\n\nwould appretiate any advice!", "score": 1}, {"text": "Would like to hire a python developer to write me a short script.. I am a developer of 30ish years and have coded in dam near every language other than python. I am starting to watch videos and I can see the language is fairly simple. But I have a simple script I need to get done really fast (like in the next 3-5 days) and I am willing to pay you for your time.\nIf anyone is interested let me know about how much and I can send you my requirements.\nIf you are an experienced developer that can make a simple REST call and utilize some python code I found on GitHub then this project would take you about 3-4 hours tops.", "score": 0}, {"text": "How to revert a migration in django?. ", "score": 3}, {"text": "Python-embedded SQL Engine powered by ClickHouse. With just `pip install chdb`, you can run complex Clickhouse flavor SQLs on your local Parquet/ORC/CSV/Json... file blazing fast.\n\nchDB is an in-process SQL OLAP Engine powered by ClickHouse:\n\n[https://github.com/auxten/chdb](https://github.com/auxten/chdb)\n\n## Features\n- In-process SQL OLAP Engine, powered by ClickHouse\n- No need to install ClickHouse\n- Minimal data copy from C++ to Python\n- Input&amp;Output support Parquet, CSV, JSON, Arrow, ORC and [more](https://clickhouse.com/docs/en/interfaces/formats)\n\n## Installation\nCurrently, chDB only supports Python 3.7+ on macOS and Linux.\n```bash\npip install chdb\n```\n\n## Usage\n\nCurrently, chDB only supports `query` function, which is used to execute SQL and return desired format data.\n\n```python\nimport chdb\nres = chdb.query('select version()', 'CSV'); print(str(res.get_memview().tobytes()))\n```\n\n### work with Parquet or CSV\n```python\nchdb.query('select * from file(\"data.parquet\", Parquet)', 'Pretty')\nchdb.query('select * from file(\"data.csv\", CSV)', 'Pretty')\n```\n\n## Documentation\n- For SQL syntax, please refer to [ClickHouse SQL Reference](https://clickhouse.com/docs/en/sql-reference/syntax)", "score": 2}, {"text": "Accessing MS Access databases from Python and Django. ", "score": 1}, {"text": "Help needed! Securing credentials, safe use of credentials etc.. I\u2019m writing a program that needs credentials. How do I safely implement this? Program downloads Instagram feed and then display it as slideshow. Creds are needed to login. Any advice how to do this? External server is out of option.", "score": 0}, {"text": "Keystroke Dynamics -- Predicting the User \u2014 Lambda App. A couple of weeks ago I released [part I](https://www.reddit.com/r/Python/comments/11tpor9/ml_models_for_user_recognition_using_keystroke/) of this **Keystroke Dynamics** article .\n\nNow I've finished writing part II in which I put into practice an end-to-end solution using FlaskApp or AWS Lambda in order to predict an user based on keyboard keystrokes.\n\nI want to give you a sneak peak on the architecture.\n\n&amp;#x200B;\n\n[HighLevel Overview + dataflow ](https://preview.redd.it/mtrc42t44oqa1.png?width=1656&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=7f8a8857e50a426c817ee3578afb073437663e5e)\n\nFull article over here: [https://medium.com/@tudorache.a.bogdan/keystroke-dynamics-predicting-the-user-ed364a893abc](https://medium.com/@tudorache.a.bogdan/keystroke-dynamics-predicting-the-user-ed364a893abc)", "score": 0}, {"text": "Anyone else attending PyCon Italy?. Hey fellow Pythonistas!\n\nI was just wondering if any of you are planning to attend PyCon Italy this year? I've heard great things about the conference and I'm really excited to be a part of it for the first time.\n\nI'd love to hear your thoughts and experiences, especially from those who have been there before. What do you enjoy the most about the event? Are there any must-attend talks or workshops that you would recommend? And, of course, if you're going this year, it would be awesome to meet some fellow Redditors and make new connections!\n\nFeel free to share any tips and advice for getting the most out of the conference. \n\nSee you there! \ud83d\udc0d\u2728", "score": 120}, {"text": "Create Stock Sentiment Analysis in Python using chatGPT | Adnan's Random bytes. ", "score": 1}, {"text": "The worst diagnostic ever?. Arrgh. \n\n `InvalidIndexError: (slice(None, None, None), None)\u200b`", "score": 0}, {"text": "Instruct-NeRF2NeRF: An AI Method For Editing 3D Scenes With Text-Instructions. Instruct-NeRF2NeRF is a technique developed by researchers from UC Berkeley that allows for the modification of 3D NeRF (Neural Radiance Fields) scenes using written instructions. This method is designed to make 3D editing more accessible and approachable for users, especially those who are not experts in 3D modeling.", "score": 14}, {"text": "Pants \"Environments\": simpler multi-platform workflows. ", "score": 7}, {"text": "Singular Value Decomposition and Image Processing using Python. Here is a link to my GitHub  Repository to learn more about SVD and Basic Image Processing using Python.\n\nhttps://github.com/KeerthX/svd-and-imageprocessing", "score": 1}, {"text": "Graphs in Python web app. I'm developping my own AI model using Spacy and NLP to process, filter and link a lot of data then I'm using Matplotlib to make a graph of these links.\n\nI also project to develop my own web application which I want to be public, maybe using Flask or Django (don't know yet which one would fit the better) but I especially find Matplotlib a bit \"rough and rustic\" graphically and it seems we can't implement interactive graphs made with this library in a web app (maybe I'm saying craps).\n\nSo I'm planning to use another library but I don't know any that could fit in my project. I just need to make co-occurrence graphs for now but I need \"scalibility\" in data processing (if it needs to be considered) and I'll probably need to make different kinds of graphs when I'll be more comfortable with data science.\nObviously, I need the graphs to be graphically attractive for the users and interactive.\n\nIn your opinion, what library would be the most suitable for my project ?", "score": 16}, {"text": "#LearningPython.  \"Excited to switch my career to tech! Just started learning #Python and already loving it. Can't wait to build my coding skills and explore new opportunities in the tech industry! #CareerSwitch #TechCareer #LearningPython\"", "score": 0}, {"text": "I've been working on a password generator for the past 4 months and I would like your feedback.. Here's the link: [https://github.com/IceTheDev2/Passwordsy](https://github.com/IceTheDev2/Passwordsy)\n\nIf you have any ideas, please let me know!\n\nEdit: corrected link", "score": 8}, {"text": "FluidFrames 1.13 - video AI interpolation app (RIFE-HDv3). &amp;#x200B;\n\nhttps://preview.redd.it/8ddqdk65yhqa1.png?width=1527&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=3807f69b7edae34f2da4e39cadb650f7c62bde8d\n\n# FluidFrames 1.13 changelog.\n\n \n\n* Github: [https://github.com/Djdefrag/FluidFrames.RIFE](https://github.com/Djdefrag/FluidFrames.RIFE)\n* Itch: [https://jangystudio.itch.io/fluidframesrife](https://jangystudio.itch.io/fluidframesrife)\n\n# NEW\n\n* Added the ability to create slowmotion videos, selectable from the 'AI generation' widget\n* The app is now offered in 2 different packages:\n   * Portable .exe | single, portable .exe file\n   * Portable folder | portable folder with all libraries, files and utilities\n\n## GUI\n\n* Updated info widget descriptions\n\n## BUGFIXES / IMPROVEMENTS\n\n* The app will save thr generated video different tags (x2, x4, x2-slowmotion, x4-slowmotion) according to the user's choice\n* Optimized AI models, will now use fewer resources\n* Setted .log file permissions to 777 (maximum permissions), this should solve the problem of reading and writing this file\n* Setted temp folder permissions to 777 (maximum permissions), this should solve the problem of reading and writing in this folder\n* General bugfix and improvements\n* Updated dependencies\n\nExample.\n\n* Original\n\nhttps://reddit.com/link/124s64e/video/ic4gaa3tyhqa1/player\n\n* Fps x2\n\nhttps://reddit.com/link/124s64e/video/9xteiyttyhqa1/player\n\n* Slowmotion x2\n\nhttps://reddit.com/link/124s64e/video/8q5nbruuyhqa1/player", "score": 2}, {"text": "Accessible and lightweight theme for Pelican. ", "score": 10}, {"text": "I made a tool for generating library cover images with the same font/styling as Jellyfin's.. &gt; ***Code:*** https://github.com/eebette/Jellyfin-Tools\n&gt; Most of the action happens in the `cli` directory\n\nI've been playing around with `argparse` and figuring out how to build CLI's for a little while now, but no finished projects yet, so I decided to take on a (relatively) simple one to finally check that box and also solve a pain-point in my life!\n\nFor those of you unfamiliar with Jellyfin, it is a FOSS media library server software, not too much different than it's less open-source predecessor Plex. Plex is built on .NET/C# so instead of trying to build this functionality into a plugin, I just created a quick and easy CLI for it instead. All feedback welcome!!\n\n---\n\n# TL;DR\n\n## Install\n\n`pip install jellyfin-tools`\n\n## Use\n\n`jellyfin-cover --image /path/to/image.png --title Library`\n\n# Overview\n\nThis library is meant to contain all of the tools I use to manage my Jellyfin library, but right now the only one that I think is ready is my CLI `jellyfin-cover`, that generates library art in the same styling/font that Jellyfin uses. From there, just use Jellyfin's GUI to manually upload your image as your library cover and you're all set!\n\nI made this inspired by [posts like these](https://www.reddit.com/r/jellyfin/comments/pfxq5d/changing_default_library_images/), and was annoyed that I either had to hope for a cover I would enjoy or live with whatever one was provided to me. I'm a Linux/command line guy but not a .NET/C# guy so instead of a plugin I just made a simple CLI. \n\n**Please** if you have a github account, I would really appreciate a star or a follow on the project. Or don't! \n\nLet me know if you have any quesitions or feedback!", "score": 10}, {"text": "Building a Remote Controlled Skateboard Ramp in Python. ", "score": 2}, {"text": "Hikaru 1.0.0 released. Hikaru provides a variety of tooling to work with Kubernetes configs in Python, YAML, or JSON, allowing you to move smoothly between each of these representations, and can also use the Python representation to directly interact with Kubernetes. Hikaru helps you migrate from YAML, easily create watches, detect changes in configuration, create CRDs and their controllers, and more. You can find out more Hikaru here at the PyPI page:\n\n[https://pypi.org/project/hikaru/](https://pypi.org/project/hikaru/)\n\n...at the Github repo:\n\n[https://github.com/haxsaw/hikaru](https://github.com/haxsaw/hikaru)\n\n...or read the full doc at ReadTheDocs:\n\n[https://hikaru.readthedocs.io/en/latest/index.html](https://hikaru.readthedocs.io/en/latest/index.html)\n\nHikaru 1.0.0 adds support for custom resource definitions. Hikaru now supports:\n\n* The ability to define the structure of a CRD with Hikaru classes, either from scratch or to mimic one that is already in your environment,\n* Sending the defintition into Kubernetes where it will be established as a CRD managed by K8s,\n* Managing instances of the new CRD using CRUD methods,\n* Establishing Watchers on the new CRD to in order to monitor activity or create controllers in Python, and\n* The use of CRD classes as context managers, just like other Hikaru document classes.\n\nThis all works smoothly with the existing Hikaru features. Full documentation for these new features can be found in the \"Advanced Topics\" section of the Hikaru docs.\n\nThis release still contains support for the same set of Kubernetes releases, 23.x through 26.x.", "score": 166}, {"text": "What is best for making own language in python interpreter , terminal or compiler just asking for gernel knowledge nothing else. ", "score": 0}, {"text": "Debugging script without any documentation. Hi,\n\nI just landed my first job as a programmer (yay), and one of my assignments is to maintain some scripts a guy from IT created in python.\n\nSo the things is - the guy from IT created the scripts without any comments or any other sort of documentation and it's like 300 lines of compact code with functions calling other functions which again calls other functions.  \nIts mainly datajuggling in Pandas and honestly the dataframes are a mess.\n\nDo you guys have any good advice for a newbie in regards to debugging such files?", "score": 82}, {"text": "Simple but useful decorators to save input of a file as pickle. Hey there,\n\nI wanted to share some easy to make but useful decorators. Namely, decorators which save or lead the input of a function as a pickle file.\n\nJust add the decorator to your function and it saves the input. When you use the load decorator later it uses this input.\n\nThis is ideal for me for debugging and prototyping, as I really do not like to use notebooks.\n\nHere is the code to use these for yourself: [https://gist.github.com/jeroenvermunt/a181fab7ba8683460f46ee2135b56bc7](https://gist.github.com/jeroenvermunt/a181fab7ba8683460f46ee2135b56bc7)\n\nCurious to hear your thoughts!", "score": 1}, {"text": "Does anyone have recommendations on where to stay for PyData Seattle?. Hi folks, our team is looking at where to stay for PyData Seattle and we are debating whether to be near the conference center or around Capitol Hill. It looks like staying in Capitol Hill could be nice and fun but at the expense of dealing with traffic to and from the conference, while staying near the conference center is convenient but there is not much to do for after the conference.   \n\n\nWhat other people are doing?", "score": 0}, {"text": "Building Machine Learning-Enabled Web Applications with Django and Scikit-Learn Introduction. ", "score": 4}, {"text": "API Access and Token Introspection with OpenID Connect in ZITADEL. ZITADEL is an open source Identity and Access Management (IAM) platform that provides authentication and authorization services. \u200b\u200bYou can secure APIs and authorize applications  to access these protected APIs on ZITADEL with[ ](https://twitter.com/hashtag/OIDC?src=hashtag_click)OpenID Connect.\n\nPython code samples to secure your APIs and access protected APIs as a back-end application using ZITADEL can be found here: [https://github.com/zitadel/examples-api-access-and-token-introspection](https://github.com/zitadel/examples-api-access-and-token-introspection)\n\nHere's the related blog post: [https://zitadel.com/blog/api-access-and-introspection](https://zitadel.com/blog/api-access-and-introspection)", "score": 10}, {"text": "A small toolkit used for collecting responses from ChatGPT for research / data analysis. &amp;#x200B;\n\n[Cute logo](https://preview.redd.it/h7y3tme2wjqa1.png?width=414&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=1d888fddb1d43b82faf8f55ed702c0b1f3ca0a35)\n\nLink: [https://github.com/aardoh/sleepyask](https://github.com/aardoh/sleepyask)\n\nChatGPT rate limits the number of questions users may ask. The goal of this project is to allow users to just leave their computers on for extended periods of time to collect large amounts of responses from ChatGPT. Contributions are welcome! \ud83e\udd17   \n\n\nFeatures: \n\n\\- The ability to ask several questions across multiple threads. With this, I managed to get 1000 questions in less than a minute by asking ChatGPT questions across multiple threads.\n\n\\- It tries again and again until it finishes its task. This means that if you have a large dataset, you can just leave your computer on. It recovers from errors and just keeps trying again and again.\n\n\\- It logs **everything**. Which ChatGPT model it used, the temperature, max tokens, tokens used, etc.\n\n\\- I also fixed a few problems a while back where multiple threads might write to the output file at the same time and mess up the output.", "score": 0}, {"text": "For Fun: Building an Algo with TF and Keras to Read the News and Predict Stock Prices. ", "score": 0}, {"text": "Seeking early feedback on MegaMock - a dev experience upgrade to mocking. Hello! I've been working on a project called [MegaMock](https://github.com/JamesHutchison/megamock) that upgrades the developer experience when working with mocks! Some of the key features:\n\n* You pass in objects and functions, not strings, so IDE tools like \"rename\", \"go to definition\", \"find references\", etc will work seamlessly\n* When you pass in an object as a spec, it's automatically auto-speced.\n* When you use patch, all locations are patched, so you don't need to worry about how the object was imported in the module that uses the thing in question.\n* The generated types are a union of the mock and the type, so auto-complete is available via the IDE\n* If you mock out a class entirely, you can restore the real logic for certain methods, as demonstrated in the image below.\n\n&amp;#x200B;\n\nhttps://i.redd.it/wpit0m2xddqa1.gif\n\nDespite working on this for a while, I know there are still gaps in functionality, but I'm putting this out here to get an idea if things are moving in the right direction. Input and feedback is highly appreciated, let me know the first thing to give you an issue, and whether the documentation is clear enough.\n\nIf anyone is interested in helping me maintain the project, just let me know.\n\nIf you find problems, feel free to create an issue.\n\nThanks!\n\n[https://github.com/JamesHutchison/megamock](https://github.com/JamesHutchison/megamock)", "score": 22}, {"text": "Has anyone done the onlc intro to python course?. Python programming level 1: introduction for programmers course\n\nI'm thinking about taking this since it says youll have a live instructor led training but have seen some reviews for other courses online that is giving me pause...", "score": 0}, {"text": "I made a file manager in python. Here is the github link: \n\n[https://github.com/Tristan296/FileManager](https://github.com/Tristan296/FileManager)", "score": 17}, {"text": "Geometry dash, in Python!. Download: [https://github.com/Rotengen/geometrydashinpython](https://github.com/Rotengen/geometrydashinpython)\n\n&amp;#x200B;\n\nThis took a long journey, but I'm glad it worked out.\n\nhttps://reddit.com/link/124qchh/video/lejmhhdsohqa1/player", "score": 1}, {"text": "Building A Custom Geocoding Service With Autocomplete Using Python, PostGIS, And OpenLayers For Address Lookup. &amp;#x200B;\n\n[Building A Custom Geocoding Service With Autocomplete Using Python, PostGIS, And OpenLayers For Address Lookup](https://i.redd.it/b0itqclauaqa1.gif)\n\n[Building A Custom Geocoding Service With Autocomplete Using Python, PostGIS, And OpenLayers For Address Lookup](https://spatial-dev.guru/2023/03/15/building-a-custom-geocoding-service-with-autocomplete-using-python-postgis-and-openlayers-for-address-lookup/)", "score": 68}, {"text": "docked: A friendly and safe alternative to Dockefile. Write Docker images using the full power of Python.. ", "score": 47}, {"text": "Interactive command line ai tool powered by ChatGPT (ChatGPT 3.5). https://github.com/knid/ais/", "score": 0}, {"text": "Introducing gptty v0.2.1 - A Powerful CLI Wrapper for ChatGPT with Context Preservation &amp; Query Support, Now on PyPI!. Hey Reddit! \ud83d\ude80\n\nI'm excited to share with you the latest version of **gptty** (v0.2.1), a context-preserving CLI wrapper for OpenAI's ChatGPT, now with a handy `query` subcommand and available on PyPI!\n\n\ud83d\udd17 **GitHub:** [https://github.com/signebedi/gptty/](https://github.com/signebedi/gptty/)\n\n\ud83d\udd17 **PyPI:** [https://pypi.org/project/gptty/](https://pypi.org/project/gptty/)\n\n**What's new in gptty v0.2.1?**\n\n\ud83d\udcda **The Query Subcommand**: The `query` subcommand allows you to submit multiple questions directly from the command line, making it easier than ever to interact with ChatGPT for quick and precise information retrieval (and also has a pretty cool loading graphic).\n\n[Scripting the \\`query\\` subcommand to pass multiple questions](https://preview.redd.it/qw6q6mame7qa1.png?width=1661&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=3a1aad3b9b61babc439ccb0a3a77aa792501cd3e)\n\n\ud83c\udff7\ufe0f **Tagging for Context**: gptty enables you to add context tags to your questions, helping you get more accurate responses by providing relevant context from previous interactions. This is useful for generating more coherent and on-topic responses based on your tags.\n\n\ud83d\udce6 **PyPI Deployment**: gptty is now available on PyPI, making it super easy to install and get started with just a simple `pip install gptty`.\n\n**Why should developers choose gptty?**\n\n\ud83c\udfaf **Focus on Delivered Value**: gptty is designed to help developers, data scientists, and anyone interested in leveraging ChatGPT to get the most value out of the API, thanks to context preservation, command-line integration, and new query feature.\n\n\ud83d\udee0\ufe0f **Ease of Use &amp; Flexibility**: gptty offers an intuitive command-line interface (running [click](https://click.palletsprojects.com/en/8.1.x/) under the hood), making it simple to interact with ChatGPT, either for quick one-off questions or more complex, context-driven interactions. Plus, it can be easily integrated into your existing workflows or automation scripts.\n\n[\ud83d\udcaa](https://emojipedia.org/emoji/%F0%9F%92%AA/) **Localize Chat History**: gptty stores your conversation history in a local output file, which is structured as a CSV. This means that you can still access past conversations, even when the ChatGPT web client is down, and you have more flexibility over how to select from that data to seed future queries.\n\n\ud83e\udde0 **Harness the Power of ChatGPT**: By combining the capabilities of ChatGPT with gptty's context-preserving features and query support, you can unlock a wide range of applications, from answering technical questions to generating code snippets, and so much more.\n\n\ud83d\udd00 **Support for All Completion Models**: gptty currently supports all [Completion models](https://platform.openai.com/docs/models/model-endpoint-compatibility), providing developers with the flexibility to choose the model that best suits their specific use case or application. This ensures that you can make the most of the OpenAI API and its various models without having to switch between different tools.\n\n\ud83d\udd0c **Planned Plug-and-Play Support for ChatCompletion Models**: We're working on adding plug-and-play support for [ChatCompletion models](https://platform.openai.com/docs/models/model-endpoint-compatibility) (including GPT-4 and GPT-3.5-turbo). This means that you'll be able to seamlessly integrate GPT-4 into your gptty setup and continue leveraging the power of the latest generation of language models.\n\nTo get started, simply install gptty using `pip`:\n\n    pip install gptty\n\nCheck out the **GitHub repo** for detailed documentation and examples on how to make the most of gptty: [https://github.com/signebedi/gptty/](https://github.com/signebedi/gptty/). You can also see my original post about this [here](https://www.reddit.com/r/Python/comments/11w7lw6/check_out_gptty_a_cli_wrapper_for_chatgpt_written/).\n\nHappy coding!\n\n**Edit**. Please forgive the cringe worthy emoji use. My lawyer informed me that, as a python / pypi developer, I was legally obligated to add them.\n\n**Edit2.** Added support for ChatCompletions in 0.2.3! [https://pypi.org/project/gptty/0.2.3/](https://pypi.org/project/gptty/0.2.3/).", "score": 230}, {"text": "ChatGPT + Selenium - Login+Captcha Bypass. ", "score": 0}, {"text": "Relieving your Python packaging pain. ", "score": 0}, {"text": "Extracting Data from Wikidata Using SPARQL and Python. ", "score": 11}, {"text": "ckit: Create a user interface for your frequently used commands with simple yaml files.. ", "score": 43}, {"text": "Flask input validation into SQL, but still getting to work with the raw SQL INSERT.  Greetings how is everyone doing I am very enthusiastic about using flask as an API, now what is the best route to go when it comes to input validation into SQL server, I know you will say sqlalchemy orm but I want my developers to learn SQL so were using raw sql for the most part, can the sqlalchemy orm itself validate input that will go into SQL or I will need another solution for that", "score": 7}, {"text": "v0.2.0 Envio - The Trending Modern And Secure CLI Tool You Absolutely Need For Your Environment Variables. ", "score": 0}, {"text": "Tuesday Daily Thread: Advanced questions. Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.\n\n**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.", "score": 3}, {"text": "Which GUI module is better in Python? tkinter or PyQt or kivy?. ", "score": 96}, {"text": "The beginner questions man\u2026. Asking people to read a single sentence of the sub description is clearly too much\u2026\nWhat would really hit the spot would be a sort of pre-commit hook on posting with an LLM judging the authors proficiency.\nIf less than 3 days of experience: auto redirect to r/learnpython or better yet stackoverflow.\n\nHow are people entitled enough to think that others want to solve their homework for them in their free time?", "score": 0}, {"text": "How to Read Python Input as Integers \u2013 Real Python. ", "score": 0}, {"text": "How to Build Python Media Player with PyQt5. In this Python PyQt5 article we want to learn How to Build Python Media Player with PyQt5, Python is powerful language that can be used for different types of applications including creating multimedia applications. PyQt5 is popular Python library that allows developers to create graphical user interfaces for desktop applications. in this article we want to talk about how to build Python media player with PyQt5.\n\n&amp;#x200B;\n\nYou can check the complete tutorial in the below link\n\n[https://geekscoders.com/how-to-build-python-media-player-with-pyqt5/](https://geekscoders.com/how-to-build-python-media-player-with-pyqt5/)", "score": 15}, {"text": "I appreciate all the support of Part 1. Here's Part 2 of creating my own dividend tracker using yahoo-fin instead of yfinance which has been giving me problems. In this video, I get the monthly dividend and plot it out temporarily using matplotlib and will be in plotly dash next video. Enjoy!. ", "score": 3}, {"text": "I Build a very simple Dalai Alpaca Instruction Bot with Python as Proof of Concept.. I build a very simple Instruction Bot as a proof of concept. Out of Dalai and Alpaca. You can find it here:  \n[https://github.com/Maximilian-Winter/DalaiDiscordChatBot](https://github.com/Maximilian-Winter/DalaiDiscordChatBot) \n\nhttps://preview.redd.it/kqpeuwflmcqa1.png?width=1368&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=d10b4a2a52d273daac139d43920aab818ef57fcc", "score": 0}, {"text": "What is the your biggest problem while coding? (Please leave a comment). ", "score": 1}, {"text": "gRPC and Pydantic. We want to implement the following architecture:\n\nThe model will be defined per service as PyDantic model, using their validation infrastructure.\n\nThen of this model we want to generate gRPC (pb2) to communicate between services (internal).\n\nThen we will have one service called \"api-gateway\" which will be implemented in FastAPI, and will include the endpoints that we are exposing to the public. This endpoints will have the OpenAPI decorators using FastApi infrastructure. The implementation of the endpoints will be a relevant gRPC call to the service.\n\nThis allows us to:\n\n1. Keep one source of truth for validation &amp; modeling\n2. Generate inter communication\n3. Generate public documentation and have a good control of what we are exposing\n\nTo make it work we need to:\n\nIn the micro service level use FastAPI so it will generate a json schema of our functionality -&gt; convert this to proto using openapi-generator (java) -&gt; use grpc\\_tools.protoc to generate the clients (python)\n\nThis is obviously ugly. As the source PyDantic is a schematic language and I already have the interface. FastAPI is used only for openAPI generation and not for HTTP (in the micro services) Too many conversions.\n\n**Does anyone knows a way to convert pedantic to a gRPC communication?**", "score": 3}, {"text": "I created Pamet - a FOSS desktop app for organizing thoughts and notes. Github: [https://github.com/v-ko/pamet](https://github.com/v-ko/pamet)\n\n  \nThere's a gazillion note taking apps, I know, but when I started the project - there was none with the GUI I imagined. Currently Miro is pretty close, but it's closed source and it's not possible to keep your data locally, so that's the main reason I continued developing Pamet.\n\n&amp;#x200B;\n\n[Demo](https://i.redd.it/m0fwjov3j4qa1.gif)\n\n# A bit of history\n\nI couple of years ago I began rewriting the app from C++/Qt to Python/Qt (PySide6). I started out with over-engineering and over-thinking it, drowning in the cross-platform-GUI swamp of technologies and so on. In the end I decided I'll use mainly Python (since I use it for work and also I love the syntax). I would try to be noobishly DRY and the reuse the actions/states with Brython in the browser and then Cordova for mobile (sounds like a great debugging experience right?).\n\nSo some time passed, I stripped my gui-architecture ambitions to a state manager ([Fusion](https://github.com/v-ko/fusion)) and finished the initial version of the app.\n\nIn retrospect - I should've done the standard thing nowadays - make a web frontend (e.g. React) with an Electron desktop app and whatever for mobile. I'll probably transition in that direction in time. But for now - I'm happy with the results.\n\n# Capabilities and philosophy\n\n(\"Pamet\" means memory in Bulgarian.)The main idea is to have 2D map-like pages (pan, zoom navigation) with notes, that can be made and styled fast. There's hyperlinking between different pages. There's a backup service by default (though restoring backups is manual for now). You can import images (audio, video - not yet implemented). You can have web links as notes, as well as activate scripts (open by double-click). Most of the testing is done on Linux. The Windows build is outdated ATM, so I'd recommend a PyPI install.\n\nI have yet to showcase the way I'm using the app, but I beilieve that everyone makes their own pattern  in time. The 2d plane + hyperlinking GUI is the UI closest to the way I connect concepts in my mind, and organize clusters of them.\n\nPamet is not supposed to be a do-it-all program, but rather it should serve for organizing ideas, \"second-brain\" is fitting buzzword right now. But it won't try to be a spreadsheet editor, image editor, specialized kanban, etc. For example right now you can import images, but editing them is done by double-clicking them to open the file, and then using whatever software you have. So the point is to keep references and possibly previews of external resources, but integrate with the existing tools, rather than reinvent the wheel.\n\n# I'd appreciate feedback\n\nThe project is still quite immature. I've been using it daily for quite a while now, but I realize that my habits are a niche, so I don't expect it would be applicable for everyone. I'd be thankful for any and all constructive feedback. About the interface, about the code, about what similar software you're using, etc.\n\n# Still this is not exactly a release\n\nI wouldn't dub this post a release, since there's quite some more work to be done. The user documentation is quite minimal. Installation is done only from PyPI or source. It's mostly a showcase. But I've put quite a lot of work in the project, and I really wanted to put it out there and get feedback.", "score": 67}, {"text": "I've made a simple and extendable utility to perform tests coverage analysis. I'm a QA Engineer and I need to check coverage for each test suites I'm making. I think this part of tests production is quite important for making quality tests.\n\nDue to points above I need to have an utility to make this analysis fast, simple and repetitive so I've made this utility - simple to use, tested, convenient to extend.\n\nGitHub repository: [QACoverageTool](https://github.com/MostHappyCougar/QACoverageTool)\n\nAt the version 0.1.1 have been relized following analysis approaches:\n\n* State-Transitions diagram - may be applicable for tests that follow *All-States, All-Transitions* coverage criterias\n* Pivot Table - may be applicable for tests that follow *n-wise* coverage criteria\n\nYou may check use cases here: [QACoverageTool Wiki - Analysis Mods](https://github.com/MostHappyCougar/QACoverageTool/wiki/Analysis-mods)\n\nI hope this utility may be useful for you also", "score": 8}, {"text": "Starlite updates March '22 | 2.0 is coming. **Disclaimer**: It says \"March '22\" in the title but it should say \"March '23\". The new are from today, not a year ago.\n\nHello fellow Pythoneers, \nit's time for me to once more talk about Starlite for a bit!\n\n## Recap\n\nWhat's Starlite?\n\nStarlite is a flexible and highly performant ASGI framework, focused on building APIs\nwhile delivering great developer experience by offering ready-built solutions for \ncommon tasks such as ORM integration, caching, session management, key/value stores,\nOpenAPI-schema generation and interactive API docs, type safety and much more.\n\nYou can read more about Starlite's features in our [documentation](https://docs.starliteproject.dev)!\n\nSo what's new?\n\n\n## Starlite 2.0 on the horizon\n\nIt's been over two months since \n[we announced](https://www.reddit.com/r/Python/comments/108aq5b/starlite_development_updates_january_23/)\nStarlite `2.0`, more as a side note than major news, so it's about time to see how \nthings are going!\n\nFirstly, as with any proper project, there has been a *slight* feature creep, and\nthe `2.0` update will be a bit more involved as initially expected. But we have it under\ncontrol. We can stop at any time. I promise.\n\nJokes aside, the announcement still holds true: Starlite 2.0 retains most of its core \nfunctionality, and from a user perspective, not a lot has to change when upgrading \nyour app from `1.x` to `2.0`; If you don't want to make use of new features, the upgrade\npath will mostly consist of changing some import paths and slightly adjusting a few \nconfiguration values. \n\nBut let's take a look at what has changed, and what is yet to come.\n\n\n## Adieu Pydantic\n\nStarting with the release of `2.0.0alpha1`, Starlite replaced most of its internal models\nthat relied on Pydantic (mostly with data- or plain classes). In the following releases\nleading up to `2.0`, we will remove the last dependencies on Pydantic, and you can\nuse Starlite completely Pydantic-free.\n\nBut why?\n\nThe main motivations behind this were performance improvements and flexibility:\n\n\n**Performance**\n\nPydantic is a great library, but being fast is not one of its strengths. Its performance \nwill likely increase drastically in version 2.0, with the \n[core validation logic written in Rust](https://docs.pydantic.dev/blog/pydantic-v2/#performance), \nbut early tests indicate that it will likely still be slower than other libraries when \nit comes to (de)serialization. \n\nIn many cases this might not be an issue, but having the option to switch to an \nalternative if desired is still a valuable option, and can have significant impact on\nthe overall performance of an application.\n\n\n**Flexibility**\n\nPydantic is by far not the only library of its kind, with prominent members of the \nsame class being [attrs](https://www.attrs.org/), [cattrs](https://catt.rs/) or even \nplain [dataclasses](https://docs.python.org/3/library/dataclasses.html) for some use \ncases. \n\nStarlite currently only supports modelling data with Pydantic, which means this will\nnecessarily force an integration of Pydantic into the rest of the application's layers,\nbe it by directly using Pydantic models there, or simply the need of an additional\n\"translation layer\".\n\nBy removing Starlite's reliance on Pydantic, we're opening doors to a new, more \nflexible type of integration, which will ultimately allow to plugin in arbitrary\nmodelling libraries.\n\n\n**Does this mean I won't be able to use Starlite with Pydantic anymore?**\n\nNo. Starlite will continue to support Pydantic modelling of any kind, and you'll be able\nto keep using Pydantic models everywhere you've used them before. \n\nPydantic will be removed as a core dependency eventually, which means Starlite will be\nable to run without it, but there are no plans to stop supporting it.\n\n\n## All new DTOs\n\n[DTOs](https://docs.starliteproject.dev/1/usage/dto.html) will become more integral in \nStarlite 2.0, taking care of most of the data conversion between various types of models.\n\nThis feature is yet to be released, but it will allow you to seamlessly use data modelled\nwith for example Pydantic, [SQLAlchemy](https://www.sqlalchemy.org/), \n[msgspec](https://jcristharif.com/msgspec/) or \n[dataclasses](https://docs.python.org/3/library/dataclasses.html) in your route handlers,\nwithout the need for an intermediary model; The conversion will be handled by the specific\nDTO \"backend\" implementation. This new paradigm also makes it trivial to add support for \nany such modelling library, by simply implementing an appropriate backend.\n\n\n## emit(\"We have an event bus now\")\n\nStarting with the first alpha release  - `2.0.0alpha1` -, Starlite includes a simple\nevent bus that can be used to emit and receive events, supporting both synchronous\nand asynchronous listeners. Currently only a basic in-memory, per-process backend is \nincluded, but future versions will add support for inter-process communication by\nadding backends for [Redis](https://redis.io/), [RabbitMQ](https://www.rabbitmq.com/) and \nothers.\n\nThis is an exciting new feature, as it allows powerful patterns such as websocket \nbroadcasting, or can, in combination with \n[background tasks](https://docs.starliteproject.dev/1/usage/responses.html#background-tasks), \neliminate the need for external task queues such as [celery](https://docs.celeryq.dev/)\nor [arq](https://arq-docs.helpmanual.io/).\n\n\n## Data stores\n\nAnother exciting new feature coming in 2.0 are the all new, fully integrated\n[data stores](https://docs.starliteproject.dev/2/usage/stores.html). They are simple\nkey/value stores, including backends for the file system, memory, or common key/value\ndatabases like [Redis](https://redis.io/). \n\nThese stores are managed centrally by a \n[registry](https://docs.starliteproject.dev/2/usage/stores.html#managing-stores-with-the-registry), \nproviding easy configuration, isolation and a hierarchical structure via \n[namespacing](https://docs.starliteproject.dev/2/usage/stores.html#namespacing), and \nintegration with third parties such as plugins. Via the registry it's possible to easily\naccess stores used by various built-in features such as rate-limiting or request \ncaching, making them available throughout the entire application context.\n\n\n## What else is new?\n\nTo keep this post (relatively) brief I won't mention all the changes going into `2.0`,\nso if you want to know everything that's changed until now, you can take a look at\nthe detailed [2.x changelog](https://docs.starliteproject.dev/2/release-notes/changelog.html#2.0.0alpha1-misc), \nwhich includes all the currently released changes, features (and bugfixes).\n\n\n## What's left to do\n\nThere are a few more things that have to be done before Starlite 2.0 will be released.\nYesterday the second alpha version ([`2.0.0alpha2`](https://github.com/starlite-api/starlite/releases/tag/v2.0.0alpha2)) \nhas been released, but it won't be the last development release before `2.0.0`. \n\nA few major items on the 2.0 todo-list currently are:\n\n- Finishing new DTO implementation\n- New signature modelling backend using [attrs](https://www.attrs.org/)\n- Remove the remaining parts that rely on Pydantic\n- Writing a migration guide for `1.x` &gt; `2.0`\n- Writing tutorials / prose documentation for the SQLAlchemy repository\n\nand of course lots of minor issue that need taking care of.\n\nThere is no set release date for `2.0`, but as things are currently going, I expect\none more alpha release before the first beta version comes out. At this point, no more\nbreaking changes will be introduced, allowing the beta to be tested for a while before\nit can be considered stable and ready for the final release.\n\nAnd as always, if you want to get involved or in touch, check out Starlite on [GitHub](https://github.com/starlite-api/starlite/) or [join our Discord](https://discord.gg/X3FJqy8d2j)!", "score": 184}, {"text": "my first rock paper scissors game as a python newbie (code is not that great but it works).     import random\nfrom random import *\n\n    print(\"Rock, Paper, Scissors!\")\nplayerturn = int(input(\"1 for Rock, 2 for Paper, and 3 for Scissor: \"))\n\n    if playerturn == 1:\n print(\"You Chose Rock!\")\nelif playerturn == 2:\n print(\"You Chose Paper\")\nelse:\n print(\"You Chose Scissors\")\n\n    botturn = randint(1, 3)\n\n    if botturn == 1:\n print(\"They Chose Rock!\")\nif botturn == 2:\n print(\"They chose Paper!\")\nif botturn == 3:\n print(\"They Chose Scissors!\")\n\n    if playerturn == botturn:\n print(\"Tie!\")\nif playerturn == 1 and botturn == 2:\n print(\"You Lose!\")\nif playerturn == 1 and botturn == 3:\n print(\"You Win!\")\nif playerturn == 2 and botturn == 1:\n print(\"You Win!\")\nif playerturn == 2 and botturn == 3:\n print(\"You Lose!\")\nif playerturn == 3 and botturn == 1:\n print(\"You Lose!\")\nif playerturn == 3 and botturn == 2:\n print(\"You Win!\")", "score": 0}, {"text": "I didn't like that Pandas doesn't have a .notin method, so I made it myself.. This is the repo: [https://github.com/lucas-abbate/not-in-pandas](https://github.com/lucas-abbate/not-in-pandas).\n\nI made a PR on the pandas project but core developers didn't approve it because it is redundant and Series and DataFrame tons of methods.\n\nI always thought that if .notna exists, then .notin should exist. I find myself negating .isin all the time, and it adds readability, specially when there are nested conditions, where it's difficult to read what are you exactly negating.\n\nAny ideas are welcome.", "score": 0}, {"text": "Created my first project 'macpip'. Wrote my first original python project. It's a CLI tool you can use to output a list of your installed macOS apps in requirements format. I got a new MacBook and never install from backup, wished I could just pip freeze my list of apps from the original device. So I created a little tool to do that and a bit more.\n\nFor apps that can be found in the App Store I used mdls to get the bundleID and then used apples lookup api to surface App Store links in the lookup alongside the app.\n\nFor apps that can not be found in the App Store, I use googlesearch-python to pull in the first google result for app name + bundleID + download which I've found to be pretty good at surfacing the download link for most apps.\n\nusage:\n\n`macpip freeze &gt; apps.txt`\n\nexample output:\n\n`, 1Password -` [`https://apps.apple.com/us/app/1password-8-password-manager/id1511601750?uo=4`](https://apps.apple.com/us/app/1password-8-password-manager/id1511601750?uo=4)\n\n`, Figma -` [`https://www.figma.com/downloads/`](https://www.figma.com/downloads/)\n\n`, Xcode -` [`https://apps.apple.com/us/app/xcode/id497799835?mt=12&amp;uo=4`](https://apps.apple.com/us/app/xcode/id497799835?mt=12&amp;uo=4)\n\n`, Magnet -` [`https://apps.apple.com/us/app/magnet/id441258766?mt=12&amp;uo=4`](https://apps.apple.com/us/app/magnet/id441258766?mt=12&amp;uo=4)\n\n  \nI've still got a few basic things to change:\n\n1.\tlocalize search results - currently I accept country code as an arg but don\u2019t use it in the non-bundleID search implementation\n2.\trewrite search lookup to not use the googlesearch-python lib to see if I can speed up execution\n\nWould love any tips/feedback even though it's fairly basic: \n\n[https://test.pypi.org/project/macpip/](https://test.pypi.org/project/macpip/)\n\n[https://github.com/mubranch/macpip](https://github.com/mubranch/macpip)\n\n\nEdit: fixed typo and shortened example output", "score": 10}, {"text": "I made a Data Science project (Time Series Analysis Methods - Data Analysis &amp; Machine Learning) using Python and uploaded it to the Youtube. I uploaded a full data science project which I do time series analysis and forecast in the video using Python. I explained how codes work and time series applications in video. Have a nice day, here is the link:\n\n[https://www.youtube.com/watch?v=euHSHN\\_hFX0](https://www.youtube.com/watch?v=euHSHN_hFX0)", "score": 5}, {"text": "py-template: one-click Python environment v0.2.0 update. Hey again,\n\nOriginal post with more context [here](https://www.reddit.com/r/Python/comments/yu4ynu/pytemplate_oneclick_extensive_github_actions/).\n\n## TLDR - what is it?\n\n[py-template](https://github.com/inovintell/py-template) is a [GitHub Template repository](https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-template-repository) for Python, which provides:\n\n- Opinionated linting, autoformatting, etc. (this update changes [flake8](https://flake8.pycqa.org/en/latest/) to substantially faster [ruff](https://github.com/charliermarsh/ruff)\n- CI/CD, test coverage, automated documentation creation\n- [pre-commit](https://pre-commit.com/) integration for easy local development similar to pipelines\n- Automated dependency management via `poetry`, [renovatebot](https://github.com/renovatebot/renovate)\n\nThis update also includes more extensive documentation describing how to adjust the template to your liking (e.g. consistent Python versioning, `shell` aliases for one click setup and more), click [here](https://inovintell.github.io/docs-template/py-template/setup/) to check our docs.\n\nWe hope you are gonna find it as useful as we do (and if so, star/follow is always appreciated), thank you!", "score": 36}, {"text": "What are your thoughts on Codon compiler having a paid licence?. ", "score": 147}, {"text": "10 highly effective BI dashboards that you can build with Python. Hey folks,\n\nAs a freelancer, I have built multiple dashboards for a lot of clients. I decided to combine all of them together into a blog.\n\nThe 10 plots and problem scenarios discussed in my blog are:-\n\n1. [Line Chart](https://www.pylenin.com/blogs/data-analytics-with-matplotlib/#line-chart) \\- How has the news paradigm in India shifted over the last 10 years?\n2. [Stacked Area Chart](https://www.pylenin.com/blogs/data-analytics-with-matplotlib/#stacked-area-chart) \\- What are the total sales generated by an MNC across all its market during the last year?\n3. [Bar Chart](https://www.pylenin.com/blogs/data-analytics-with-matplotlib/#bar-chart) \\- What is the YoY(Year-on-Year) monthly sales comparison for a company?\n4. [Pie Chart](https://www.pylenin.com/blogs/data-analytics-with-matplotlib/#pie-chart) \\- What was the approval % of a bill introduced in the winter session of Parliament?\n5. [Scatter Plot ](https://www.pylenin.com/blogs/data-analytics-with-matplotlib/#scatter-plot)\\- How does the rent of a house vary with the house size?\n6. [Bubble chart](https://www.pylenin.com/blogs/data-analytics-with-matplotlib/#bubble-chart) \\- How deadly(fatality rate) and widespread(number of fatalities) is a particular disease?\n7. [Candlestick](https://www.pylenin.com/blogs/data-analytics-with-matplotlib/#candlestick) \\- How has Nifty 50 performed on the National Stock Exchange in the month of October?\n8. [Timeseries](https://www.pylenin.com/blogs/data-analytics-with-matplotlib/#timeseries) \\- What is the distribution of \"Close\" value of Nifty 50 for the last 1 year?\n9. [Histograms](https://www.pylenin.com/blogs/data-analytics-with-matplotlib/#histograms) \\- What is the gender-wise distribution of students' height in a school?\n10. [Heatmap](https://www.pylenin.com/blogs/data-analytics-with-matplotlib/#heatmap) \\- What is the Monthly Recurring Revenue(MRR) retention of a company?  \n\n\nI have also added a [lot of helper articles](https://www.pylenin.com/tags/matplotlib/) for getting acquainted with plotting libraries in Python. Check them out!", "score": 0}, {"text": "I developed a CLI tool for querying CSV, Parquet and JSON files. Filequery is an open source CLI tool I've been working on so I can easily use SQL to query CSV, Parquet and JSON files. I wrote this as a Python package which is essentially a wrapper around DuckDB. This lets you one or more queries against a file or a directory containing files and see the result in the terminal. You can also save the query results as CSV or Parquet files.\n\nOpen to feedback and suggestions.\n\n[https://pypi.org/project/filequery/](https://pypi.org/project/filequery/)", "score": 35}, {"text": "Go Check Out My Cool Web3 &amp; Trading Dapp Available On Pypi. I'd like to share with you \"wuddz-dapp\", an awesome (D)app I wrote when all the buzz &amp; craze was going on about web3 and crypto it has served me quite well, added a few new updates to it and posted it on my github, it's also available on pypi for anyone who may find it useful. Kindly star the repo, btw I updated the web3 methods if I missed any please let me know.\n\nPeace &amp; Love\n\n[https://github.com/wuddz-devs/wuddz-dapp](https://github.com/wuddz-devs/wuddz_dapp)", "score": 0}, {"text": "Monday Daily Thread: Project ideas!. Comment any project ideas beginner or advanced in this thread for others to give a try! If you complete one make sure to reply to the comment with how you found it and attach some source code! If you're looking for project ideas, you might be interested in checking out Al Sweigart's, [\"The Big Book of Small Python Projects\"](https://inventwithpython.com/bigbookpython/) which provides a list of projects and the code to make them work.", "score": 3}, {"text": "Optimizing Database Interactions in Python: SQLAlchemy Best Practices. ", "score": 0}, {"text": "yoyo-migrations performance feedback. Looking to gauge others' experience with the [yoyo-migrations](https://pypi.org/project/yoyo-migrations/) library. I've used it for a few months and have around 50 migration files built up. Along with hosted DB management, I use it to set up an ephemeral containerized DB for acceptance testing. This works great except for performance.\n\nApplying the full suite takes about 4 minutes, or over 5 seconds per migration (mostly simple table creation or alter statements). For contrast, a bare-bones script I wrote to iterate over the files and apply them manually completes in 2 seconds. I know yoyo is doing more than that behind the scenes, but a 120x increase is excessive.\n\nFor those that have used Yoyo, is that just how the tool operates in your experience? Or do I possibly have something messed up in my configuration? Thanks", "score": 2}, {"text": "Warning, Streamlit collects a lot of data!. I just found out that Streamlit defaults to sending telemetry data to Streamlit (and so sends it to Snowflake). While they say this is only metadata and not app information, I'm not totally sure I trust that.   \n\n\n[https://docs.streamlit.io/library/advanced-features/configuration#telemetry](https://docs.streamlit.io/library/advanced-features/configuration#telemetry)", "score": 332}, {"text": "FCL (function-centered-language) is a functional language written in Python. &amp;#x200B;\n\n[FizzBuzz implementation in FCL](https://preview.redd.it/y55v7h3ef3qa1.png?width=1306&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=5a1f659baef185d4df6be23e5b6b092ec735062d)\n\n**Hello**, recently made an interpreted language in python and haven't decided on its use cases or if I wanna be serious about it or not but just wanted to share.\n\nThe idea is to use function for everything although the language currently doesn't even support creating function which I will add soon. There's probably thousands of languages like this but wanted to find a unique use-case for now the real problem is speed so might rewrite in C++ or rust.\n\nAlso would like some feedback from pro language creators if my implementation is correct or not? for an average interpreted langauge.\n\nLink: [FCL (GitHub)](https://github.com/Fus3n/fcl)", "score": 1}, {"text": "Python executable makers. Hi there ! I'm curious what are you using to generate executable files for you Python scripts because I'm getting angry at some popular ones. I got some problems for my program with Pyinstaller as I think it didn't put the dependencies into the executable, the program wasn't working on computers without Python installed. As for cx\\_Freeze, it got the dependencies into it ( at least I think, as It created some extra files .dlls and other stuff ), but the executable didn't work at all because it got an error at run about input lines that I've put in the code(in [main.py](https://main.py), not setup.py) ( the program works in Pycharm ).", "score": 1}, {"text": "Does it make more sense to learn Python myself and do the programming on my project later, or should I hire someone to create the project for me, that I can then take over once I learn it?. For deeper context, check out my profile for my previous post in r/it for further details. The shortened version of it is that I have a repetitive data entry process that I do for my job. \n\nIt's something I do for myself because the results actively predict where I need to be to effect the best results. My company makes deliveries of a sort to over 1000 diffrent locations across my state. Knowing what our trucks are capable of delivering let's me know the operational condition of the equipment inside. As the companies service tech, I'm searching for broken systems that need repair, so I can get a very clear heads up of the problem areas long before the customers call it in.  (Example: If we regularly make a delivery of 600# and the last two deliveries show its dropped down to 50#, there's obviously something wrong there)\n\nI have a website database where every delivery is recorded. I've created a Google sheets file that's set up with formulas to crunch all the numbers for me. All I have to do is copy that delivery data from the website to the sheet and it automaticly calculates the rest. The website takes 60 seconds at least to collect the delivery data on one delivery. I compare it to what I have in the sheet and add in the new information. In order to keep up with the deliveries, I usually try to do data entry on about 100 entries each day. This process takes at least an hour every day whether it's a work day, weekend, or vacation. I get to spend at least an hour every day doing data entry work. \n\nThe goal I'm looking to accomplish is to move my Google sheets file over to some kind of automated program that will collect the data and crunch the numbers automaticly for me. Such a program would literally give me an hour more of free time every day. So it's definitely worth it to do. \n\nSo the question is, how should I do this? Should I learn how to program and do this project myself, or does it make sense to hire someone to create the program for me, and then when I learn programming, I can take over the program. \n\nOn the one hand, either way, I plan on learning programming, so I can save money and make the program myself, it's a win for me.\n\nOn the other hand, having someone else do it for me means I get an experienced hand to do it correctly the first time without the guess work that comes with doing while learning. Additionally,  saving that hour every day gives me that much more time I could put towards learning programming myself. \n\nIf I go that route, what would be a fair charge to expect for such a project, and is there anyone who would want to take on such a project?", "score": 0}, {"text": "How to Ban 1+N in Django. I always thought of 1+N as a thing that you just keep in your head, catch on code reviews or via performance regressions. But preventing it might be a good idea too.\n\n [Read more](https://suor.github.io/blog/2023/03/26/ban-1-plus-n-in-django/)", "score": 0}, {"text": "Zang - A dynamically typed programming language made in python. It even has a text editor with syntax highlighting! what do you guys think?\n\n[https://github.com/cmspeedrunner/Zang](https://github.com/cmspeedrunner/Zang)", "score": 25}, {"text": "Python-Selenium-Action: Easily Run Selenium with Python via Github Actions using Headless or Non-Headless browsers!. ", "score": 6}, {"text": "popularity behind pydantic. I was trying to find a good data validation library to use and then came across pydantic.\n\nI was wondering what exactly is the reason behind this popularity of pydantic. I saw some other libraries also such as msgspec which seems to be still faster than pydantic-core, but doesn't seems much popular.\n\nAlthough I know speed is a secondary matter and first comes developer comfort as per many (this is what pydantic also claims to be the reason behind their popularity)... I just wanted to know if there are some mind blowing features in pydantic which I am missing.\n\nPS : can anyone share their experience, especially in production about how helpful pydantic was to them and wether they tried any other alternatives only to find that they lack in some aspects?", "score": 126}, {"text": "pywinterminal -- fun project for Windows/Linux admins. Hey everyone,\n\nI figured someone could benefit from this. I mainly use a Mac or Linux. I migrated from Windows earlier last year and haven't looked back. However, in my job as a Cloud Engineer/DevOps Engineer/WhateverTheyTellMeToBeNeer I still have to maintain some Windows servers.\n\nI'm a big terminal guy. I like being able to SSH into a server when I need a few quick things and be done. Well, SSH into Windows is possible now. However, most enterprises do not support this and you are working off of older based severs that would not even support this. This means you have to RDP into the server. I HATE RDP!!!!\n\nThis got me thinking, well, what about if you make a terminal to connect from Mac/Linux to Windows using the WinRM library in Python? I started thinking about it more, what if I used something that does it already and does it well? Ansible!!! What if you used Ansible as the backend, and created a mock terminal you could send commands through??? Winner!!!\n\nSo pywinterminal is exactly that. It is a fancy forever loop that allows you to send commands to a Windows server through a mock terminal. It maintains history and directory state. So if you send a command \"cd c:\\\\windows\\\\temp\", then the next command you sent \"dir\", it would output the the dir of \"C:\\\\windows\\\\temp\". This is still a work in progress, but it has been an absolute life saver for me.\n\nThere are limitations. if you set a variable, value is not not maintained. This is something I am looking into. HOWEVER, you can send piped commands and multiple commands like \"get-service | where name -like \\*win\\*\"  or \"mkdir c:\\\\temp; cd c:\\\\temp; dir\". It uses Ansible in the backend to send all this stuff back and forth. I may be able integrate this a bit more and have a custom playbook to keep a sort of \"variable state\". Until then it has a basic functionality.\n\nIt an open source project, and it is in an early alpha stage so their will be bugs. I have not extensively tested everything, but for general use it works. Code is a bit rough and by no means final. I do this in my spare time as I have time, which isn't much. Please enjoy! I hope it makes someone's life easier!\n\n[https://github.com/mcscwizzy/pywinterminal](https://github.com/mcscwizzy/pywinterminal)", "score": 17}, {"text": "Panther - Throttling (Day 1). Panther I**s A Fast &amp;  Friendly Web Framework For Building Async APIs With Python 3.11+**\n\nPanther has a built-in Throttling class that you can use to handle the rate limit of your APIsIt has rate and duration so you can specify how many requests the user can send to your API in a duration\n\n    from datetime import timedelta\n    from panther.app import API\n    from panther.throttling import Throttling\n    \n    \n    # User only can request 5 times in every minute\n    InfoThrottling = Throttling(rate=5, duration=timedelta(minutes=1))\n    \n    \n    @API(throttling=InfoThrottling)\n    async def info_api():\n        return {'detail': 'some detail'}\n\nPreview: [preview.redd.it](https://preview.redd.it/6mmvqpbidvpa1.jpg?width=1080&amp;format=pjpg&amp;auto=webp&amp;v=enabled&amp;s=3f747d70a3c8eaca1917dcd9385c5d3efa9ed440)  \nGitHub: [https://github.com/AliRn76/panther/](https://github.com/AliRn76/panther/)  \nPyPI: [https://pypi.org/project/panther/](https://pypi.org/project/panther/)", "score": 27}, {"text": "Machine Learning with Project - Complete Tutorial. ", "score": 4}, {"text": "A Python library that hashes text to a port number in the dynamic range (49152-65535). Hashport is a function that generates a port number using a deterministic hashing algorithm. It takes a string input as the name of the project or entity that requires a port number and returns an integer value that falls within the range of ports typically used for dynamic assignments (49152 to 65535).\n\nThe function uses the SHA-256 algorithm to generate a hash of the input string. The resulting hash is then converted to an integer, and the integer is scaled to the desired range using modular arithmetic.\n\nHashport is useful in scenarios where a fixed and deterministic port assignment is required. By hashing the project name, the same input will always generate the same output, ensuring consistency and predictability in port assignments.\n\nPython library: [https://github.com/labteral/hashport](https://github.com/labteral/hashport)", "score": 2}, {"text": "Top 5 VSCode Extensions for Python Developers in 2023!. ", "score": 67}, {"text": "GitHub - blipk/pysh: bash in python. ", "score": 20}, {"text": "My first app in Tkinter - B\u00e9zier curve read off. Hello, I started coding in Python about 5 months ago. I worked mainly with Pygame, but now, I have shifted my interest to Tkinter.  \nFor my first application with this module, I chose to do B\u00e9zier curve read off. If you have an image with a quadratic or cubic B\u00e9zier curve and do not know the correct equations, this application can help you with that. You only need to import the image and shape the B\u00e9zier curve in the app to look like the one in the image, the application can then provide you with the corresponding equations. In addition, it also tells you where the extrema of the curve are and highlights them for you.\n\nIn the future, I plan to add the ability to add more than one B\u00e9zier curve.\n\nI also made a Youtube video where I go into a little bit more detail:  \n[https://www.youtube.com/watch?v=HN47iyTLCG8](https://www.youtube.com/watch?v=HN47iyTLCG8)\n\nI would like to hear your opinion and what I could improve.\n\nYou can find the code here:  \n[https://drive.google.com/file/d/1-iKEmiFGzq0-Gq76yNXk5jrb2IK3BUEX/view?usp=sharing](https://drive.google.com/file/d/1-iKEmiFGzq0-Gq76yNXk5jrb2IK3BUEX/view?usp=sharing)", "score": 11}, {"text": "Build your own python security tools - PortScanner, Visual Network Tracker and Anonymous FTP Scanner. **Python Cybersecurity \u2014 PortScanner**\n\nBuild a simple Port Scanner using the Python Programming language. Port Scanner is an application designed to probe a server or host for open ports. Such an application may be used by administrators to verify security policies of their networks and by attackers to identify network services running on a host and exploit vulnerabilities\n\n**Link**: [https://vinsloev.medium.com/python-cybersecurity-build-a-port-scanner-13b798a1b654](https://vinsloev.medium.com/python-cybersecurity-build-a-port-scanner-13b798a1b654)\n\n**Python Cybersecurity \u2014 Visual Network Tracker**\n\nDive into Network Traffic visualization using the Python programming language, Wireshark and Google Maps. This tutorial, covers the implementation steps needed to take a file of network traffic and convert it into a visual presentation using Google Maps.\n\n**Link**: [https://medium.com/vinsloev-academy/python-cybersecurity-network-tracking-using-wireshark-and-google-maps-2adf3e497a93](https://medium.com/vinsloev-academy/python-cybersecurity-network-tracking-using-wireshark-and-google-maps-2adf3e497a93)\n\n**Python Cybersecurity \u2014 Anonymous FTP Scanner**\n\nBuild a simple FTP Scanner using the Python Programming language. Anonymous FTP is a means by which archive sites allow general access to their archives of information. These sites create a special account called anonymous\n\n**Link**: [https://vinsloev.medium.com/python-cybersecurity-for-beginners-build-anonymous-ftp-scanner-a62f0534fcf5](https://vinsloev.medium.com/python-cybersecurity-for-beginners-build-anonymous-ftp-scanner-a62f0534fcf5)", "score": 15}, {"text": "So, You Recommended a Python Time-Series Package \u2026 Now What?. ", "score": 342}, {"text": "pandas 2.0 is coming out soon. pandas 2.0 will come out soon, probably as soon as next week. The (hopefully) final release candidate was published last week.\n\n&amp;#x200B;\n\nI wrote about a couple of interesting new features that are included in 2.0:\n\n* non-nanosecond Timestamp resolution\n* PyArrow-backed DataFrames in pandas\n* Copy-on-Write improvement\n\n[https://medium.com/gitconnected/welcoming-pandas-2-0-194094e4275b](https://medium.com/gitconnected/welcoming-pandas-2-0-194094e4275b)", "score": 290}, {"text": "Willpyre: Zero Dependency, ASGI compilant Micro Web-framework. [Willpyre](https://github.com/re-masashi/willpyre) is an ASGI micro web framework made from the ground up. It only uses the Python3 standard library. It is inspired by [ExpressJS](https://expressjs.com/) and attempts to bring that style in a Pythonic way while still being ASGI compilant. \nIt has support for predefined response objects. You can use custom responses if you want, eg. ORJSON based(WIP). \nIt has support for OpenAP(both v2 and v3) based docs using SwaggerUI. \nIt isn't a 100% API only framework. It can be used for other webdev projects also. It can use any ASGI middleware to add additional functionality to their app. \nFuture plans include:\n- Redoc support.\n- A 'recipes' book.\n- Extensions for the app, such as for ORMs.\n- A fast templating engine for Willpyre (see [spitfire](https://github.com/re-masashi/spitfire)).\n\nYou can check the [docs](https://willpyre.readthedocs.org) for a quick start with the framework. \nCheers!", "score": 1}, {"text": "Which Jupyter Notebook service has worked best for you?. There are Jupyter Notebook providers such as Hex and Baseten. Just curious, if people are using it. If yes, what is the use case? If tried but didn't like it, please mention that as well. I am trying to figure out what should we use in our org.", "score": 0}, {"text": "Generate images with DALL-E for free, in one line of code [UPDATED VERSION]. ", "score": 0}, {"text": "I made a cli tool to convert m3u to pyradio playlist.. I made a cli tool to convert m3u to pyradio playlist.\n\nhttps://i.redd.it/8g7rxh11xspa1.gif\n\nIt converts m3u files to pyradio ([https://github.com/coderholic/pyradio](https://github.com/coderholic/pyradio)) CSV stations file format.\n\nYou can also automatically download and convert stations from the \"everything full\" m3u in this repo: [https://github.com/junguler/m3u-radio-music-playlists](https://github.com/junguler/m3u-radio-music-playlists).\n\nAnd there's also an option to download, convert and override current stations.csv (what GIF shows).\n\nGithub: [https://github.com/LionyxML/pyradio-m3u-to-playlist](https://github.com/LionyxML/pyradio-m3u-to-playlist)\n\nPip: `pip install m3u_to_pyradio_playlist`", "score": 18}, {"text": "Python on Silicon Mac. Hello, what are the disadvantages in developing Python programs (eventually to be run on Ubuntu Linux on PC or RPi) on Silicon Mac under MacOS or a Ubuntu virtual machine on Arm? I may need to run some scientific libraries.", "score": 2}, {"text": "Python Web Scraping Delay. Web Scraping Headlines delay\n\nI\u2019m using python, beautiful soup (bs4) and requests to scrape headlines from an website within seconds when they appear in website.. here\u2019s how i do it.\n\nI modified script to check theblock.co/latest h2 div where (headlines) are and if a new headline appears i receive data (headline) via cmd immediately but someone else is scraping the same headline 20 seconds earlier than me..\n\nHere is an screenshot that i compared seconds when i get data to cmd and someone\u2019s terminal that scrapes same website/headline before me.\n\nLink Screenshot \u201cimgbb\u201d\nhttps://ibb.co/19NpV1q\n\nWhat could be the case and what it\u2019s preventing me to scrape quicker.. Is Selenium/Scrapy faster than Beautiful Soup?\n\nOr could it be that im using VPN to avoid getting blocked by site?\n\nLooking forward to hear your opinions.", "score": 9}, {"text": "Automate Your Stock Trading with Investopedia-Bot. Are you tired of manually monitoring stock data and placing trades? I made Investopedia-Bot for you, a beginner-friendly Python program that automates stock trading.\n\nUsing Selenium, Investopedia-Bot scrapes Finviz for stock charts and can execute trades in the Investopedia stock simulator. The program calculates stock expectancies, displays stock data and graphs, and recommends the number of shares to buy based on various user-defined variables. With the ability to execute trades automatically, Investopedia-Bot can save users time and effort.\n\nWhile Investopedia-Bot was designed to work with a specific version of the Investopedia stock simulator UI, there is an opportunity for contributors to update the program to work with the latest version of the UI. If you're interested in contributing to the project, updating the scraping code of executing a trade would be a valuable contribution that would help ensure the program continues to function as intended.\n\nSay goodbye to manual stock trading and try Investopedia-Bot today. Automate your stock trading and save yourself time and effort!\n\nHere's the link: [https://github.com/bassel27/Investopedia-Bot](https://github.com/bassel27/Investopedia-Bot)", "score": 0}, {"text": "myKamus: A Free and Open Source Indonesian Translation Program. G'day all!\n\nToday I am here to showcase my first public open source program (which is VERY simple but very useful or anyone like me)!\n\nIf you try to clone it, take note that one of the files is over 700mb so it is stored on the GitHub large file service.\n\nDescription:\n\n*myKamus is An open source instant translation software for Indonesian that provides the user with complex Indonesian-English translation capabilities. To run the program you can either do it from inside an IDE of your choice, or with Python installed either:*\n\n*a) Run clipboard\\_monitor through IDLE*\n\n*b) Launch a Powershell session through the directory and run clipboard\\_monitor through it*\n\n*It utilises several open source bitext corpus to provide access to over 50 million example sentences and words for the purposes of translation. The program is free to use for academic and non-commercial applications, if you wish to use it for something else email me at* [*gabrielcbarnett@gmail.com*](mailto:gabrielcbarnett@gmail.com)*. There will be no cost involved for a license to use in a corporate, government or military environment, it is so we can discuss any needs you might have for updates, specific vocabulary or language requirements. Again, it will be free but a representative from your organization must make contact with me first.*\n\n&amp;#x200B;\n\n*If you like this program and have found it useful for your work, feel free to email with your success story or anyimprovements that you might suggest.*\n\nFeatures:\n\n* Automatically translate individual words and phrases from the computers clipboard which it monitors through the use of pyperclip\n* The library of approximately 60 million sentences and words means the nine times out of ten you will find either the definition of the word that you are looking for or an example sentence that you will be able to infer the meaning of the word from.\n* This means you are likely to find almost all verb/noun forms that Indonesian has to offer\n* Excellent for people who have learnt Indonesian through school or work and just need to look the odd word up quickly without using a translation service like Google or Deepl (which often provide misleading results anyway).\n\nA link to the program can be found here:\n\n[https://github.com/GabrielBarnett/myKamus](https://github.com/GabrielBarnett/myKamus)\n\nI am happy to take suggestions on how to improve the program, but I have only been working on the for a few hours now. At some point I would like to build it into a GUI and use pyInstaller to actually make an executable for the program, but I can't work out how to use pyInstaller on a project with multiple py files and have it also include the dependent translation files which at over 700mg in size.", "score": 7}, {"text": "Spotr - a simple spotify CLI made in python. I made a spotify CLI in python.\n\nI know its very basic, but this is my first python project and i think its pretty cool and useful :)It has all the commands you would need (i think), even a suprise command for song recommendations!\n\nMade this beacuse i wanted a simple way of controlling my spotify in the terminal.I has a hint of neofetch in the way its displays info, so if you like that give it a try\n\nIt can be easily modified, and if you know basic python you can easily make your own commands\n\nFor more information and the source code check the github - [https://github.com/Havard03/spotr](https://github.com/Havard03/spotr)  \nIf you like it or find it useful, i would very much appreciate any stars :D  \n\n\nhttps://i.redd.it/e6wnrz258ppa1.gif\n\nhttps://preview.redd.it/inrkqqiu7ppa1.png?width=1914&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=ec598dfc26e2554bdd6ff622182e56a3d216920d", "score": 41}, {"text": "NASA's Cassini - Cosmic Dust Analyzer: A proper calibration!. [In my last post](https://www.reddit.com/r/Python/comments/11vjmc2/nasas_cassini_cosmic_dust_analyzer_how_to/) I showed you, how spacecraft instruments are calibrated. To be more precise: it was about so called dust detectors, like the Cosmic Dust Analyzer (CDA) that was on-board the NASA's probe Cassini.\n\nBut conducting calibration experiments and recording and storing tons of data is one thing. The next logical step: deriving actual calibration functions!\n\nFor this part I created a small tutorial that shows the already existing functions to compute the velocity of dust impacts, based on some electric signals. *Why is the velocity so important?* Well, based on the impact speed and direction of the instrument at the \"moment\" of impact, one can derive astro-dynamical insights.\n\nAnd later ... when we take a look at the science part ... you will see that ... well I don't want to spoil ... you can create amazing science results with these \"simple\" computations!\n\nAnyway, further I compute the Mean Absolute Error (MAE) and Root Mean Square Error (RSME) to obtain some performance result of the calibration functions. *Why?* Well next week we will use a **Tensorflow / Keras** based approach to create a **Machine Learning based calibration function**. The MAEs and RSME are the \"benchmark\" values we need to \"beat\".\n\nStay tuned,\n\nThomas\n\nVideo: [https://youtu.be/RkVx-7fcVRY](https://youtu.be/RkVx-7fcVRY)\n\nGitHub: [https://github.com/ThomasAlbin/Astroniz-YT-Tutorials/blob/main/%5BProject%5D-Cassini-CDA/01-Calibration/02\\_prior\\_calibration.ipynb](https://github.com/ThomasAlbin/Astroniz-YT-Tutorials/blob/main/%5BProject%5D-Cassini-CDA/01-Calibration/02_prior_calibration.ipynb)", "score": 13}, {"text": "A system for deep learning and reinforcement learning.. Note is a system for deep learning and reinforcement learning.It makes it easy to create and train neural network.Note supports TensorFlow and PyTorch platform.It can speed up the training of neural network by multithreading and multiprocessing.\nhttps://github.com/NoteDancing/Note", "score": 0}, {"text": "Input on designing an introduction to python course. Hi!\n\nI am designing a mandatory Python-based introductory programming course for \\*all\\* engineering students at my university (software engineering to medico technology!). \n\nThe course will be placed in their first semester and correspond to 1/6th of their overall workload in that semester (5ECTS/13 teaching sessions/2h teaching+2h lab). It will run in parallel to the math-course, which has examples typeset in notebooks using numpy/sympy (but from a user perspective).\n\nFor some of the technical lines (AI, robotics, etc.) this will unfortunately be their only mandatory programming course, which mean it has to do a great deal for a lot of different students. Because of these demands, I would ideally like it to start from the absolute basics (\\*no\\* prior programming experience) and end up with basic OOP as this will be important for those who do AI later (sklearn, torch, etc.), with a minimum of deviations along the way. The course will be open source  (i.e. hosted on gitlab pages; all material available without login).\n\nI have looked for other courses for inspiration, but many other courses include additional things (CS50 from Harvard) or seem to assume to much prior knowledge: [https://ocw.mit.edu/courses/6-0001-introduction-to-computer-science-and-programming-in-python-fall-2016/](https://ocw.mit.edu/courses/6-0001-introduction-to-computer-science-and-programming-in-python-fall-2016/) \n\nThe kind of course I am aiming for (obviously this is open to criticism) is one that focuses maximally on the language (primitive datatypes, functions, lists+other compound types, loops, basic oop, basics about packages), somewhat focuses on useful developer skills (what is an interpreter, how to debug code, etc.) and very minimally on everything else (no regexp, no big libraries like pandas, only basic file reading/writing, etc.).  The lab sessions will be based on editing/writing .py files in VSCode.\n\nI am hoping that some here can recommend good resources -- Ideally an open-source course which has a similar scope and a really good progression curve, or a good (concise!) book, etc. Any general advice is of course welcome, but I feel stumped by the whole 'what fit in which weeks and how much' side of things. My current outline is:\n\n1. intro, print, simple functions, algebraic operations: Basically a very few examples of python to talk over that 'we will get to'. Must assume many don't have python working yet.\n\n2. primitive types, conversions int('31'), basic functions (analogy with math). \n\n3. functions++, variables, if/else. Mention type annotation to avoid confusion.\n\n4. Reading/writing text files as 'copy paste code', string operations. String manipulation is formatted as a soft intro to lists.\n\n5. Lists, loops, tuples, functions of multiple variables. \"adfsa\".split(), \"\".join(..), etc.\n\n6. Sets, functions of mutiple output arguments, comprehension, range(), enumerate()\n\n7. dicts, more on comprehension and looping, items()\n\n8. exceptions, asesrt, packages (all just a very brief overview). This is a catch-up lecture\n\n9. classes 1 (classes, mutability)\n\n10. classes 2 (inheritance, \\_\\_add\\_\\_, etc.)\n\n11. build your own sympy 1: running example on building an alternative sympy\n\n12. build your own sympy 2: running example on building a sympy + catch-up", "score": 0}, {"text": "Alarm clock made with Python &amp; Kivy. Hello! A time ago, I decided to make an alarm-clock using Python and Kivy as a means of practicing both languages. I really liked the process of learning and debugging through the code. Also I ended up really liking the end result. Below is a link to the project if you're willing to see it and perhaps give a feedback! Thank you :)\n\n&amp;#x200B;\n\nGitHub: [https://github.com/v0di/alarm-clock](https://github.com/v0di/alarm-clock)", "score": 11}, {"text": "reKarma - my first public app ever. MacOS menu bar app that checks reddit's karma of given user.. Here's the first application I ever published, and definitely the first in Python.\n\n[reKarma github](https://github.com/nutellaordidnthappen/reKarma)\n\nThe app will reside in the macOS menu bar, where it will create a text icon that will update the karma score for that user every 5 minutes.\n\nNo reddit account login required.\n\nI started learning Python a few days ago (my biggest experience is with C#). I've already made a few scripts/console apps in Python, and I wanted to try how hard/easy it would be to make something as specific as an app directly for Mac that would only live in the status bar.\n\n&amp;#x200B;\n\nHopefully someone will like it :)", "score": 12}, {"text": "Position Embedding: A Detailed Explanation. ", "score": 0}, {"text": "Youtube downloader. I built an ad free, minimal and fast youtube downloader with Python and Tkinter\n\n[https://www.youtube.com/watch?v=AjXayZq1To0](https://www.youtube.com/watch?v=AjXayZq1To0)\n\n[https://github.com/whm04/YouTube-Video-Downloader](https://github.com/whm04/YouTube-Video-Downloader)\n\nhttps://preview.redd.it/lkuy9vznawpa1.png?width=724&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=61265b28a3d4b6186c7af8fe007c7817a9f74165", "score": 0}, {"text": "Python Verse Series: The Ultimate Guide for Beginners in Python!. Are you new to Python and looking for a comprehensive guide to get started? Look no further! Introducing the Python Verse Series, a collection of videos that covers all the basic concepts in Python.\n\nLink :: [Link to Python Verse Series](https://www.youtube.com/watch?v=Zufhf-1sAGk&amp;list=PLGti5cnlfURpXuEWmHsVaQ8zzz4srH4ZD)\n\n&amp;#x200B;\n\n[The PythonVerse Series](https://preview.redd.it/mhcl4xx6lopa1.png?width=1920&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=ece53acfcec3b065a8e0d4fdea3d9db4d90452a2)", "score": 32}, {"text": "Saturday Daily Thread: Resource Request and Sharing! Daily Thread. Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?\n\nUse this thread to chat about and share Python resources!", "score": 3}, {"text": "How to test Python Programs with Pytest. Pytest is a full-featured Python testing tool that helps you write better programs. It is mainly used to write API test cases. According to the pytest documentation, each test function consists of four steps:\n\n1. **Arrange** - where you prepare everything for your test\n2. **Act** - singular, state-changing action that kicks off the behavior you want to test\n3. **Assert** - where you check if the result of the action is what you expect\n4. **Cleanup** - where you clean up after your test\n\nExample Function to be tested:\n\n```python\ndef add(a,b):\n    return a+b\n```\n\nHere's an example of a test function:\n\n```python\ndef test_add():\n    assert add(1,2) == 3\n```\n\nThis test function checks if 1 + 2 equals 3. If it does, then the test passes; otherwise, it fails.\n\nYou can also use Pytest to test any website or program code. It's easy to get started with and can be used for all types and levels of software testing.\n\nhttps://docs.pytest.org/en/7.2.x/", "score": 0}, {"text": "New Release: ChatGPT desktop application written in Python. https://github.com/nero-dv/Generally-Pretty-True-Assistant\n\nI got tired of not being able to view my history in ChatGPT, so I wrote a python program that utilizes Qt (PySide6) to generate a simple UI to talk to the OpenAI API. \n\nYou must enter your own OpenAI API key either through the File Menu &gt; Set API Key, or by setting the following environment variable (and logging out then back in for your login shell to recognize it), though usage is generally very cheap. I've sent it over 300 requests and have only been billed a few cents", "score": 4}, {"text": "New release of FastKafka supporting Redpanda. We were searching for something like FastAPI for Kafka-based service we were developing, but couldn\u2019t find anything similar. So we shamelessly made one by reusing beloved paradigms from FastAPI and we shamelessly named it FastKafka. The point was to set the expectations right - you get pretty much what you would expect: function decorators for consumers and producers with type hints specifying Pydantic classes for JSON encoding/decoding, automatic message routing to Kafka brokers and documentation generation.\n\nThis new release implements a number of feature requests coming from the community, the most significant one being adding support for Redpanda broker for both testing and deployment. Please take a look and let us know how to make it better:\n\n[https://github.com/airtai/fastkafka](https://github.com/airtai/fastkafka)", "score": 12}, {"text": "Generating PDF files via FastAPI and sending the file to the user's email. (Currently using PyPDF2). Current project I'm working on requires me to build a REST API to connect with the existing application that my client made.\n\nThe application is sending some data to my API in which I need to format and generate a PDF file. With how the current application is being made now, it does not accept any file-type data to be returned. Thus, I need to generate the PDF file and send it to the user's email.\n\nI've experimented with modules like PyPDF2 in which I can take in data and generate tables very easily. However, to view the file, I need to generate it and export it to my local drive.\n\nWhat I do not understand is, how will this work in the deployment server? I've deployed a test API on [Render](https://dashboard.render.com/). The packages that are available only supplies the RAM and CPU to do computation.\n\n&amp;#x200B;\n\nMy question is, would it be possible to somehow generate the PDF file in memory and sending it to the user's email? Or maybe there is a better way of doing this whole process that is cost-effective.\n\nIf anyone has better ideas or other recommendations in regard to the module that I chose, feel free to give your opinion.\n\nMany thanks.\n\n&amp;#x200B;\n\n\\*Edit:(Correction, currently I am using FPDF2, not PyPDF2)", "score": 3}, {"text": "Is it a good time to use asyncio?. I used asyncio around 6 months ago to build our CLI that does a lot of IPC with NodeJS processes. The CLI turned out to be a nightmare for our users because we didn't realize how wrong our code was due to following reasons:\n\n1. We didn't handle \\`asyncio.CancelledError\\` properly. It seems all the co-routine should have try-catch.\n2. Consequently, something as simple as handling \\`KeyboardInterrupt\\` became a nightmare for us.\n3. We went through the python docs but it wasn't clear how to handle edge cases such as an async generator during KeyboardInterrupt.\n4. The spec around asyncio is changing very fast. I realized asyncio is not backward compatible between 3.11 and 3.7. Please correct me if I am wrong.\n\nWould love to know the views of python developers on this.", "score": 132}, {"text": "Customs Inspector - Easy manual auditing of Python Poetry package updates. Hello all,\n\nVery excited to share a tool I've been working on and explore it's feasibility with the community.\n\n[https://github.com/R9295/customs-inspector](https://github.com/R9295/customs-inspector)\n\nCustoms Inspector  hooks into Poetry's package management system to allow for manual auditing of package changes during updates. It opens a browser with a diff view of the changes for you to manually audit.\n\nThe idea is to harness the community's collective effort to find malicious packages.\n\nNo one likes manual auditing, but perhaps, this makes it less so?\n\nLooking forward to your thoughts", "score": 35}, {"text": "Arguments against separating `test` from `src` in a python package?. The Python Packaging Authority recommends separating the test directory from the src (source code) directory in a Python application:\n\n[https://packaging.python.org/en/latest/tutorials/packaging-projects/#creating-the-package-files](https://packaging.python.org/en/latest/tutorials/packaging-projects/#creating-the-package-files)  \n\n\nPersonally, I have always preferred this approach of keeping tests outside the package rather than mixing them with the source code (tests in package).\n\nHowever, in the interest of expanding my perspective and learning something new, I am open to exploring alternative viewpoints. What are the main arguments for including tests within the package itself?\n\n[Image taken from https:\\/\\/blog.ionelmc.ro\\/2014\\/05\\/25\\/python-packaging\\/](https://preview.redd.it/dqfsq591khpa1.png?width=1004&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=f8c2ad36f52bb5eaf2879aee5257992dc438d262)", "score": 174}, {"text": "Python software developer role is really profitable?. Guys, I have started to learn python and I want to be a python software developer but I am little confused that how much growth of a python software developer?", "score": 0}, {"text": "Part time work/roles using python.. Hey I am looking to up-skill in Python. Although I currently teach piano part time I don't want to lose that job if most Python based jobs are full time. Does anyone here work part time?", "score": 18}, {"text": "Daft: The Distributed Python Dataframe. ", "score": 33}, {"text": "Malicious Actors Use Unicode Support in Python to Evade Detection. ", "score": 347}, {"text": "Using Python and OpenAi API to generate YouTube titles. I wanted to get the best Youtube video titles based on data. Rather than just guess I've created a script using Python, ChatGPT API and the Youtube API that will generate video titles, update your Youtube video with them and automatically decide the winner based on views, impressions and click through rate.\n\nThis is part 1 - using ChatGPT API to get the titles", "score": 0}, {"text": "When Should You Use .__repr__() vs .__str__() in Python? \u2013 Real Python. ", "score": 30}, {"text": "Speeding up text processing in Python (is hard). ", "score": 12}, {"text": "Galactic Something. I'm using the lib pygame to develop an asteroid-ish game, it's kinda far from being complete but i would love to hear your oppinion about it :)  \nThe code is not optimal/clean yet, but it's something. (and i just started using github, so ye...)\n\nHere is the code: [https://github.com/ErikDio/galactic-something](https://github.com/ErikDio/galactic-something)\n\n&amp;#x200B;\n\nhttps://reddit.com/link/11zo0ou/video/s84vmsgjbipa1/player", "score": 14}, {"text": "Live Tutorial on Scaling Python with Dask and Coiled (April 13). [Click here to register!](https://www.meetup.com/bethesda-data-science-networking-meetup/events/292411174/)  \n\n\nMy meetup group is hosting Dr. Naty Clementi, one of the developers of Dask and Coiled, for a live, interaction tutorial on April 13th at 6:30pm ET (10:30pm UTC)\n\nDask is a powerful library for parallel computing in Python and used in big data, machine learning, anywhere general-purpose parallelism is needed. Coiled extends Dask with cloud infrastructure and features like easy cloud deployment, remote package synchronization, cost management, and observability and performance hinting. \n\nThe presentation will be followed by a Q&amp;A session--if you're curious about scaling your Python projects than come join us!", "score": 5}, {"text": "I am an incoming Aerospace Engineering undergrad and would like some feedback. In order to expand my skillset I thought about getting certified in Python to help with future projects within programming and engineering. Since I am a beginner, what type of Python certification should I go for? I would prefer it to be useful to present in my resume for future opportunities.", "score": 6}, {"text": "How to Use Memgraph With Python and Jupyter Notebooks. ", "score": 10}, {"text": "Python script to generate Table of Contents of a users Github gists. I created a python script to generate a table of contents of a users public Github gists.\n\nI welcome any input or opinion on it so I can expand my python knowledge.\n\nThanks in advance, here's the link to the repo:\n\n[https://github.com/DevGW/Gist-Table-of-Contents](https://github.com/DevGW/Gist-Table-of-Contents)", "score": 2}, {"text": "Unleashing the Power of Memphis.dev: A Guide for Developers and Data Engineers. ", "score": 2}, {"text": "Want to create a Telegram bot by using Python? Here is what you need to know. ", "score": 0}, {"text": "Textual 0.16.0 adds TabbedContent and border titles. ", "score": 292}, {"text": "Cheshire Cat - Open source layer on top of any language model (extendible via plugins). &amp;#x200B;\n\n \\^.\\_.\\^\n\n&amp;#x200B;\n\nThe Cheshire Cat is an open source, customizable AI architecture:\n\n&amp;#x200B;\n\n\\- language model agnosatic (works with OpenAI, Cohere, HuggingFace models, custom)\n\n\\- long term memory\n\n\\- can use external tools (APIs, other models)\n\n\\- can ingest documents (.pdf, .txt)\n\n\\- 100% dockerized\n\n\\- extendible via plugins\n\n&amp;#x200B;\n\nWaiting for you to try it out and contribute with tutorials, code, and whatever makes you happy\n\n&amp;#x200B;\n\n\\#opensource #artificialintelligence #cognitivecomputing #deeplearning #cheshirecat\n\n&amp;#x200B;\n\nTutorial:\n\n&amp;#x200B;\n\n[https://www.youtube.com/watch?v=srsaYy0xmkc](https://www.youtube.com/watch?v=srsaYy0xmkc)\n\n&amp;#x200B;\n\nRepo:\n\n&amp;#x200B;\n\n[https://github.com/pieroit/cheshire-cat](https://github.com/pieroit/cheshire-cat)", "score": 3}, {"text": "Re-usable engine for classic \"snake\" game. \"engine\" is probably a bit of a grand term for this, but basically, there is a method that accepts a directional input (up/down/left/right) and produces a new game state for each frame of the game. Collecting/reading the inputs and drawing the game state is up to you (this also makes it useful for anyone wanting to train some ML system to play snake, if that's what you're into).  \n\n\nThere is also a sample terminal-based implementation as the module \\_\\_main\\_\\_, if you just wanna play snake :)   \n\n\n[https://eriknyquist.github.io/snakeng/](https://eriknyquist.github.io/snakeng/)", "score": 15}, {"text": "How do I advance as a Python Programmer in general?. Hey guys, randomly about 7 months ago I decided I wanted to learn how to code with python. I have done my fair share of watching tutorials and have just been working on small projects ever since. I have gotten to the point where I can understand almost any python code (aside from the game developing side I have never touched that) but I still am pretty lackluster at writing my own code. Anybody have advice for me on how to improve writing my own code?", "score": 19}, {"text": "Redditors, anyone knows a good Dashboard example that we can get some inspiration from to manage a Statistical process control to have in a manufacturing environment?. ", "score": 6}, {"text": "TUI app with 100+ interactive Python Regex exercises. Hello!\n\nHaving an interactive program that automatically loads questions and checks the solution is wonderful to have while learning a topic. I wrote a [TUI app](https://github.com/learnbyexample/TUI-apps/blob/main/PyRegexExercises) that has beginner to advanced level exercises for Python regular expressions. There are more than 100 exercises covering both the builtin `re` and third-party `regex` modules.\n\nThis app is available on PyPI as [regexexercises](https://pypi.org/project/regexexercises/). Example installation instructions are shown below, adjust them based on your preferences and OS.\n\n    # virtual environment\n    $ python3 -m venv textual_apps\n    $ cd textual_apps\n    $ source bin/activate\n    $ pip install regexexercises\n\n    # launch the app\n    $ regexexercises\n\nTo run the app without having to enter the virtual environment again, add this alias to `.bashrc` (or equivalent):\n\n    # you'll have to change the path\n    alias regexexercises='/path/to/textual_apps/bin/regexexercises'\n\nAdjust the terminal dimensions for the widgets to appear properly, for example 84x25 (characters x lines). Visit https://youtu.be/0oXPeF8HutQ for a video demo. There's a user guide within the app as well.\n\nThese exercises have been adapted from my [Understanding Python re(gex)?](https://github.com/learnbyexample/py_regular_expressions) ebook (free to read online).\n\nHope you'll find this app useful. Let me know your feedback. Happy learning :)", "score": 62}, {"text": "Thursday Daily Thread: Python Careers, Courses, and Furthering Education!. Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!\n\n**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**", "score": 5}, {"text": "Tools for address verification/repair. Curious if anyone has experience with tools that can help me build an address verification/repair component of a data quality tool? Thanks very much in advance.", "score": 1}, {"text": "Super Fast Proxy Fetcher for developers. tl;dr I built ballyregan - a python package proxy fetcher that finds free valid proxies in seconds (300 proxies / 30s).\n\nHi everyone, I'm Idan, a software developer and former DevOps engineer. I was scrapping some websites for an automation when my IP got blocked and banned. Then I discovered the proxy world.\n\nso Ballyregan is a proxy fetcher that aims to be the fastest and most reliable out there. It fetches proxies from many different providers, validates them async to provide high performance and speed, and finally allows you to filter your proxies by protocol and anonymity level.\n\nWanna try out? Star us on Github! \u2b50: [Star!](https://github.com/idandaniel/ballyregan) (it really does help me out in keeping this thing going)", "score": 39}, {"text": "another 4x to 5x speed up in calling #WASM #WebAssembly from python is on the horizon. ", "score": 77}, {"text": "refine a pslg with iterated snap rounding. [ShayHill/snap\\_pslg: Clean up a pslg with iterated snap rounding (github.com)](https://github.com/ShayHill/snap_pslg) \n\n# snap_pslg\n\nRefine a [planar straight-line graph](https://en.wikipedia.org/wiki/Planar_straight-line_graph) with [iterated snap rounding](https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.23.220).\n\n* floor all points to integer coordinates\n* eliminate edge intersections and t-junctions\n* if allowed to converge, no point will be within .5 units of an edge. You can remove this constraint entirely, maintaing more of the input shape at the cost of near t-junctions, by setting max_iterations to 0.\n\nThis will slightly distort the pslg, but the result will be ready for triangulation and other algorithms.\n\n## install\n~~~\npip install snap_pslg\n~~~\n\n## signature\n~~~python\nVec2 = Annotated[Iterable[float], \"2D vector\"]\n\ndef snap_round_pslg(\n    points: Iterable[Vec2], edges: Iterable[tuple[int, int]], max_iterations: int = 100\n) -&gt; tuple[list[IntPoint], list[tuple[int, int]]]:\n    \"\"\"Perform one iteration of snap rounding.\n\n    :param points: A list of 2D points\n    :param edges: A list of edges, each a pair of indices into points\n    :param max_iterations: optionally limit number of iterations to perform. By\n        default, will try 100 iterations to reach convergence.\n    :return: A list of 2D points, a list of edges, each a pair of indices into points\n\n    Some of the points may not have indices. That is fine.\n    \"\"\"\n~~~\n\n## usage\n\n~~~python\nfrom snap_pslg import snap_round_pslg\n\npoints = [(0, 0), (3, 0), (3, 3), (0, 3), (5, 5)]\nedges = [(0, 2), (1, 3)]\n\n# You might have noticed that point (5, 5) was never used. This is fine. It\n# will be retained as a point and any line segments that pass very close to it\n# will be routed through it.\n\nnew_points, new_segments = snap_round_pslg(points, edges)\n\nnew_points  # [(0, 0), (5, 5), (3, 3), (2, 2), (0, 3), (3, 0)]\nnew_edges  # [(0, 3), (4, 3), (3, 2), (3, 5)]\n\n# a new point, (3, 3) has been added at the segment intersection\n# each segment is broken into two pieces\n~~~", "score": 2}, {"text": "GPTerminator - ChatGPT in the Terminal UPDATED. Hey everyone, I posted about this project a while back, however, lots of changes have been made and I would appreciate if you guys checked it out! You can now copy code, save/load chats, configure, etc.\n\nRepository link: [https://github.com/AineeJames/ChatGPTerminator](https://github.com/AineeJames/ChatGPTerminator)\n\n[Example of GPTerminator](https://preview.redd.it/36qk7nvgoepa1.png?width=1587&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=b68f2c5af57c9e24e0832610db1c1bbd00b3d805)", "score": 3}, {"text": "Python-based (or usable through command-line) synths and samplers. Hey all! I'm playing around with music generation in Python, but I've run into an issue where the synth I'm using only works with SoundFonts (.sf2), and while they're okay, they mostly sound pretty lame. Can anyone suggest some synths and/or samplers that work with Python or at least command line? It would need to take midi data and generate audio out of it.\n\n&amp;#x200B;\n\nAs a side note, I use Logic Pro/Ableton, so if there's a way to use VST or Audiounit synths that I already own inside Python, that would be HUGE.", "score": 9}, {"text": "Monty Hall Problem, Simulation and New Perspective.  \n\nSo I was getting bored at the job, and I thought, let's simulate the Monty Hall problem. So I did, and I got a new perspective on the problem.\n\nHere is the code I used,\n\n    import random\n    \n    l1 = [\"Car\"] + [\"Garbage\"]* 2\n    \n    \n    def contestant_switches():\n        contestant_wins = 0\n        contestant_loses = 0\n    \n        for i in range(100_000_000):\n            random.shuffle(l1)\n    \n            door_numbers = [0, 1, 2]\n            car_in_door = l1.index('Car')\n    \n            # contestant chooses a door\n            contestant_choice = random.choice(door_numbers)\n    \n            # Monty shows that car is not in doors_left\n            if contestant_choice == car_in_door:\n                # then Monty can show any of the left two doors\n                # and if the contestant changes his choices, he loses\n                contestant_loses += 1\n            else:\n                # then Monty can only show one door which doesn't have car\n                # other door definitely has car, so if contestant switches\n                contestant_wins += 1\n    \n        return contestant_wins / (contestant_wins + contestant_loses)\n    \n    \n    def contestant_stays():\n        contestant_wins = 0\n        contestant_loses = 0\n    \n        for i in range(100_000_000):\n            random.shuffle(l1)\n    \n            door_numbers = [0, 1, 2]\n            car_in_door = l1.index('Car')\n    \n            # contestant chooses a door\n            contestant_choice = random.choice(door_numbers)\n    \n            # Monty shows that car is not in doors_left\n            if contestant_choice == car_in_door:\n                # then Monty can show any of the left two doors\n                # and if the contestant doesn't change his choices, he wins\n                contestant_wins += 1\n            else:\n                # then Monty can only show one door which doesn't have car\n                # other door definitely has car, so if contestant switches\n                contestant_loses += 1\n    \n        return contestant_wins / (contestant_wins + contestant_loses)\n    \n    \n    print(f\"Probability of winning if contestant switches is: {contestant_switches():.2f}\")\n    print(f\"Probability of winning if contestant stays is: {contestant_stays()}:.2f\")\n    \n\n**Here is my perspective, we never consider Monty's action in this. But his action has an effect.**\n\nLet's say the contestant at the start chooses wrong, which is more likely (2/3). Now Monty is left with two doors one with the car, and the other with garbage. He has to open the door with the garbage. So now the door left definitely 100% has the car. So if the contestant switches, he wins.\n\n**Two steps, first he chooses wrong - prob = 2/3, second he switches then winning  prob = 1**\n\n**Total probability = 2/3 \\* 1 = 2/3**\n\n**So the contestant wins probability if he switches is 2/3.**", "score": 0}, {"text": "A fast way to create custom GUIs using Qt-designer and other lightweight library in python. I got really irritated by the huge startup time and huge folder size of pyqt libraries. But i liked the comfort of Qt-designer. So I made a script to use the best of both worlds !.\n\nIt's a hobby project and still in adolescent stage. link  [here](https://github.com/amrutnrp/qui-converter)\n\nThoughts?\n\n&amp;#x200B;\n\nhttps://preview.redd.it/4g4wq7ya7apa1.png?width=1144&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=720b89e4cb9b1e4c691b16dbca4713395676f47f", "score": 19}, {"text": "Birthday paradox. I wanted to see the birthday paradox in a real example so I wrote this code. What do think ? Every time I found ~50% of the groups contains at least two equal numbers.\n\nhttps://ibb.co/Swdnxy3", "score": 3}, {"text": "Welcome to the PyPI Blog. ", "score": 36}, {"text": "Web Scraping Amazon using Python. ", "score": 3}, {"text": "walnats: Nats-powered event-driven background jobs and microservices framework for Python.. ", "score": 4}, {"text": "python filename linter : a small pre-commit hook I made to lint python files and their folders to be snake_case. Hey everyone, long time lurker here.\n\nhttps://github.com/ClementPinard/python_filename_linter\n\nJust made this small tool to make sure all your python files and their folders in your repo follow the snake_case convention. Was tired of seeing coworkers use the PascalCase each time a module only stores a class (I can't bear the sight of `from .MyClass import MyClass` anymore !)\n\nDon't hesitate to share your thoughts on this, this tools is arguably simple, to the point I was surprised I found nothing to do this already.\n\nFeedback appreciated on\n\n-  The existence of an older/better tool that fulfills the same purpose\n- An obvious drwaback or antipattern of this tool I didn't see\n\nAlso, although it's possible with the `--rename` command arg, this tools does not rename your files and folder automatically, because then it completely breaks your imports. I know you can do smart renaming that also updates imports in VSCode's pylance and in Pycharm as seen [here](https://devblogs.microsoft.com/python/python-in-visual-studio-code-december-2021-release/#module-rename-with-change-preview), if you know a way of doing that properly in python or CLI, let me know\n\nFinally, this tool comes with a pre-commit hook, don't hesitate to enforce it in your company to break all CIs for badly named python modules :)", "score": 3}, {"text": "Open source tool Pair, An iterative, stateful chat-like interface for programmers to pair programming with GPT-4. we have released an Open source tool Pair ([https://github.com/jiggy-ai/pair](https://github.com/jiggy-ai/pair)), An iterative, stateful chat-like interface for programmers to pair programming with GPT-4, might be useful to some of you. Github Copilot is a great tool for leveraging GPTs while coding, but it is too \u201copen loop\u201d for more complex tasks that require Q&amp;A, feedback to guide it in a particular direction, iteration on code execution errors, etc. There is a large class of tasks that are better accomplished in an iterative, stateful chat-like interface, thus we built Pair. You are welcome to use it and also to contribute to it.", "score": 20}, {"text": "\ud83d\udc49 New Awesome Polars release! \ud83d\ude80 What's new in #Polars? Let's find out!. ", "score": 4}, {"text": "Pricing python scripts?. Is there any guide, bibliography or helpful tips to determine the price of a python script?\r\n\r\nI have developed some simple python scripts that automate certain tasks in several areas of our company, using mainly pandas, outlook and ERP/SAP data.\nThere's an internal contest on innovation ideas and I'm willing to compete in order to implement these scripts, but these solutions/scripts need be priced first.\n\r\nI work in this company as a supply chain employee, thus these scripts programming are not part of my assignments and they were programmed at home during my free time (to learn and to ease my daily work tbh)\r\n\r\nAny help will be appreciated.", "score": 0}, {"text": "PyVibe: Generate styled HTML pages from Python. &amp;#x200B;\n\nhttps://preview.redd.it/s9zir6gfh6pa1.png?width=2560&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=f3e2bed1ee99d958272d2b579a56d2c5283dee6d\n\nI've been using Tailwind CSS, in particular [Flowbite](https://flowbite.com/), for a number of different Python projects that I was working on and through that process, I realized that I end up either repeating or copying functions that generate UI components.\n\nThat led me to create this Python library to make it easier to use re-use UI components for my Flask applications: [https://www.pyvibe.com/](https://www.pyvibe.com/)\n\n[https://github.com/pycob/pyvibe](https://github.com/pycob/pyvibe)\n\nI wrote it in such a way that it generates an HTML string, so it's usable in Flask, as a static HTML file, or even in Pyodide (which is Python running in the browser via WebAssembly). \n\nLet me know what you think!", "score": 48}, {"text": "Using Python Code in Android Studio With Chaquopy. Whenever we deploy any machine learning model in an android app often the preprocessing/post-processing function for the model would have to be written in Java or Kotlin. Around 3 years ago I stumbled upon a framework called Chaquopy that lets you use python code in android studio and I developed a demo object detection app in it. In this blog, I have shared the same with the community in a step-by-step fashion. If you have any doubts, please comment on medium. \n\n&amp;#x200B;\n\n[https://medium.com/geekculture/using-python-code-in-android-studio-with-chaquopy-2d4dc3469d4d?source=social.linkedin](https://medium.com/geekculture/using-python-code-in-android-studio-with-chaquopy-2d4dc3469d4d?source=social.linkedin)", "score": 5}, {"text": "pytest tips and tricks. ", "score": 8}, {"text": "structura, CPython library written in C. Hello everyone,\n\nI've created a Python data structures library called \ud835\ude00\ud835\ude01\ud835\uddff\ud835\ude02\ud835\uddf0\ud835\ude01\ud835\ude02\ud835\uddff\ud835\uddee using C-Python API. It's purely implemented in C, type-agnostic, and has a pythonic API. The library also has detailed documentation for each data structure,  explaining what they are and how to use them. To install it, simply use the command \ud835\uddfd\ud835\uddf6\ud835\uddfd \ud835\uddf6\ud835\uddfb\ud835\ude00\ud835\ude01\ud835\uddee\ud835\uddf9\ud835\uddf9 \ud835\ude00\ud835\ude01\ud835\uddff\ud835\ude02\ud835\uddf0\ud835\ude01\ud835\ude02\ud835\uddff\ud835\uddee. Cheers \ud83d\udc0d  \n\n\n\\* python3.5 and above are supported  \n\\* runs on any Linux distro\n\nany suggestions and critics are welcomed!\n\n[Github Repo](https://github.com/sekomer/structura)", "score": 3}, {"text": "Auto Login and Auto Prompt for non api chat gpt. No cloudfare so far!!. ", "score": 0}, {"text": "PyVibe: Easily create styled web pages with Python. ", "score": 5}, {"text": "Implementing a BackgroundRunner with Flask-Executor. ", "score": 4}, {"text": "DataMotto: Write Python code with the speed of AI. \ud83d\ude80 [https://DataMotto.com](https://DataMotto.com)\n\nhttps://preview.redd.it/q272idehndpa1.png?width=1600&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=4fca900ec5d4e682ffb2085cba444c06ab5dd0ea", "score": 0}, {"text": "How do you decide to use a Python Package. Hey guys,\n\nso I was wondering how do you decide on using a Python package? Of course there is the obvious answer that you chose a package based on functionality that you need (Pytorch for neural networks, requests for well... requests, etc.).\n\nThere are though in my eyes other factors that are important, especially in professional development and that is both safety of the package and also quality of the package. So my question is how do you judge those two parameters? Do you fly over the source code? Do you look at test coverage? Do you check for documentation before installing or are there any resources that provide insights into different packages? \n\nThanks in advance for your answers!", "score": 95}, {"text": "PyLLaMACpp: A simple way to run llama.cpp + Python bindings. ", "score": 9}, {"text": "Was there a reason the post regarding the Devpost Python Hackathon was removed?. I was interested in competing, however after seeing that it had gotten removed so quickly and that the OP\u2019s comments were being downvoted to oblivion, I am a little suspicious of it\u2019s legitimacy.", "score": 7}, {"text": "GitHub - larswaechter/schlaumeier: Automatically solve Android quiz games using OpenCV &amp; ChatGPT\ud83e\uddd9\u200d\u2642\ufe0f. ", "score": 0}, {"text": "Wednesday Daily Thread: Beginner questions. New to Python and have questions? Use this thread to ask anything about Python, there are no bad questions!\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.", "score": 5}, {"text": "Using Python to stream data at scale to and from pandas data frame + Intro offer. Last month I wrote a [blog post](https://infinyon.com/blog/2023/01/jupyter-with-real-time-data/) on streaming data in and out of Pandas dataframe in Jupyter notebook or GoogleColab and Infinyon Cloud (team behind [https://fluvio.io/](https://fluvio.io/) open source streaming platform)\n\nIt's \"The Right Way\" to use streams in Python using python generators, where stream returns a lazy iterator and only materialises on display or list over iterable. \n\nIf you follow [blog post](https://infinyon.com/blog/2023/01/jupyter-with-real-time-data/) you shall be streaming data in and out in 10 minutes or less (reading time 4 minutes, 2 minutes to sign up for the cloud and 4 minutes to start Google Colab). \n\nAlternatively, for a limited-time offer from #Infinyon:\n\nyou can book a half-hour session with me for the next two weeks and build a streaming pipeline using Infinyon Cloud.\n\nI will take you through onboarding then you can choose:\n\n\\* Build data pipeline using Python SDK to stream data in and out of pandas dataframe\n\n\\* Streaming data from MQTT source to PostgreSQL\n\n\\* Streaming data from HTTP source to PostgreSQL\n\nIt\u2019s reverse screen-share - you share your screen, and I walk you through the process.\n\nI guide you every step of the way. \n\nDon\u2019t miss out on this limited-time offer to explore the full potential of InfinyOn Cloud for your data streaming needs.\n\nFeel free to schedule a time using [calendly link](https://calendly.com/alexander-infinyon/30min).\n\nInfinyon cloud platform offers the best value in the market. We offer you an exclusive bonus for trying it out: sign up today for free and receive $750 USD in credits to use towards our cloud services. \n\nThere are no salespeople on the call - techie-to-techie introduction.", "score": 0}, {"text": "Twitter API - free, no tokens required. A complete implementation of the Twitter API (1.1/2/graphql)\n\n- automate account actions (tweet,dm,like, etc.)\n- pull data (async)\n- search (async)\n\nhttps://pypi.org/project/twitter-api-client/", "score": 22}, {"text": "QualityScaler 1.12 - image/video AI upscaler. &amp;#x200B;\n\nhttps://preview.redd.it/6mkfqqcs58pa1.png?width=1725&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=88e41cea7597fa5f8fa014a0952cf43cfb174738\n\nQualityScaler.\n\n* [https://jangystudio.itch.io/qualityscaler](https://jangystudio.itch.io/qualityscaler)\n* [https://github.com/Djdefrag/QualityScaler](https://github.com/Djdefrag/QualityScaler)\n\nChangelog 1.12:\n\n### NEW\n\n* The app is now a single, portable .exe:\n   * no more confusing directory with lots of files\n* Completely rewrote the image splitting function\n   * (when the whole image does not fit into gpu memory) (again)\n   * this should reduce the vertical and horizontal lines that\n   * were encountered when this function was used\n* For video, frame splitting/joining functions also benefits from multithreading optimization\n   * comparing with the previous algorithms\n   * tiling frames is at least x2 faster\n   * joining frames together after upscale is at least x4 faster\n   * (can be even faster depending on the number of cpu selected)\n\n### BUGFIX / IMPROVEMENTS\n\n* General bugfixes &amp; improvements\n* Updated dependencies\n* Optimized AI models, will now use fewer resources\n\n### GUI\n\n* Updated info widget texts", "score": 1}, {"text": "Opinion on the monaco lib ?. Hi everyone,\n\nI want to develop Monte Carlo simulations for various uses, with tkinter as GUI. I initially planned to interface python with c++, but i just came across the monaco lib. Maybe it is enough for what i need (simulation of traffic jams for example), and could avoid me to interface python and c++ which doesn't seem to be that easy. Do you guys have experience with monaco ? Is it fast / flexible ?\n\nThanks !", "score": 42}, {"text": "Hello everyone, this is my deep learning project to recognize pokemon by image on Github, hope you enjoy!. Code: [https://github.com/vovod/pytorch-who-is-that-pokemon](https://github.com/vovod/pytorch-who-is-that-pokemon)\n\nhttps://preview.redd.it/ngx9x2cxf3pa1.png?width=640&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=ad674ab21c8530d82ab595d40170717c40225163", "score": 16}, {"text": "Handling Files In Python - Opening, Reading &amp; Writing. &amp;#x200B;\n\nhttps://preview.redd.it/exs343y7m9pa1.png?width=1600&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=ed877d523e8ede86b197f2ba8d54baa763701378\n\nFiles are used to store information, and when we need to access the information, we open the file and read or modify it. We can use the GUI to perform these operations in our systems.\n\nMany programming languages include methods and functions for managing, reading, and even modifying file data. Python is one of the programming languages that can handle files.\n\nWe'll look at how to handle files, which includes the methods and operations for reading and writing files, as well as other methods for working with files in Python. We'll also make a project to adopt a pet and save the entry in the file.\n\n**Here's the guide to performing different operations on the file\ud83d\udc47\ud83d\udc47**\n\n[Handling Files In Python - Opening, Reading &amp; Writing](https://geekpython.in/handling-files-in-python)", "score": 0}, {"text": "How to check if pip package is malicious. I'm looking for some tips on what to look for when evaluating a pip package for malicious code.    \nHere is an actual example I recently went through:\n\nThere is a fairly known pip package called **Cython**: [https://pypi.org/project/Cython/](https://pypi.org/project/Cython/).   \nAt the same time there is a lesser known package very similarly called **cPython**: [https://pypi.org/project/cPython/](https://pypi.org/project/cPython/)^1\n\nIt's easy to mistype:\n`pip install cpython`\ninstead of:\n`pip install cython`\n\nSince pip install executes code from the package itself I thought it would be useful to investigate what this package contains so went through the following steps:\n\n1. Went to project homepage under pypi.org https://pypi.org/project/cPython/ and downloaded the latest package version since I'm assuming this is what pip install fetches if no version is provided. The latest version seems to be 0.0.6 under Downloads: https://pypi.org/project/cPython/#files\n2. Uncompressed the file, it's a tar.gz\n3. Checked the following files:\n    1. setup.py : no suspicious code at first sight. Also looked at dependencies (install_requires) and got 2: pymongo and requests, which are well known packages\n    2. cPython.py in subdirectory cPython: I'm assuming this file is not executed by pip install but I'm not sure if the imports are not resolved, it seems there are more dependencies in this file than listed under setup.py, but none triggers any concerns.\n    3. __init__.py in same subdirectory cPython: empty, similar comment to above.\n\nIt seems this particular package does not distribute binary components so this makes reviewing easier.\n\nWould you think these kind of checks are sufficient or can there be some more hidden traps one can miss even on a simple package as in this example?\n\n\n^1 I should note that at the time of this writing there is no information to assume that malicious code is delivered through the cPython package, although it's not very clear why the author went with this name for what seems to be just a wrapper script.", "score": 9}, {"text": "Build an open-source Python Game - $12.7K in prizes.. Show off your game development skills and win some amazing prizes. Join us in creating an open-source game using Python and the framework of your choice.\n\nPyGames is open to everyone, including beginners. You have a month to build the game and submit it to the gallery!\n\nThe game can be anything you want - a multiplayer arcade-style game, a console game, or whatever you can think of that's fun. It doesn't have to be original, but it has to be built by you.\n\nWe have some incredible awards to give out as well.\n\n* The \"One-of-a-kind\" award, worth $2500, goes to the most unique game.\n* The \"Pure Nostalgia\" award, also worth $2500, goes to the game that brings back the best memories.\n* And for those of you who love a challenge, the \"Headache Fuel\" award, worth $2500, goes to the most frustrating but fun game.\n* Six honorable mentions worth $700 each.\n* If you're one of the first 20 eligible submissions, you'll win $50 just for submitting.\n\nThis challenge is about creativity. Your implementation is less important than the creativity of the game you come up with. Whether you're a seasoned game developer or a newcomer to the scene, this is your chance to learn something new, have fun, and win prizes.\n\nSubmit your game at [PyGames](https://aka.ms/PyGames)\n\nEdit: US and Canada residents can win prizes - if you are not in either of those countries you can work with a teammate in the US or Canada and we can disperse the money to them to divide it as you all see fit. If you\u2019re under 18 you\u2019ll have to submit as your parent to win prizes. \n\nAll of these restrictions are due to compliance issues - exploring what we can do for future hacks to expand the aperture to the Non US/CA community. Cheers.", "score": 49}, {"text": "[ZnFlow] Play around with Graphs. I wrote a small package [ZnFlow](https://github.com/zincware/ZnFlow) ``pip install znflow`` that allows you to build computational graphs based on functions and/or classes. You can define your graph using inheritance or decorators and connect them in what ever way you like. The graph will only be executed when you call ``graph.run()``.\n\nHere is a small example:\n\n```python\nimport znflow\nimport dataclasses\n\n@znflow.nodify\ndef compute_mean(x, y):\n    return (x + y) / 2\n\n@dataclasses.dataclass\nclass ComputeMean(znflow.Node):\n    x: float\n    y: float\n    \n    results: float = None\n    \n    def run(self):\n        self.results = (self.x + self.y) / 2\n        \nwith znflow.DiGraph() as graph:\n    n1 = ComputeMean(2, 8)\n    n2 = compute_mean(13, 7)\n    # connecting classes and functions to a Node\n    n3 = ComputeMean(n1.results, n2) \n    \ngraph.run()\nprint(n3.results)\n# &gt;&gt;&gt; 7.5\n```\n\nSo far there is no parallel execution and this is ment as a playground for writing graphs. The graph is stored using ``networkx`` and can be visualized as such.", "score": 7}, {"text": "Made a basic system monitor with pygame. Full app can be found at: [https://drive.google.com/drive/folders/1-K8IfYNAVmEw35yT2aoZwWBRaK3Ju3fi?usp=share\\_link](https://drive.google.com/drive/folders/1-K8IfYNAVmEw35yT2aoZwWBRaK3Ju3fi?usp=share_link)\n\nAlthough this is a showcase of the app, feel free to let me know if there's any problems\n\n&amp;#x200B;\n\nUpdate: Fixed the credits alignment problem\n\n[System Display](https://reddit.com/link/11xeeuj/video/zc3cmsw0z2pa1/player)", "score": 10}, {"text": "Lona - create full web-applications from a simple Python script. It's been more than a year since last time i posted about my web-framework Lona, and it evolved quite a bit since then!\n\nLona is an easy to use, full Python, framework to create beautiful web-applications in minutes, without dealing with JavaScript or CSS. It has a very flat learning curve to get you started, and scales as your project grows. It is written in vanilla Python and JavaScript, so you don't have to deal with tools and libraries like npm, vue, react etc.\n\nOne of the newest additions to the project is the tutorial i wrote ([https://lona-web.org/1.x/tutorial/index.html](https://lona-web.org/1.x/tutorial/index.html)) to make the first steps even easier. It contains many examples, and small clips of them.\n\nFeedback in any form would be very welcome!\n\n&amp;#x200B;\n\nGithub: [https://github.com/lona-web-org/lona](https://github.com/lona-web-org/lona)\n\nDocumentation: [https://lona-web.org/1.x/](https://lona-web.org/1.x/)\n\nDemos: [https://lona-web.org/1.x/demos/index.html](https://lona-web.org/1.x/demos/index.html)", "score": 210}, {"text": "I am building a ReadMe for tips on coding with python. It is for beginners and gives you a some nice tips on different situations when programming with Python. ", "score": 2}, {"text": "Fitness Tracking using Python &amp; Mediapipe Tutorial -Angle Tracking. ", "score": 5}, {"text": "chat-toolkit: an extensible package for creating ML-powered chatbots. Hello!\n\nI would like to share my first public PyPI project.\n\n    pip install -U chat-toolkit\n\nsource code: [https://github.com/danb27/chat-toolkit](https://github.com/danb27/chat-toolkit)\n\nThis is a quick way to proof of concept a ChatGPT chatbot from the terminal: `python -m chat_toolkit`. But it is also much more.\n\nWhile I have seen other packages/repos recently that also require an OpenAI API key and provide an easy way to access ChatGPT from the terminal, my package is not designed exclusively around the terminal or ChatGPT. It also has the following features:\n\n* Is an extensible framework for making different types of components for conversational AI. Currently, the three types of components are Chatbots, Speech-to-Text, and Text-to-Speech. Each component type currently only supports a single API to start with: OpenAI's ChatGPT (paid), OpenAI's Whisper (paid), and pyttsx3 (free), respectively.\n* Using these three (for now) types of components allows the user to proof of concept more complicated chatbots, such as a Speech to Speech chatbot that you can speak directly with and hear responses from: `python -m chat_toolkit --speech-to-text --text-to-speech`\n* Users can subclass the component base classes to proof of concept currently unsupported algorithms. This is the same process I will use to add support for more algorithms. Components of the same type can be hot-swapped for each other.\n* Extensible components can be used directly for developing your own applications, not just creating a quick proof of concept in the terminal.\n\nWould appreciate any constructive and respectful feedback.\n\nEDIT:\n\n\\- formatting", "score": 1}, {"text": "Going to fail an Exam because I wasn't prepared. I feel rather demoralized right now.\n\nI've been studying pretty good all semester in my Python class. I've been reading each chapter in the text book, watching the videos, and doing the assignments to a T. Yet, when I entered into the Midterm Exam, I felt WAY under prepared. I don't feel like I was taught anything.\n\nThis is a course about Python in a program called ArcGIS Pro. First assignment was just introduction. Second was an introduction to IDLE (no scripting yet). The third was towards a little bit of model building and then a tiny bit of scripting. Now we're JUST being introduced to scripting and actually running something.\n\nThe Midterm Exam was way more than \"here a script, run it and see what happens.\" It was \"I want you to create a buffer utilizing a list of four numbers that I'm going to give you and you're going to use a function that I never taught you how to use.\"\n\nHow the hell am I supposed to create a script from my head when I just started learning how to script a few days ago?\n\nMy biggest fear is finding out that other students were able to do this and I'm just a moron.\n\nI thought I was doing well and learning here and there. Now I don't think so.\n\nSorry if this doesn't belong here. I figured this place would be good as any to vent and have people understand what I'm talking about. If you need this removed, it's okay.", "score": 0}, {"text": "Random Settler's Of Catan Board Generating Program. I made a python program to randomly generate a game board with numbers for Settler's of Catan - the original idea was to get my friends to shut up about making unfair boards, but it's actually a pretty good beginner lesson so I made a tutorial on it here:\n\n[https://www.youtube.com/watch?v=7h3sFhBAgcw](https://www.youtube.com/watch?v=7h3sFhBAgcw)\n\nAnd all the code is available here:\n\n[https://github.com/plemaster01/CatanBoardGeneration](https://github.com/plemaster01/CatanBoardGeneration)", "score": 104}, {"text": "Solomon: Data Exploration tool.. Wanted to try making use of OpenAI to create a data exploration tool. It makes use of the code-davinci-002 (soon to be deprecated) streamlit and pandas.\n\nhttps://github.com/Onlyartist9/Solomon", "score": 0}, {"text": "Free-to-use GPT-3 powered command-line shell (no API-key required). ", "score": 344}, {"text": "Executing Python Scripts With a Shebang \u2013 Real Python. ", "score": 0}, {"text": "A Simple Python Guide to Concatenating DataFrames. ", "score": 0}, {"text": "Why you need to use CBVs over FBVs in django. ", "score": 0}, {"text": "I explained threading by making a cup of tea. Please give me honest feedback.. ", "score": 98}, {"text": "[I] created a discord chatgpt bot.. Just create a bot, put in API keys and you're done!\n\nIt will reply to all messages but not itself. It's locked to one single guild per bot only for safety reasons.\n\nPRs welcomed. Enjoy!\n\n[https://github.com/Lodimup/discord-gpt](https://github.com/Lodimup/discord-gpt)\n\n&amp;#x200B;\n\n[mandatory inf. loop when developing](https://preview.redd.it/eyr0mfuld3pa1.png?width=1167&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=75fa4b185780d6ccf68451a67f1eba479c048084)", "score": 0}, {"text": "Tuesday Daily Thread: Advanced questions. Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.\n\n**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.", "score": 3}, {"text": "Reduce - The Power of a Single Python Function. ", "score": 5}, {"text": "Orm or not Orm? Mayim?. Hello everyone, im more or less proficient in sql, already manage my database as is, and i dont know if i need an orm or not and mostly where do i need to look to not use it but still have some goodies, i have seen mayim project, i feel like its more or less the degree of freedom i need, id like opinions on that and maybe alternatives to evaluate.. thanks everyone\n\nedit: add link to mayim \n\nhttps://ahopkins.github.io/mayim/guide/install.html", "score": 4}, {"text": "Python Platformer Game Tutorial for Beginners [1:52:06]. ", "score": 5}, {"text": "Use OpenAI's DALL-E for free. ", "score": 3}, {"text": "Impressions and interesting talks from PyData NYC 2022. ", "score": 4}, {"text": "I made a Conway's game of life in a Python GIF exporter!. Hey everyone! I created a [Python application to export Conway's Game of Life simulations](https://github.com/linguini1/conway) as GIFs and PNGs after becoming fascinated with the cool behaviour this game produces.\n\nThere is a library of some common seeds/automata from the original game rules, as well as a library of different cells that can be used to achieve different behaviour. The configuration of the simulation can either take a set amount of generations/frames to run for, or can be instructed to run until the simulation stagnates.\n\nIt is currently geared towards developers as you will have to mess around with the [main.py](https://main.py) file to use different cell types and seeds (which I am working on changing to be more user-friendly). There is some sample code in the README documentation, and a GitHub Wiki that explains some features.\n\nAny feedback is welcome! I am especially looking for a speedier way to create the long GIFs, as right now longer simulations can take a while to scale and stitch together.\n\n[\\\\\"Maze cell\\\\\" simulation](https://i.redd.it/dsi9mzdf2xoa1.gif)\n\n[The \\\\\"Shoebox\\\\\" seed using classic cells from the original Game Of Life rules](https://i.redd.it/x8ac46qh2xoa1.gif)", "score": 5}, {"text": "Django Developers Survey 2022 Results. ", "score": 6}, {"text": "Wayback machine for pip requirements.txt. If you're struggling to get correct Python dependencies for an older project, requirements_wayback_machine will try to tell you how your dependencies would have been resolved at given date in the past!", "score": 23}, {"text": "I've created one of the Fastest Python web Frameworks!!. **Panther**  \n**Github**: [https://github.com/AliRn76/panther](https://github.com/AliRn76/panther)  \n**Documentation**: [https://pantherpy.github.io/](https://pantherpy.github.io/)  \n\n\nhttps://preview.redd.it/gtec70b1uroa1.png?width=831&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=08c1d9b71f3f555297432cc817dfa09d05c67c66", "score": 31}, {"text": "NASA's Cassini - Cosmic Dust Analyzer: How to calibrate a space instrument. Hello everyone,\n\nIn my current small tutorial series I am showing how the Cassini Cosmic Dust Analyzer (CDA) was calibrated. A detailed description of the initial idea can be seen [here](https://youtu.be/rO6w9B0Jw7U) or read here on Wikipedia: [https://en.wikipedia.org/wiki/Cosmic\\_Dust\\_Analyzer](https://en.wikipedia.org/wiki/Cosmic_Dust_Analyzer).\n\nNow before an instrument is set to space one needs to have an understanding and also (empirical) equations and algorithms to convert electric signals into the physical units you'd like to derive. E.g., a current or voltage corresponds to the velocity of a dust particle. To achieve this, the instrument is calibrated in a dust accelerator. Yes, you hear it correctly. A ... \"Cern like accelerator\" ... not for atoms, but for micrometer sized dust particles (e.g., made of iron, Latex, or carbonous compositions).\n\nNow in this small series I want to show how the instrument is calibrated, what kind of calibration functions exist (empirical ones) and how one could use Machine Learning to improve the calibration accuracy of the instrument.\n\nIn this first video it is about the data exploration and understanding. The video and corresponding Open Source GitHub Link can be seen below.\n\nHope you'll like it; and if you work in a lab; also doing some calibration work, maybe the ML based approach will be of interest for you!\n\nBest,\n\nThomas\n\nYouTube: [https://youtu.be/gq-qk\\_Jq5p0](https://youtu.be/gq-qk_Jq5p0)\n\nGitHub: [https://github.com/ThomasAlbin/Astroniz-YT-Tutorials/blob/main/%5BProject%5D-Cassini-CDA/01-Calibration/01\\_data\\_exploration.ipynb](https://github.com/ThomasAlbin/Astroniz-YT-Tutorials/blob/main/%5BProject%5D-Cassini-CDA/01-Calibration/01_data_exploration.ipynb)", "score": 193}, {"text": "Python Cybersecurity \u2014 Build your own python tools (PortScanner, Visual Network Tracker and Anonymous FTP Scanner). **Python Cybersecurity \u2014 PortScanner**\n\nBuild a simple Port Scanner using the Python Programming language. Port Scanner is an application designed to probe a server or host for open ports. Such an application may be used by administrators to verify security policies of their networks and by attackers to identify network services running on a host and exploit vulnerabilities.\n\n**Link**: [https://youtu.be/bH-3PuQC\\_n0](https://youtu.be/bH-3PuQC_n0)\n\n**Python Cybersecurity \u2014 Visual Network Tracker**\n\nDive into Network Traffic visualization using the Python programming language, Wireshark and Google Maps. This tutorial covers the implementation steps needed to take a file of network traffic and convert it into an visual presentation using Google Maps.\n\n**Link**: [https://youtu.be/xuNuy8n8u-Y](https://youtu.be/xuNuy8n8u-Y)\n\n**Python Cybersecurity \u2014 Anonymous FTP Scanner**\n\nBuild a simple FTP Scanner using the Python Programming language. Anonymous FTP is a means by which archive sites allow general access to their archives of information. These sites create a special account called \u201canonymous\u201d\n\n**Link**: [https://youtu.be/BIZfRodSW9w](https://youtu.be/BIZfRodSW9w)", "score": 152}, {"text": "CPorter: Streamlined C &amp; Python Integration with Auto Type Checking and more. Over the weekend I wrote a simple wrapper for ctypes. It simplifies the process of compiling, loading, and calling C functions from Python. I wrote it mostly for fun, I'm sure there are much better library wrappers out there but it was a nice exercise in Python packaging and Mypy.\n\n I do enjoy statically-typed languages for the verboseness, so I took a crack at type hints and static-type checking with Python for once. Only 260 LOC but I'm happy it passes Mypy fully. \n\n\n\n\n\nHere's an example to show some speed differences:\n    \n    from cporter.cporter import CPorter\n\n    def fibonacci_iterative(n):\n        a = 0\n        b = 1\n        elif n == 0:\n            return a\n        elif n == 1:\n            return b\n        else:\n            for i in range(2,n+1):\n                c = a + b\n                a = b\n                b = c\n            return b\n    \n    cporter = CPorter()\n    \n    cporter.set_library_path(\"examples/lib\")\n    cporter.add_library(\"fib\")\n    print(\"Calculating 100th fibonacci number\")\n    py_results = cporter.profile_python_function(fibonacci_iterative, 100)\n    c_results = cporter.profile_function(\"fib\", \"fibonacci_iterative\", 100)\n    \n    print(f\"C Result:{c_results[0]} Time: {c_results[1]} seconds\")\n    print(f\"Python Result:{c_results[0]} Time: {py_results[1]} seconds\")\n\nAnd our result:\n\n    Calculating 100th fibonacci number\n    C Result:3736710778780434371 Time: 0.0001399169999999339 seconds\n    Python Result:3736710778780434371 Time: 5.000000000032756e-06 seconds\n\nAnyway, here's the repo: https://github.com/snacsnoc/cporter\n\nThe inspiration came from another project I submitted a few PRs to, [sushi](https://github.com/dev-sushi/sushi). It's another library to run functions from foreign languages within Python. Check it out, it's pretty cool.", "score": 6}, {"text": "TUT | quick video tutorial about self-hosting APIs. Hi gouyss, I made a quick video for web devs that want to self-host their apps. I showcase Docker, Docker-Compose and Traefik very quickly and show web developers how to get their APIs public quickly. Nothing groundbreaking but I needed this information and I didn't have a clear understanding of where to find it but it's my utmost hope it helps others that were chasing project requirements that are outlined in this video.   \n\n\nVideo Link: [https://www.youtube.com/watch?v=NIHzYIkXFhE](https://www.youtube.com/watch?v=NIHzYIkXFhE&amp;t=16s)\r  \nGithub Link:  [https://github.com/Wizock/how-to-host-FastAPI-Apis-on-traefik](https://github.com/Wizock/how-to-host-FastAPI-Apis-on-traefik)  \n\n\nAll feedback is appreciated :).", "score": 3}, {"text": "Middle level book to study Python. Is there any middle level book I can use once I know all the basics data types, functions, classes etc in order to level up the language? Thanks!", "score": 132}, {"text": "Are people abusing Python?. I learned Python after coming from the C/C++ and Java world. With the massive increase in popularity of Python in the last 10 years, seeing the way it developed, it seems to me like it gained a lot of functionality, which comes natural in other languages, but feels a bit odd in Python.\n\nTo be more specific - albeit Python being dynamically typed, people developed countless tools to check or validate or even enforce types in compile or run time (mypy, pyre, pydantic, pyduck etc.). It feels like it goes against the nature of its loose typing.\n\nAnother example are decorators. This pattern is noticably overused by many tools adding functionality, but even the language itself - defining a \\`class\\`,\\`static\\` and \\`abstract\\` methods with decorators seems just weird and unnatural. Same thing with function overloading.  Anecdotally, it feels like comparing German to English. German has a special word for every peculiar thing and native support for word generation by concatenation of multiple words whilst in English you have to add some common words together and hope this combination doesnt already exist. And if it does, so what, people will get it from the context.\n\nLastly, slightly off-topic but relevant point is that it is not even a simple language in my opinion. It has a very flat learning curve initially but the complexity is just further down the road. Im talking about metaclasses,data descriptors, coroutines, magic methods etc. Some languages are difficult right away (C++, Rust etc.), but Python is a intricate misfit dressed as a simpleton.\n\nAm I misunderstanding a philosophical path of the language or is it simply just a scripting langugage that got massively popular through chance and is now used for stuff it was not intended for?\n\nEdit: grammar", "score": 0}, {"text": "Is it possible to include C code in a package published to PyPi while not limiting compatibility?. Hello!\n\nI am working on a library, and in a part of it, I perform a customized search over large bytes objects. In my experience, C code runs about an order of magnitude faster when working with primitive data like byte arrays, I wanted to rewrite that part of the code in C to gain performance.\n\nI know about the ctypes module, but I am worried about portability. The library has about 30k downloads, so I want it to be compatible will any system it is installed on.\n\nTo my knowledge, numpy is also largely written in C. Do they compile their code for every possible platform and choose the binaries dynamically, or is there some other good way to do it?\n\nIf someone has any experience regarding this, any help would be appreciated greatly!", "score": 20}, {"text": "Alternate python spacing.. &amp;#x200B;\n\nhttps://preview.redd.it/2winm02i7poa1.png?width=952&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=f1587ca2a285aebdc0826456b6bcf72fa6e951c0\n\nHi! I've personally been using the one on the left a lot. I really like it just as personal preference, no particular reason.\n\nI haven't seen it used anywhere else, but I was wondering what other people thought of this.\n\nThanks.", "score": 32}, {"text": "Monday Daily Thread: Project ideas!. Comment any project ideas beginner or advanced in this thread for others to give a try! If you complete one make sure to reply to the comment with how you found it and attach some source code! If you're looking for project ideas, you might be interested in checking out Al Sweigart's, [\"The Big Book of Small Python Projects\"](https://inventwithpython.com/bigbookpython/) which provides a list of projects and the code to make them work.", "score": 3}, {"text": "pyWave - Financial transaction tracker.. I've decided to throw together a little thing that's pretty helpful with keeping track of transactions. Like a register book you'd get from a bank.\n\nIt works how you'd expect it to work, with a way to describe what the transaction was for, whether it was money going \"in\" or moving \"out\". It'll automatically update the total, starting with a starting balance that'd you have to set it up with to begin with. Like a normal register book. \n\n\n\nYou can use this project to help with balancing a checkbook, keeping track of money moving in and out of your wallet, etc.\n\n\n\nI don't expect it to be used at all, but I thought it was neat enough to share as it'll most definitely help me out a decent amount.\n\n\n\nYou can find the project here: https://github.com/therealOri/pyWave", "score": 5}, {"text": "Black for web development?. I think everyone would agree on the benefits of Black in the community. It's about the closest we've come to a \\`go ftm\\`, and it reduces the mental load of formatting.\n\nIt works great on python, but what's the equivalent for web development? I know there's \\`djlint\\` for formatting Django templates, but what about raw HTML files? Or non-Django templates? Are there any tools similar to Black in the set-it-and-forget-it category?\n\nI know this doesn't necessarily relate *directly* to python, but I figured everyone here is already familiar with the benefits of Black, and might know of similar tooling.", "score": 22}, {"text": "Create Your Own Code Editor Using PyQt5 #9 - Fixing Bugs and Adding Few Features. ", "score": 28}, {"text": "Smarty-GPT: wrapper of prompts/contexts. This is a simple wrapper that introduces any imaginable complex context to each question submitted to Open AI API. The main goal is to enhance the accuracy obtained in its answers in a **TRANSPARENT** way to end users.\n\nThis idea arose in the context of a health-related experiment lead by CiTIUS.(**more coming soon**).\n\n&amp;#x200B;\n\n[https://github.com/citiususc/Smarty-GPT](https://github.com/citiususc/Smarty-GPT)", "score": 0}, {"text": "In light of PEP 668, I'd like to share how my package handles virtual environments.. The recent discussion around PEP 668 and push towards venvs in Debian Sid made me want to share my solution for working with virtual environments from within Python. Let me explain:\n\n**TL;DR** A `Venv` context manager to control `sys.path` \\+ other goodies.\n\nA few years ago, when building out the [plugin system](https://meerschaum.io/reference/plugins/writing-plugins/), I wanted each plugin (i.e. just a Python module) to be given its own virtual environment, a la `pipx`, into which the plugin's dependencies are installed. In hindsight, I may have been suffering from \"not-invented-here-syndrome\" and maybe should have used one of the 1000 other Python package management tools out there, but to be honest, I'm grateful I took the time to write it exactly how I planned on using the feature. Remember, this wasn't intended to be yet another `pip` clone but instead a controlled way to manage plugins (albeit a bit hacky).\n\nThe internals of the plugin system work something like this:\n\n    &gt;&gt;&gt; from meerschaum.utils.packages import pip_install\n    &gt;&gt;&gt; pip_install('requests', venv='foo')\n    True\n\nThis creates a new venv `foo` (stored as  `~/.config/meerschaum/venvs/foo`) and installs `requests`. Another way to invoke this is through the CLI (though this will trigger installs for other internal components):\n\n    $ mrsm install package requests --venv foo\n\nNow you can use the `Venv` context manager to activate and import from this venv without having to fuss with `sys.path`, `threading.RLock`, or anything like that:\n\n    &gt;&gt;&gt; import meerschaum as mrsm\n    &gt;&gt;&gt; with mrsm.Venv('foo'):\n    ...     import requests\n    ... \n    &gt;&gt;&gt; requests\n    &lt;module 'requests' from '/root/.config/meerschaum/venvs/foo/lib/python3.12/site-packages/requests/__init__.py'&gt;\n\nAgain, this is a supporting feature, but if there's demand for it, I've been considering separating the [venv module](https://docs.meerschaum.io/utils/venv/index.html) into its own package.\n\nI hope you found this insightful and that it contributes positively to the PEP 668 discussion!", "score": 0}, {"text": "FastAPI 0.95.0 supports and recommends Annotated \ud83d\ude80 [cross-post from r/FastAPI]. This is probably the biggest FastAPI feature in several months, I thought it was worth sharing it. \ud83e\udd13\n\n(Cross-post from [r/FastAPI](https://www.reddit.com/r/FastAPI/comments/11v0j5w/fastapi_0950_supports_and_recommends_annotated/) but I thought this was cool enough to also share it here \ud83d\ude2c).\n\nFastAPI `0.95.0`, just released, adds support for dependencies and parameters using `Annotated` and recommends its usage. \u2728\n\nThis has **several benefits**, one of the main ones is that now the parameters of your functions with `Annotated` would **not be affected** at all.\n\nIf you call those functions in **other places in your code**, the actual **default values** will be kept, your editor will help you notice missing **required arguments**, Python will require you to pass required arguments at **runtime**, you will be able to **use the same functions** for different things and with different libraries (e.g. **Typer** will soon support `Annotated` too, then you could use the same function for an API and a CLI), etc.\n\nBecause `Annotated` is **standard Python**, you still get all the **benefits** from editors and tools, like **autocompletion**, **inline errors**, etc.\n\nOne of the **biggest benefits** is that now you can create `Annotated` dependencies that are then shared by multiple *path operation functions*, this will allow you to **reduce** a lot of **code duplication** in your codebase, while keeping all the support from editors and tools.\n\nFor example, you could have code like this:\n\n    def get_current_user(token: str):\n        # authenticate user\n        return User()\n\n\n    @app.get(\"/items/\")\n    def read_items(user: User = Depends(get_current_user)):\n        ...\n\n\n    @app.post(\"/items/\")\n    def create_item(*, user: User = Depends(get_current_user), item: Item):\n        ...\n\n\n    @app.get(\"/items/{item_id}\")\n    def read_item(*, user: User = Depends(get_current_user), item_id: int):\n        ...\n\n\n    @app.delete(\"/items/{item_id}\")\n    def delete_item(*, user: User = Depends(get_current_user), item_id: int):\n        ...\n\nThere's a bit of code duplication for the dependency:\n\n    user: User = Depends(get_current_user)\n\n...the bigger the codebase, the more noticeable it is.\n\nNow you can create an annotated dependency once, like this:\n\n    CurrentUser = Annotated[User, Depends(get_current_user)]\n\n\nAnd then you can reuse this `Annotated` dependency:\n\n    CurrentUser = Annotated[User, Depends(get_current_user)]\n\n\n    @app.get(\"/items/\")\n    def read_items(user: CurrentUser):\n        ...\n\n\n    @app.post(\"/items/\")\n    def create_item(user: CurrentUser, item: Item):\n        ...\n\n\n    @app.get(\"/items/{item_id}\")\n    def read_item(user: CurrentUser, item_id: int):\n        ...\n\n\n    @app.delete(\"/items/{item_id}\")\n    def delete_item(user: CurrentUser, item_id: int):\n        ...\n\n...and `CurrentUser` has all the typing information as `User`, so your editor will work as expected (autocompletion and everything), and **FastAPI** will be able to understand the dependency defined in `Annotated`. \ud83d\ude0e\n\nRoughly **all the docs** have been rewritten to use `Annotated` as the main way to declare **parameters** and **dependencies**. All the **examples** in the docs now include a version with `Annotated` and a version without it, for each of the specific Python versions (when there are small differences/improvements in more recent versions). There were around 23K new lines added between docs, examples, and tests. \ud83d\ude80\n\nThe key updated docs are:\n\n* Python Types Intro:\n    * [Type Hints with Metadata Annotations](https://fastapi.tiangolo.com/python-types/#type-hints-with-metadata-annotations).\n* Tutorial:\n    * [Query Parameters and String Validations - Additional validation](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#additional-validation)\n        * [Advantages of `Annotated`](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#advantages-of-annotated)\n    * [Path Parameters and Numeric Validations - Order the parameters as you need, tricks](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#order-the-parameters-as-you-need-tricks)\n        * [Better with `Annotated`](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#better-with-annotated)\n    * [Dependencies - First Steps - Share `Annotated` dependencies](https://fastapi.tiangolo.com/tutorial/dependencies/#share-annotated-dependencies)\n\nSpecial thanks to [@nzig](https://github.com/nzig) for the core implementation and to [@adriangb](https://github.com/adriangb) for the inspiration and idea with [Xpresso](https://github.com/adriangb/xpresso)! \ud83d\ude80\n\nIt took a while to get this done as it involved several days thoroughly reviewing the core PR (impeccable job) and a couple of weeks of full-time, continuous, focused work rewriting the docs, examples, and tests. And now it's finally out! \ud83c\udf89\n\nThis will also probably enable much better third-party integrations that can now export `Annotated` dependencies. \ud83d\ude0e\n\nGo update your FastAPI version and start enjoying using `Annotated`! \ud83d\ude80\n\nCheck more details in the release notes: https://fastapi.tiangolo.com/release-notes/#0950", "score": 298}, {"text": "Check out `gptty`: a CLI wrapper for ChatGPT written in Python. I created a CLI wrapper for ChatGPT called `gptty` because I was dissatisfied with the categorization tools available in the ChatGPT web UI. It can be installed on Github [https://github.com/signebedi/gptty](https://github.com/signebedi/gptty). I've added preliminary user docs on installation, configuration, and usage. I'd love feedback on (and contributions to) the code base.\n\n**What** `gptty` **does differently than other tools**. `gptty` adds support for tagged questions that, when used correctly, allow you to access past question context across sessions. So, for example, if you prepend a question with the `[shakespeare]` tag, then tag another question with the same, it allows you to access the prior conversation with ChatGPT -  thus largely replicating the context-preserving behavior of the web application while giving users control over how to tag and categorize these conversations.\n\n[Here is an example using the \\[shakespeare\\] tag](https://preview.redd.it/vl45x6mpdtoa1.png?width=1661&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=3ec47fd71f5308c29dedc89c15302d9efc5cfa70)\n\nFundamentally, this wrapper is focused on user control over the categorization of their conversations, but it also wants to provide an aesthetically pleasing experience. If it gains some traction, I'd like to add support for a bash runtime that allows you to send one-off questions using the same categorization logic, like: `gptty --question \"how old is the universe\" --tag \"physics\"`.\n\nThanks for any feedback, contributions, or installs you can give!", "score": 1}, {"text": "Learn Python using Minecraft. I'm looking for feedback on my project to teach Python to beginners by creating and interacting with things in a Minecraft world and also calling Python code on events in the Minecraft World.\n\nThis video is an example of the kinds of things that the library can do: [https://photos.app.goo.gl/9DWS9LtwQBrTCEPA8](https://photos.app.goo.gl/9DWS9LtwQBrTCEPA8)\n\nThis is the repo with links to documentation and tutorials: [https://github.com/gilesknap/mciwb](https://github.com/gilesknap/mciwb)", "score": 7}, {"text": "bare-bones terminal interface for chatGPT. I wanted to have an access to chatGPT from within the terminal and could not find any implementation that was easy to install and did what I wanted it to do, so I made my own.\n\n&amp;#x200B;\n\nhttps://preview.redd.it/2hmvgw234roa1.png?width=1012&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=9b78fddeb9d84ef5e8fe62fb5f45bff92715c8c1\n\nIt uses official openAI API. You can find it here: [https://github.com/Ach113/shellGPT](https://github.com/Ach113/shellGPT)\n\nIts very simple to install and use. You can specify which model you want it to use as backend by specifying `-m &lt;modelname&gt;`. Available models can be found [here](https://platform.openai.com/docs/models/moderation) (although not all models seem to work).\n\nYou can enable conversation logging by setting `-l` flag. You can also redirect responses to specific questions to text files using `&gt;`, `&gt;&gt;` operators:\n\n`$ What is the meaning of life &gt; answer.txt`", "score": 3}, {"text": "Rooshk - A command line sandbox god mode game!. [https://github.com/cmspeedrunner/rooshk](https://github.com/cmspeedrunner/rooshk)\n\nMADE WITH NO EXTERNAL LIBRARIES AT ALL!", "score": 2}, {"text": "Hi r/py I'm working on a Python library for PySimpleGUI to design UIs with a Live Preview, giving a low barrier to entry. I hope you like it!. This project is a fork from this users original project: [https://github.com/PriestTheBeast/SimpleGUIBuilder](https://github.com/PriestTheBeast/SimpleGUIBuilder)\n\nMy Repo expanding on the foundation with themes, live previews, and hoping to improve QOL: [https://github.com/samfisherirl/PySimpleGUI-Designer-with-Live-Preview](https://github.com/samfisherirl/PySimpleGUI-Designer-with-Live-Preview)\n\nThroughout my experience with software development, I have come to appreciate the accessibility and ease-of-use that Autohotkey provides, especially for mid to low-level use cases. However, for newcomer to the python programming language, I have found that the Qt framework can be quite intimidating to approach. While not impossible to learn, it can present a steep learning curve for beginners.\n\nSome of the things I really appreciate from my time with AHK:\n\n* GUI-to-EXE can be done within a few clicks with no coding, but provide paths to produce full OOP programs.\n* Simplified automation for mid to low-level use cases.\n* Allows for customization and flexibility through user-defined functions and commands.\n\nIn my pursuit to bridge the gap between visual design and code, I have found PySimpleGUI to be a great model. Its streamlined approach has allowed me to quickly translate visual designs into code, making the learning process much smoother. As a lifelong learner, I'm always eager to share my experiences and help others along the way.\n\nWith this project, I want to provide a relatively smooth UI experience that can allow users to build ready-made GUIs with ease.\n\nThis project is still in its early stages, and I'm excited to see where it goes. Personally, I've had success with pywebview and Eel due to the expansive HTML design tools available. I'm open to any recommendations for libraries or tools that you find helpful for GUI design. Thanks!\n\n&amp;#x200B;\n\n&amp;#x200B;\n\n[https://imgur.com/a/LCf7ln1](https://imgur.com/a/LCf7ln1)\n\n&amp;#x200B;\n\nhttps://i.redd.it/9v7bi000cloa1.gif\n\n&amp;#x200B;", "score": 162}, {"text": "QLineEdit in PyQt6! How to Access User Input in Your GUI!. ", "score": 1}, {"text": "Austin, the CPython frame stack sampler, is now available from PyPI. Austin can now be installed from PyPI [https://pypi.org/project/austin-dist/](https://pypi.org/project/austin-dist/)", "score": 3}, {"text": "What is something you wish there was a Python module for?. ", "score": 136}, {"text": "GitHub - npiv/chatblade: A CLI Swiss Army Knife for ChatGPT. https://github.com/npiv/chatblade\n\nintegrate chatGPT into your scripts or terminal work. Supports piping text, saving prompts, estimating costs, and some basic json/yaml extraction.\n\nI've added some elaborate examples on the readme of how to use it with pictures, that may provide a better overview.", "score": 0}, {"text": "Learn Python Programming --- Python for Beginners (Legacy course). ", "score": 4}, {"text": "Building And Distributing A macOS Application Written in Python. ", "score": 49}, {"text": "Infrastructure from Python Code: How Far Could we go?. Slides from my recent presentation at #pycascades2023:  \nSlides of my today presentation at Pycascades: [https://www.slideshare.net/AsherSterkin/pycascades23pdf](https://www.slideshare.net/AsherSterkin/pycascades23pdf)  \n\n\n\\#cloud #aws #python #automation #infrastructure #infrastructurefromcode #ifc #pyifc", "score": 1}, {"text": "Any way to short circuit parsing in html.parser?. I am parsing large HTML files looking for a specific data field.  When I find it, there's really no need to process the file any further.\n\nI've tried calling HTMLParser.reset() and HTMLParser.close() but that doesn't seem to change anything.\n\nIs there a way to break out of a call to HTMLParser.feed()?", "score": 1}, {"text": "Hi there I\u2019ve been trying to write a python code using openCV to count British coins in an image.. The coins are at different distances with some touching and some of the images are blurred as well as different objects other than coins in the image. Would it be possible for someone to review my code and provide assistance as to where I\u2019m going wrong?", "score": 1}, {"text": "Are Variables Labels or Boxes?. I read in a book that variables references a certain value and in some other places (maybe yt).On the other hand, many people say \"Variables are like boxes that store the value\"\n\nNow, I am really confused...Does it matter if we use them interchangeably? Also \"Why\" they use different terms?\n\nThe book I mentioned earlier also says that \"This distinction probably won\u2019t matter much in your initial programs, but it\u2019s worth learning earlier rather than later. At some point, you\u2019ll see unexpected behavior from a variable, and an accurate understanding of how variables work will help you identify what\u2019s happening in your code.\"\n\nAlso, I ignored these terms last year but now im really thinking whats the difference...  \n\n\nEDIT: I think mentioning this will help others explaining to me, I am familiar with the basics and I also know OOP and some other stuff (obv i cant mention everything)", "score": 0}, {"text": "Introduction to __getitem__: A Magic Method in Python - KDnuggets. Magic methods can make our class design more intuitive by giving us access to Python\u2019s built-in syntax features. Check this tutorial, we will study the __getitem__ method for custom indexing. \n\nhttps://www.kdnuggets.com/2023/03/introduction-getitem-magic-method-python.html", "score": 0}, {"text": "Sunday Daily Thread: What's everyone working on this week?. Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.", "score": 8}, {"text": "Workshop: Algorithmic Trading. I\u2019m organizing a workshop next Tuesday on \u201cAlgorithmic Trading with Python\u201d and I thought it would be worth posting it here. Here\u2019s the link with more information:\n\nhttps://profitview.net/events/algorithmic-trading-with-python\n\nApologies in advance to the moderators (I have messaged them!): if you feel that it\u2019s not worth sharing here or not the place - happy for it to be taken down. \n\nLet me know if you have any questions / comments, glad to answer them here.\n\nCheers", "score": 13}, {"text": "Simple Transformer based Optical Music Recognition. A simple transformer based optical music recognition for a robotics project.\n\nThe PyTorch model is trained to recognize a small sequences of notes in different environments (e.g. [https://huggingface.co/Flova/omr\\_transformer/resolve/main/sample1.png](https://huggingface.co/Flova/omr_transformer/resolve/main/sample1.png)). The notation is quite simple at the moment, but we plan on  expanding our dataset to recognize more complex notation with chords  etc.. We view the OMR problem as a NLP like task, as we predict the  LilyPond notation directly.\n\n&amp;#x200B;\n\nDemo and Model: [https://huggingface.co/Flova/omr\\_transformer](https://huggingface.co/Flova/omr_transformer)", "score": 6}, {"text": "Simplify a polyline or polygon with Visvalingham-Whyatt or Douglas-Peucker. [https://pypi.org/project/simplify-polyline/](https://pypi.org/project/simplify-polyline/)\n\n# simplify_polyline\n\nSimplify an open or closed polyline.\n\n## Two functions:\n\nVisvalingham-Whyatt removes the smallest triangles formed by three consecutive points\nin a polyline or polygon. The big advantage for my purposes is that the starting\npoint on a polygon will not affect the result. The big disadvantage is that tall,\nthin spikes are removed along with short, thin triangles. So the smoothed polygon or\npolyline may not fit in anything close to the convex hull of the input.\n\nuse the Visvalingham-Whyatt algorithm with `vs_simplify`\n\nDouglas-Peucker gives a better representation of the convex hull. The big\ndisadvantage with Douglas-Peucker is that the starting point on a polygon will affect\nthe result. I've addressed this in the slow, but ideal (for my purposes) `simplify`\nfunction.\n\nuse the Douglas-Peucker algoritm with `simplify`\n\nThis will usually be the better choice.\n\n## arguments\n\n\n**verts** vertices along polyline. Anything that can be cast into a '*, 2'\n    array.\n\n(`simplify`) **min_dist** minimum height above a line segment for a point to be\nincluded.\n\n(`vw_simplify`) **min_area** minimum area of a triangle for a point to be\nincluded.\n\n**is_closed** optionally specify whether verts describe a polyline or polygon.\nIf not specified, is_closed is inferred from verts[0] == verts[-1]. The form of\nthe input (last vert == first vert) will be replicated in the output.\n\nIf verts is (a, b, c, d, a), return value will be (a, ..., a)\n\nIf verts is (a, b, c, d), and is_closed is True, return value will be (a, ..., d)\n\nSo, there are two ways to deal with closed polygons:\n\n* close by repeating first point at the end. Return value will keep this format\n\n* close by specifying `is_closed`. Return value will not repeat last point\n\n## install\n\n~~~\npip install simplify_polyline\n~~~", "score": 1}, {"text": "Remove typing/stubs packages in production. Imagine I have to deploy a package that's size restricted. I want to ignore typing packages at runtime, but I do not want to encounter `ModuleNotFound` exceptions.\n\nWhat's the best way to accomplish this?\n\nI know that we could do something like this:\n\n    from typing import TYPE_CHECKING\n     \n    if TYPE_CHECKING:\n        from package.module import SomeType\n     \n    def do_stuff(data: \"SomeType\") -&gt; None:\n        ...\n\nIs this the best way?", "score": 23}, {"text": "Is anyone using Python and GPT4? I just started using python for the first time.. mind is blown.. Hey Guys, \n\nI've never used Python in my life. I just thought I'd try asking GPT4 to help me write apps in Python and I've got some workflows that seem to be working. Would love your thoughts on how I can improve it (assuming I know very little about Python)  \n\n\nInitially, I was doing exactly as the AI instructed, which was creating multiple .py files.   \nThis creates some issues as over time it loses context as to what some of the other .py files contain. Instead, I asked it to make sure that all of the code is in one .py file so that it always has context. ( is this a bad thing?)  \n\n\nI essentially tell the AI a simple idea. I then get it to design a mermaid sequencediagram to show me how the app functions: [https://mermaid.live/](https://mermaid.live/)  \n\n\nThat allows me to use the flowcharts to make sure I know what's going on inside the app.   \n\n\nFrom the mermaid code, I'll ask it to build me a requirements doc for the MVP version of the app.   \n\n\nNext I'll tell it to write out all the code required for the app to function.   \n\n\nObviously, it doesn't get it right right away. From there it's running the py file, then running all the errors back into GPT4 asking it to rewrite the code for me until it gets it right.   \n\n\nDoes anyone have any better ideas as to how I can do this? Any techniques working for you? Thanks!", "score": 0}, {"text": "\"I prefer to use Panel for my data apps. Here is why.\" by Marc-Skov Madsen... guys/girls/non-binary: do not sleep on this deeply detailed article.. ", "score": 0}, {"text": "Pygame, ren'py, or python which is best for game making?. So ive never coded or touched a single line of code and i want to know which python engine/software is the best for a beginner who has never coded. feel free to suggest something else if you feel its needed but try to say why it is. Im also not sure where to start, is youtube a good place or are there other free places? ive been wanting to make a game but it seems pretty daunting and im not sure if i should do it. i like doing/learning on my own because i have issues.\n\nAnyway, *so, Pygame, ren'py, or python which is best for game making?*", "score": 4}, {"text": "Why use classes?. *I originally wrote this piece as an answer to a question on the* [*learnpython reddit*](https://www.reddit.com/r/learnpython/comments/11sebbg/been_using_python_for_3_years_never_used_a_class/?utm_source=share&amp;utm_medium=web2x&amp;context=3)*, and it was suggested that it would be a useful learning resource for many people who struggle with* ***why*** *we use classes rather than just variables and functions.  So here it is:*\n\n# Why use classes?\n\n**My \"Ah ha!\" moment for understanding classes was understanding that a** ***class*** **creates** ***objects*** **and defines the** ***type*** **of** ***object.***\n\nTime for an example:\n\nSay that we're writing a game, and we need to define certain things about the player:\n\n    player_name = \"James\"\n    player_level = \"novice\"\n\nWe also need to keep track of the player's score:\n\n    player_score = 0\n\nWe may also need to save each of the player's moves:\n\n    player_moves = [move1, move2, move3]\n\nand now we need to be able to increase the player's score when they win some points, and to add their last move to their list of moves. We can do this with a function:\n\n    def win_points (points, move):\n        player_score += points\n        player_moves.append(move)\n\n&amp;#x200B;\n\nThat's all fine so far. We have some global variables to hold the player's data, and a function to handle the results of a win, and all without writing any classes.\n\nNow say that we need to add another player. We will need to repeat all of the above but with unique identities so that we can distinguish player\\_1 from player\\_2:\n\n    player1_name = \"&lt;name&gt;\"\n    player1_level = \"novice\"\n    player1_score = 0\n    player1_moves = [move1, move2, move3]\n    \n    player2_name = \"&lt;name&gt;\"\n    player2_level = \"novice\"\n    player2_score = 0\n    player2_moves = [move1, move2, move3]\n    \n    def win_points (player_name, points, move):\n        if player_name == player1_name:\n            player1_score += points\n            player1_moves.append(move)\n        else:\n            player2_score += points\n            playe2_moves.append(move)\n\nStill not too bad, but what if we have 4 players, or 10, or more?\n\nIt would be better if we could make some kind of generic \"player\" data structure that can be reused for as many players as we need. Fortunately we can do that in Python:\n\nWe can write a kind of \"template\" / \"blueprint\" to define all of the attributes of a generic player and define each of the functions that are relevant to a player. This \"template\" is called a \"Class\", and the class's functions are called \"methods\".\n\n    class Player():\n        def __init__(self, name):\n            \"\"\"Initialise the player's attributes.\"\"\"\n            self.name = name\n            self.level = 'novice'\n            self.score = 0\n            self.moves = []\n    \n        def win_points(self, points, move):\n            \"\"\"Update player on winning points.\"\"\"\n            self.score += points\n            self.moves.append(move)\n\nNow we can create as many players (\"player objects\") as we like as *instances* of the *Player class*.\n\nTo create a new player (a \"player object\") we need to supply the Player class with a name for the player (because the initialisation function \\_\\_init\\_\\_() has an argument \"name\" which must be supplied). So we can create multiple *Player* objects like this:\n\n    player1 = Player('James')\n    player2 = Player('Joe')\n    player3 = Player('Fred')\n\nDon't overthink the `self` arguments. The self argument just means \"the specific class object that we are working with\". For example, if we are referring to *player1*, then self means \"the player1 object\".\n\nTo run the `Player.win_points()` method (the `win_points()` function in the class `Player`) for, say player3:\n\n    player3.win_points(4, (0, 1)) # Fred wins 4 points, move is tuple (0, 1)\n\nand we can access Fred's other attributes, such as Fred's player's name, or  last move, from the Player object:\n\n    print(player3.name)  # prints \"Fred\"\n    # Get Fred's last move\n    try:\n        last_move = player3.moves[-1]\n    except IndexError:\n        print('No moves made.')\n\nUsing a Class allows us to create as many \"Player\" type objects as we like, without having to duplicate loads of code.\n\nFinally, if we look at the type of any of the players,  we see that they are instances of the class \"Player\":\n\n    print(type(player1))  # prints \"&lt;class '__main__.Player'&gt;\"\n\nI hope you found this  post useful.", "score": 804}, {"text": "What you can do in 24 hour?. Let the pictures speak!\n\n[If you can't notice it, then this isn't for you.](https://preview.redd.it/hev48dw5iooa1.png?width=1920&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=d59ec2a10a8adfecbb992fe4e8ec421ab3bf56ea)\n\n[https://github.com/MeGaNeKoS/LockScreenFusion](https://github.com/MeGaNeKoS/LockScreenFusion)", "score": 0}, {"text": "Alternative to Pygments. Can anyone name an alternative package to pygments to generated HTML for highlighted code blocks?", "score": 7}, {"text": "Personal Project - JDR Tool Introduction. I recently started learning Python, so I tried to write this project as  an exercise. The idea of the concept is derived from the solution to the  difficulties encountered when helping the Ministry of Finance to  develop the system. Share it here.\n\n&amp;#x200B;\n\n![img](k5nt455yggoa1 \"Figure 1. Appearance of JDR tool\n\")\n\n&amp;#x200B;\n\n![gif](ns56h4y0hgoa1 \"Figure 2. Using JDR tools to execute and manage programs\n\")\n\n## Link\n\n* Source code: [https://github.com/Chen-Alfred/JDR](https://github.com/Chen-Alfred/JDR)\n* Execution file: [https://github.com/Chen-Alfred/JDR/tree/main/dist](https://github.com/Chen-Alfred/JDR/tree/main/dist)\n* Documentation (English): [https://hackmd.io/xsLDRVAMTF2gO0YHo3lxYw](https://hackmd.io/xsLDRVAMTF2gO0YHo3lxYw)\n\n## Motivation\n\nJDR (Job Dependency Runner) is a set of small data governance tools developed by this project. In short, it is a set of \"programs used to assist in the execution and management of programs\".\n\nAt work, the action of \"executing a program\" is not particularly difficult in most cases. Usually, you edit the command first, then throw it into the shell, or an interface/platform, and then wait for the result to come out. Will use tools like crontab to pre-schedule.\n\nWith this method, if the scale is only one or two to a dozen programs, there may be no problem, but if there are hundreds or thousands of programs, it will be difficult to manage. The reason lies in the management issues derived from \"quantity\" and \"dependency\"\n\nThese management issues include: \"What is the current state of the program?\", \"What is the sequence of program execution?\", \"If a certain program needs to be re-run, will it affect which downstream related programs?\" When the number of programs is larger, it is less likely to be managed by the engineer's memory. Even if the records are assisted by files, maintenance and searching will take time and cost.\n\nAnd because data analysis has become more and more important in recent years, the data governance issue of \"whether the program is executed correctly and on time\" has also been paid more and more attention. In order to solve these issues, I hope to implement a set of tools in this project, so that some management issues can be automated, dashboarded, and the results are presented in a visual way.\n\nMaybe this project will overlap with some ETL tools (such as: SSIS, Trinity, DataStage, Automation) in function, because ETL tools also have the function of executing and managing programs, but because I haven't found a tool that can meet the needs , so that's another reason why I decided I wanted to develop my own.\n\nI hope that users only need to maintain a work list (Excel format), and then after inputting the list into this tool, a graphical program dependency flow chart can be automatically generated. The graphical program dependency flowchart is a kind of DAG (Directed Acyclic Graph). After having a graph, many issues arise about how to operate it. I try to simplify these operations as much as possible, so that these operations and management behaviors can be easily performed only by making a setting on the graphical interface, pressing a button, and viewing a report.\n\nEveryone is welcome to use this set of tools, but the design of the tools is based on my personal previous development experience and my own imagination, so if someone thinks that it is not easy to use, inconvenient, or not flexible enough, please feel free to feed these questions back to me, so that I can use them as a reference for improvement.", "score": 18}, {"text": "\ud83d\udd22\ud83d\udc0d NumPy 1.24.0 Release: Improved Data Handling, Execution Speed, and Documentation. ", "score": 0}, {"text": "New to Python. Is this an inconsistency of the 'round()' function?. I understand that the built-in `round()` function uses the \"round half to even\" strategy. However, I noticed that this isn't applied when rounding to a certain number of decimal places.\n\nHere's an example:\n\n`round(38.5)` returns `38`, the closest even number. But if I do `round(3.85, 1)` it returns `3.9`, 9 not being the closest even number. Is there a reason as to why the \"round half to even\" strategy is only applied to integers and not floats? Or is this just an overlooked inconsistency? (This might be a really obvious math thing and I'm just dumb, but I'm asking because I wanna understand these intricacies)\n\nThanks!\n\nEDIT: I want to give everyone a genuine thank you for all the detailed explanations, links and examples to help me understand this properly. This sub seems incredibly friendly, thank you all for taking time out of your day to write out these amazing comments!", "score": 24}, {"text": "I made a tic tac toe game with 98 lines of code. Is this good for a beginner?. [https://github.com/DJToners/TicTacToe2.git](https://github.com/DJToners/TicTacToe2.git)", "score": 31}, {"text": "Making an ASGI Micro Framework.  \n\nHello guys , I working on an ASGI framework for fun, for now I make url matching and middleware supporting\n\nthe ASGI app is in the [app](https://app.py/) / AsgiApplication class\n\nI need to know how to make sub apps (Blueprintes in Flask )\n\n[Source code](https://github.com/t-el/AsgiFrame)", "score": 1}, {"text": "Python and SLSA \ud83d\udc83. ", "score": 0}, {"text": "Mercury \u2013 Turn Python Notebooks to Web Apps. Hi! \n\nWe're Piotr and Aleksandra, founders of Mercury (https://RunMercury.com), an open-source framework for converting Jupyter Notebooks to Web Apps. You can turn the Python notebook into an interactive web app, static website, presentation, report, or dashboard and share it online with non-technical users. You can self-host Mercury or use our hosting service (coming soon!).\n\n\nOur GitHub: https://github.com/mljar/mercury\n\n\nSharing Python notebooks is challenging. You can't send notebooks directly to non-technical stakeholders. You need to copy-paste results/charts into Word/PowerPoint or rewrite the notebook to a web framework. Mercury converts a notebook to a web app. Users can execute cells but can't edit them.\n\n\nMercury offers a set of widgets that can be added to the notebook. When serving notebook with Mercury, widget change triggers automatic re-execution of cells. Not all cells are re-executed, only cells with widget definition and below, so you can cache results from previous cells execution (loading large dataset or model).\n\n\nMercury comes with handy features to make sharing easy:\n\n- decide to hide or show the notebook's code,\n\n- add authentication to notebooks so only selected users can view them,\n\n- export final notebook to PDF or HTML file,\n\n- all to create output files in a notebook, and make them downloadable,\n\n- share multiple notebooks on one Site.\n\n\n\nHow does Mercury differ from existing solutions?\n\n- it was designed for notebooks, it offers simple re-execution of cells after widget update,\n\n- it has built-in authentication.\n\n\nMercury is available on AGPLv3. We would like to offer a hosting service to make deployment very easy (just upload a notebook to have a website). We offer commercial license for companies looking for private forks and dedicated support.\n\nWe'd love to hear feedback on the framework!", "score": 122}, {"text": "Making a script that checks Twitch chat emote usage, channel has 828 emotes, VOD has 41,033 lines of chat. was blown away by how fast it took to run. 93ms.. https://i.imgur.com/D88KQfa.png\n\n\ud83e\udd2f", "score": 4}, {"text": "What are some projects on GitHub you support either through contribution or sponsorship?. Hey all, I'm Chris, the developer community manager at New Relic. I'm trying to learn more about what interests developers in our community, and one thing I'm curious about is how devs choose projects to support on GitHub. What are some examples of projects you either contribute to or sponsor, for whatever reason -- either they improve your QoL as a dev, or they're humanitarian projects for the betterment of humankind. Thanks for your insights!", "score": 14}, {"text": "ML models for User Recognition using Keystroke Dynamics. The keystroke dynamics that are used in this article\u2019s machine learning models for user recognition are behavioral biometrics. Keystroke dynamics uses the distinctive way that each person types to confirm their identity. This is accomplished by analyzing the **2 keystroke events** on Key-Press and Key-Release \u2014 that make up a keystroke on computer keyboards to extract typing patterns. *The article will examine how these patterns can be applied to create 3 precise machine learning models for user recognition.*\n\n&amp;#x200B;\n\nhttps://preview.redd.it/rv2a4okbmaoa1.png?width=645&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=983865d15bb83d5c94b43a5940617117f972a89d\n\nThe goal of this article will be split in two parts, ***building and training*** 3 Machine Learning models (1. **SVM** 2. **Random** **Forest** 3. **XGBoost**) and ***deploying the model*** in a real live single point API capable of predicting the user based on 5 input parameters: the ML model and 4 keystroke times.\n\n[https://medium.com/@tudorache.a.bogdan/ml-models-for-user-recognition-using-keystroke-dynamics-e0665bc18cad](https://medium.com/@tudorache.a.bogdan/ml-models-for-user-recognition-using-keystroke-dynamics-e0665bc18cad)", "score": 67}, {"text": "Introducing DataFrame QuickView: A Python package for easy DataFrame visualization, co-created with GPT-4! Seeking contributors \ud83d\ude80. Hi, r/python! I'm u/gittb, and I'd like to share a project I've been working on called **DataFrame QuickView**. This package extends pandas DataFrame functionality to easily display and visualize DataFrames in a web-based environment, built using Flask. The catch? It's an experiment in paired programming with GPT-4, and I'm looking for contributors who want to join this exciting project!\n\n\ud83c\udf1f **Quick Overview of DataFrame QuickView:**\n\n* Extend pandas DataFrame with quickview()method\n* Display paginated DataFrame in a web browser\n* Create an interactive dropdown and button combination populated with DataFrame columns\n* Generate histograms based on the selected column when the button is pressed\n\n\ud83c\udfaf **Goal of the project:**\n\nThe primary goal is to expand the project with code written by Language Models (LLMs) like GPT-4. All contributions should be co-written primarily by LLMs to maintain the experimental nature of this project.\n\n\ud83d\udca1 **Potential additional functionality:**\n\n* More visualization types (bar charts, scatter plots, pie charts, etc.)\n* Filtering and sorting capabilities for DataFrames\n* Exporting visualizations as images or other formats\n* Adding support for multiple DataFrames\n\n\ud83d\udd0d **How to get involved:**\n\nIf you're interested in participating, check out the project on [GitHub](https://github.com/gittb/dataframe-quickview) and feel free to submit pull requests or open issues with your ideas. Remember that the code must be co-written primarily by LLMs for contribution acceptance.\n\nThanks for taking the time to read this post, and I'm looking forward to seeing what we can build together with the help of LLMs! Let's push the boundaries of AI-powered coding! \ud83d\ude80\n\nHappy coding! \ud83d\ude04 u/gittb\n\nEdit, forgot to include pypi link\n\n[https://pypi.org/project/dataframe-quickview/](https://pypi.org/project/dataframe-quickview/)\n\n&amp;#x200B;", "score": 0}, {"text": "Saturday Daily Thread: Resource Request and Sharing! Daily Thread. Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?\n\nUse this thread to chat about and share Python resources!", "score": 4}, {"text": "QNX Demodisk Utilities. [https://github.com/audiophyl/qnxdemotools](https://github.com/audiophyl/qnxdemotools)\n\nThis is a set of utilities for altering the contents of the QNX Demodisk of the late 90s. This is the first time I've shared a significant personal code base, and I'm pushing through my anxiety about negative feedback. I'm at a point where I'm telling myself \"eff it, all feedback is good feedback if you can use it to grow.\"\n\nThere's a lot more information within the README.md.\n\nI've been working on this on and off for several months, and now have functionality to a point which I like. It's a long shot that anyone would find this set of utilities useful in any way, but it's been quite fun for me to develop, and a wonderful learning experience as well.", "score": 7}, {"text": "Pandas 2.0 RC1 has been published. Have you tried it? What do you think?. I did a [TPC-H](https://www.tpc.org/tpch/) benchmark at scale factor 1 (\\~ 1GB) on 2.0.0 RC0 and the results were not as expected. The numbers are running time in seconds. Lower means better.\n\nSince the [main features](https://pandas.pydata.org/docs/dev/whatsnew/v2.0.0.html) of 2.0.0 are lazy copy and pyarrow dtype backend, I tried all the combinations:\n\n[Benchmarks on 2.0.0 RC0](https://preview.redd.it/upn6olo94boa1.png?width=1416&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=c5eb8092b50407a1eae6243eeee4ac969aedf59b)\n\nIf the image above doesn't work for you, please see the [gist](https://gist.github.com/UranusSeven/55817bf0f304cc24f5eb63b2f1c3e2cd). For the benchmarking script and dataset, please see this [repo](https://github.com/UranusSeven/experiments).\n\n**Now RC1 has been released, have you guys tried it?**\n\n&amp;#x200B;", "score": 24}, {"text": "Introducing the Data Wrangler extension for Visual Studio Code Insiders. ", "score": 88}, {"text": "How to speed up bulkinsert in python?. pypyodbc executemany method takes **70 seconds t**o insert 1000 records in the SQL server table. How can i speed up this bulkinsert query?\n\nimport pypyodbc as odbc\n\nconn\\_str = ( ...)\n\nconn1 = odbc.connect(conn\\_str)\n\nrecords =df. values.tolist()\n\nsql\\_insert = ''' insert into dbo.bulkinsert\\_tb values (?,?,?,?) '''\n\ncursor = conn1.cursor()\n\ncursor.fast\\_executemany = True\n\ncursor.executemany(sqlinsert,records)\n\ncursor.commit", "score": 4}, {"text": "How to write long integers EASILY!. ", "score": 0}, {"text": "I wrote a program that calculates the difference between two files. For some unknown reason, I am unable to use `fc` (file compare) command on Windows, so like a true programmer, instead of spending couple minutes troubleshooting it, I spent hours writing my own version of the program.\n\nYou can check it out at: [https://github.com/Ach113/dif](https://github.com/Ach113/dif)\n\nAny feedback would be appreciated.", "score": 10}, {"text": "\ud83e\udd84 uniswap-universal-router-decoder \u2728 v0.8.0 \u2728 has just been released !!. &amp;#x200B;\n\n[Uniswap Universal Router Codec](https://preview.redd.it/wl0740v0yioa1.jpg?width=512&amp;format=pjpg&amp;auto=webp&amp;v=enabled&amp;s=1d9f1157dbb7d5aeef58c0a7553d0739f5f61a9d)\n\nv0.8.0 is a major upgrade for this open source \ud83d\udc0d **Python \ud83d\udc0d decoder and encoder** for the **Uniswap \ud83e\udd84 universal router.** It allows now to chain all supported functions in a single transaction! \ud83d\udd25\ud83d\udd25\ud83d\udd25\n\nSo for example, you can wrap #eth ***and*** use the #weth to buy tokens on a v2 ***and*** on a v3 pool, at the same time, in one transaction.\n\nSource on [GitHub](https://github.com/Elnaril/uniswap-universal-router-decoder)\n\nPackaged on [PyPI](https://pypi.org/project/uniswap-universal-router-decoder/)\n\nSome supported functions are (but not limited to): V2\\_SWAP\\_EXACT\\_IN, V3\\_SWAP\\_EXACT\\_IN, PERMIT2\\_PERMIT ...\n\nMore functions will be supported soon!", "score": 0}, {"text": "The Ruff python linter is insanely good. I just migrated some of my projects over to using [ruff](https://github.com/charliermarsh/ruff), and I am EXTREMELY impressed. It is quite literally 100 times faster than my previous linting configuration, all while being more organized and powerful. It's mind boggling fast. It has all of the plugins builtin that I was previously using with tools like flake8. It hooks into `pre-commit` and replaces many plugins I had before like:\n\n* `isort` - sorts imports\n* `bandit` - finds common security issues\n* `flake8` - linter; additional benefit is that I can now delete my \\`.flake8\\` file.\n* `pygrep-hooks` - common misc linting\n\nAdditionally, it's completely configurable via pyproject.toml, so that always feels good.\n\nBy the way, if you want to checkout my python template, it has my preferred ruff configuration:[https://github.com/BrianPugh/python-template](https://github.com/BrianPugh/python-template)", "score": 805}, {"text": "Meta Pseudo Labels (MPL) Algorithm. ", "score": 3}, {"text": "Python 3.11 is much faster , but is it good for competitive programming?. ", "score": 0}, {"text": "Is setting up React with Python difficult?. Is it difficult to setup React with Python that meets the following requirements:\n\n1. Server Side Rendering\n2. Server Side Generation\n3. Incremental Server Side Generation\n4. Use React as a template with an experience similar to using Jinja templates", "score": 10}, {"text": "Another episode of the office-racer (Python, websockets,...). I'm streaming at arconsis today.  \nIt is about a little RC Car for our office.  \n\\- Websockets  \n\\- Python  \n\\- PiCamera  \n[https://www.twitch.tv/arconsis](https://www.twitch.tv/arconsis)  \n\n\nJoin us if you are interested in WebSockets and IoT.", "score": 3}, {"text": "README-AI: automated README creation and codebase documentation!. Hey all,\n\nWanted to share a Python project I'm building with called [README-AI](https://github.com/eli64s/README-AI). The project aims to automate README Markdown creation and generate codebase documentation, leveraging OpenAI's language model APIs.\n\nThe project can be found using the link below:  \n[**https://github.com/eli64s/README-AI**](https://github.com/eli64s/README-AI).\n\nThe text generation is not perfect by any means, but it's been fun to learn and play around with. Would appreciate any feedback or suggestions to improve the codebase and enhance usability for users.\n\nThanks for taking the time to read this post!", "score": 16}, {"text": "An Instruct Version Of GPT-J Using Stanford Alpaca's Dataset. I  just released an instruct version of GPT-J using Stanford Alpaca's dataset. The result of this experiment is very cool and confirms that,  when fine-tuned on the right data, GPT-J is a very powerful AI model! You can download the model from the HuggingFace hub: [https://huggingface.co/nlpcloud/instruct-gpt-j-fp16](https://huggingface.co/nlpcloud/instruct-gpt-j-fp16)\n\nHere is a Python example:\n\n`from transformers import pipeline import torch`\n\n`generator = pipeline(model=\"nlpcloud/instruct-gpt-j-fp16\", torch_dtype=torch.float16, device=0)`\n\n`prompt = \"Correct spelling and grammar from the following text.\\nI do not wan to go\\n\" print(generator(prompt))`\n\nMore details about this experiment here: [https://nlpcloud.com/instruct-version-of-gpt-j-using-stanford-alpaca-dataset.html](https://nlpcloud.com/instruct-version-of-gpt-j-using-stanford-alpaca-dataset.html?utm_source=reddit&amp;utm_campaign=owu8d596-3816-11ed-a261-0242ac140007)\n\nI hope it will be useful! Please don't hesitate to share some feedbacks!\n\nJulien", "score": 4}, {"text": "Speed | When has it been an issue for you?. Everyone is always raving about how python is slow, but I have a feeling that as hardware gets better, this will mean less over time.\n\nDoes anyone have an example of when speed made you choose a different language?", "score": 0}, {"text": "Dad Joke Collector for my Blog. Wrote a dad joke collector for my personal website. It runs on a cron and stores any jokes that have not already been stored into my dadabase based on the creation time of the posts I bookmark/save.  \n   \n[https://krowvin.com/dadjokes](https://krowvin.com/dadjokes)\n\n&amp;#x200B;\n\n[dbapi is a class I wrote using SQLAlchemy to do various things with my homelab database. ](https://preview.redd.it/620fy2g7s7oa1.png?width=793&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=97f2bed3a24f06c71000fe24bc02568ff341e88e)", "score": 17}, {"text": "A 'No JS' Solution for Dynamic Search in Django. ", "score": 3}, {"text": "Theine 0.3.3 released, introducing new Clock-Pro eviction policy. Theine: high performance in-memory cache\n\n[https://github.com/Yiling-J/theine](https://github.com/Yiling-J/theine)\n\nTheine 0.3.3 add a new eviction policy called Clock-Pro, which has better hit ratio than LRU in most cases and outperform W-TinyLFU in some benchmarks.\n\n[Clock-Pro](https://static.usenix.org/event/usenix05/tech/general/full_papers/jiang/jiang_html/html.html): An improved CLOCK replacement policy (CLOCK: an approximation of LRU).\n\n**10k requests benchmark**\n\nPython: 3.11 / OS: Ubuntu 22.04.2 LTS\n\nWrite and Mix Zipf use 1k max cache size, so you can see the high cost of traditional LFU eviction policy here.\n\n||Read|Write|Mix Zipf|\n|:-|:-|:-|:-|\n|Theine(Clock-Pro) API|3.07 ms|9.86 ms||\n|Theine(W-TinyLFU) API|3.42 ms|10.14 ms||\n|Theine(W-TinyLFU) Auto-Key Decorator|7.17 ms|18.41 ms|13.18 ms|\n|Theine(W-TinyLFU) Custom-Key Decorator|6.45 ms|17.67 ms|11.50 ms|\n|Cachetools LFU Decorator|15.70 ms|627.10 ms|191.04 ms|\n|Cacheout LFU Decorator|50.05 ms|704.70 ms|250.95 ms|\n|Theine(LRU) Custom-Key Decorator|5.70 ms|16.04 ms|10.91 ms|\n|Cachetools LRU Decorator|14.05 ms|61.06 ms|36.89 ms|\n|Cacheout LRU Decorator|47.90 ms|94.94 ms|68.25 ms|\n\nSee github README for hit ratio benchmarks.", "score": 3}, {"text": "Easy Python Benchmarking Tool - PyBench. Looking for an easy and efficient way to compare computers/servers for Python hosting or different versions of Python? Look no further than PyBench!\n\nPyBench is a Python benchmarking tool that generates a random image, a graph, and Pi to measure the computing speed of your computer, giving you a score to compare with other computers or servers.\n\nAnd for those who own Numworks calculators, PyBench has a version that's compatible and provides equal scores as other versions, despite having fewer operations to perform.\n\nSo why not give PyBench a try? It's the perfect tool for anyone who needs to compare computing speeds quickly and efficiently.\n\n[https://github.com/LeLenoch/PyBench](https://github.com/LeLenoch/PyBench)", "score": 5}, {"text": "Book recommendation, advanced+ level in Python. Hello,\n\nI'd like to deepen my knowledge of Python. I'd like to make good decisions when writing Python code based on a solid foundation of **how Python works internally**.\n\nI have 7 YOE (but that doesn't tell much about my level), I think Python meta-programming level is something I found hardest to understand so far (because I needed it only 2x so far), hope this helps to better judge my level.\n\nI mostly created **web applications**, I'm not interested in machine learning or data science. My focus should ideally be on high-performant APIs in terms of response times and processing load. I realize for this I mostly have to rely on existing tools and good architecture, but I still feel I should have a deeper knowledge of Python itself.\n\nI'm a big fan of **async Python** so if the book goes in this direction too, I'd be happy.\n\nCan you please recommend a book that would fulfill this goal of mine? :) I'd prefer books written after asyncio started to be widely used.\n\nCourse recommendations are welcomed too, but it seems to me most of those are aimed at beginners.\n\nI appreciate your answers and the time spent answering here.  \n\n\nP.S. So far it seems **High Performance Python** might tick the boxes, but I'm not sure.", "score": 37}, {"text": "Know How to Create and Visualize a Decision Tree with Python. ", "score": 1}, {"text": "Here is how i made a 2D game using Python Matplotlib. Im only few month into learning Python and i was wondering if i could make a game with it. I didnt know about any libraries created specifically for developing games at the time, so i asked an AI if i could somehow make a code that opens and plays GIF animations. AI came up with a function that opens GIFs as matplotlib plots. I added a condition that if 'space' button is pressed, the animation stops and the last frame number is saved into a variable, and then the value of the variable determines what happens next. This whole game is built around this simple algorithm.\n\nshowcase: [https://youtu.be/ZAXlaOWMgfM](https://youtu.be/ZAXlaOWMgfM)\n\nsource code: [https://drive.google.com/drive/folders/1bKV4\\_AdCgnW40A8B1kFkFYryIuTE44A6?usp=share\\_link](https://drive.google.com/drive/folders/1bKV4_AdCgnW40A8B1kFkFYryIuTE44A6?usp=share_link)\n\n[icon](https://preview.redd.it/q6463xvfr4oa1.png?width=640&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=68ba371480740ee9117b4fd4b68d1ef37554d4f2)\n\n&amp;#x200B;\n\n[QTE](https://preview.redd.it/kzjifyrkr4oa1.png?width=575&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=3c45f92e81ba39711ea5ff760766e9ddf07e236d)", "score": 30}, {"text": "Pandas 2.0 rc1 is released. ", "score": 29}, {"text": "How to Evaluate the Quality of Python Packages. ", "score": 42}, {"text": "Pytorch 2.0 released. ", "score": 488}, {"text": "Controversial opinion: stop importing single-use symbols in global scope. Everybody hates global scope, yet for some reason, imports are always conventionally done in global scope. If you use an external function/class in a single scope only, why not just import it in there and clean up your global namespace?\n\nI have a feeling this is a holdover habit from langs like C where #include dumps a ton of code into your file, rather than just specifically what you need. It makes more sense in C since C doesn\u2019t really have a notion of import/export. (Rather, the linker sort of treats every symbol as \u201cglobal\u201d. But that doesn\u2019t matter much here)\n\nBut python is pretty good with imports. Why is this still common convention? \n\nAn argument may be: \u201cit helps me see this file\u2019s dependencies.\u201d This is simply not true. If you need to see where a function call came from, use go to definition rather than manually searching for the import line. Or Ctrl+F \u201cimport\u201d. There\u2019s no real good reason to put imports in global scope/at the top *unless* you\u2019re using the import in multiple places within the file.", "score": 0}, {"text": "Made a Python package for extracting color palettes from images. So I made a color palette extractor Python package last year which extracts color palettes from images and stores them in JSON files. When I made the package, it was for the Unix-ricing community here on Reddit and I wasn\u2019t aware at that time that similar packages were already available or did something similar.\n\nAnyways, I never made a post here about the package. And since I\u2019ve recently reworked the codebase, I wanted to share about it with the Python community. This is my first time working with the Python language and also my first time publishing something I made as a whole package.\n\nA small 1 minute demonstration of the package being used:  \n[Package Example](https://imgur.com/a/jKjagVE)\n\nThe package is available through PyPI and GitHub, however I hope it\u2019s okay if I only post the link to it\u2019s PyPI homepage since I don\u2019t want my GitHub name to be attached to this post (the link to the source code as well as the GitHub home page is both in the ReadMe and the homepage button in the PyPI project details):  \n[PyPI package homepage](https://pypi.org/project/pypalex/)\n\nIf the GitHub link to the source code is a hard requirement, please let me know and I will change the link in this post to point to it\u2019s GitHub repo instead of PyPI!\n\nI ask that if you use the package please feel free to leave any kind of feedback, especially if it\u2019s constructive criticism! I have discussion posts that are open on the GitHub repo for every new version of the package I\u2019ve released. And thank you so much for any feedback! I appreciate and value it a whole lot!", "score": 18}, {"text": "Github Action and Pre-commit hooks. I\u2019m curious, how do you use github actions with your projects? What are some cool pipelines that you have set up?", "score": 5}, {"text": "Linked Lists in Python!. ", "score": 3}, {"text": "authentik on Django: 500% slower to run but 200% faster to build. ", "score": 6}, {"text": "Learn how to build a simple TODO app that runs in the terminal with Python \ud83d\udc0d and Textual. \ud83d\ude80. ", "score": 9}, {"text": "How to Scrape Twitter Data Using Python Without Using Twitter\u2019s API. ", "score": 229}, {"text": "Export geopandas df to .geojson. Hey guys,\ncan someone help me with exporting a geopandas dataframe to a .geojson? \n\nEvery example I\u2019ve seen so far didn\u2019t work for me", "score": 1}, {"text": "How to keep a command prompt window open after subprocess is launched in it and completes. I could not find the answer to this on reddit, stackoverflow, anywhere. Adding 'pause' to the args in any combination did not work, and there were some VERY advanced explanations that involved tying another Python process to the command window, logging the process instead, etc.\n\n\nAfter some time spent grinding, I found it. I thought I'd save someone else some time.\n\n\nsubprocess.Popen([\"start\", \"cmd\", \"/k\", \"your_external_executable_path_here\", \"your_exe_params_here\"], shell=True]\n\nThis will launch the subprocess in a command prompt and will return to command prompt at the end of execution. It will stay open. So you can actually read what was printed out and not have the window disappear afterwards.", "score": 0}, {"text": "PEP 701 \u2013 Syntactic formalization of f-strings has been accepted. ", "score": 189}, {"text": "Managing secrets like API keys in Python - Why are so many devs still hardcoding secrets?. The recent [State of Secrets Sprawl report](https://www.gitguardian.com/state-of-secrets-sprawl-report-2023) showed that 10 million (yes million) secrets like API keys, credential pairs and security certs were leaked in public GitHub repositories in 2022 and Python was by far the largest contributor to these. \n\nThe problem stems mostly from secrets being hardcoded directly into the source code. So this leads to the question, why are so many devs hardcoding secrets? The problem is a little more complicated with git because often a secret is hardcoded and removed without the dev realizing that the secret persists in the git history. But still, this is a big issue in the Python community. \n\nManaging secrets can be really easy thanks to helpful Pypi packages like [Python Dotenv](https://pypi.org/project/python-dotenv/) which is my favorite for its simplicity and easy ability to manage secrets for multiple different environments like Dev and Prod. I'm curious about what others are using to manage secrets and why? \n\nI thought I'd share some recent tutorials on managing secrets for anyone who may need a refresher on the topic. Please share more resources in the comments.   \n\n\n[Managing Secrets in Python - Video](https://www.youtube.com/watch?v=DVVYHlGYIHY)  \n\n\n[Managing Secrets in Python - Blog](https://blog.gitguardian.com/how-to-handle-secrets-in-python/)", "score": 468}, {"text": "A small toolkit used for collecting responses from ChatGPT for research / data analysis. I am pleased to showcase an open-source tool for collecting a large amount of responses from ChatGPT using ChatGPT's official API. ChatGPT currently limits the number of questions that users may ask per hour. The goal of this project is to allow users to just leave their computers on for extended periods of time to collect large amounts of responses from ChatGPT. I made this for doing research related to ChatGPT and decided to open-source it.\n\nCheck out the source code / contribute to the project here: [https://github.com/hwelsters/sleepyask](https://github.com/hwelsters/sleepyask)\n\n\ud83d\udd11 Key features include:\n\n* The ability to spin up multiple threads to ask numerous questions concurrently (this might cause you to exceed the rate limit though.) I was able to ask questions concurrently across 100 threads. This allowed me to ask 1000 questions in less than 5 minutes.\n* The ultimate goal of this project is to allow users to just leave their computers on for extended periods of time while asking ChatGPT as many questions as robot-ly possible. So it does this too.", "score": 7}, {"text": "Deploying ML model. Can we deploy a Machine Learning model trained in Python using Node.Js and Express.Js backend?", "score": 2}, {"text": "What is like to work at Anaconda. Does anyone work for [Anaconda](https://www.anaconda.com) as a software engineer or programmer? I'm curious about what you actually do for the company. Do you spend most of your time maintaining Anaconda's products? Do you get to contribute to open-source projects? Do you work in languages other than Python? Are there industry partners that you develop software for?", "score": 0}, {"text": "Automate Exploratory Data Analysis on Databases. Are you tired of spending hours doing exploratory data analysis? Learn how to automate the process with the Sweetviz Python library and HarperDB.\n\n[https://hackernoon.com/automate-exploratory-data-analysis-on-databases](https://hackernoon.com/automate-exploratory-data-analysis-on-databases)", "score": 3}, {"text": "Reverse Engineering Read Later Data from the Apple News App. ", "score": 12}, {"text": "No-async async with Python. ", "score": 26}, {"text": "Chain together LLMs for reasoning and orchestrate multiple large models for accomplishing complex tasks like phoning someone using a GPT-4 model. ", "score": 26}, {"text": "Thursday Daily Thread: Python Careers, Courses, and Furthering Education!. Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!\n\n**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**", "score": 4}, {"text": "I've been having a lot of problems with yfinance, the original Yahoo Finance API wrapper so I switched to yahoo-fin which is much better. I'm building my own dividend portfolio tracker with it. Also, the first minute is my cat interrupting my video. Enjoy!. ", "score": 6}, {"text": "What if FastAPI was 100x faster and supported NumPy arrays and Pillow images?. When deploying AI models with FastAPI, we always had to write custom serialisation code for numpy.ndarray and PIL.Image. Not only have we replaced FastAPI with up to 100x faster C-level library a couple of weeks ago, but we have also recently added support for all the fancy Pythonic types on both the client and server sides.  \n\n\nIt's remarkable how fast this library turned out to be; there was a [great discussion on HackerNews](https://news.ycombinator.com/item?id=35042316) on how the new u/linux io\\_uring functionality in kernels newer than 5.19 affects our performance, so we are very excited to share it with the broader Python community! Please let us know if there are other types you often use and would want UJRPC to support [\ud83e\udd17](https://emojipedia.org/hugging-face/)\n\n[Check it out on GitHub/Unum-Cloud/UJRPC](https://github.com/unum-cloud/ujrpc#more-functionality-than-fastapi)  \n\n\n[Deploying UForm with UJRPC for fast Multi-Modal AI Inference](https://preview.redd.it/5zg8nypknxna1.png?width=1648&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=968b64e0d70ad2c40fb7da2a451dbc8893245a42)", "score": 10}, {"text": "What is the funnest project you worked on?. Why was it fun? What did it do? Tell me about your accomplishments.", "score": 176}, {"text": "Codon: Python now superior performance to C++ . Is Python now undisputed &gt; than C++. ", "score": 0}, {"text": "Use maximum PC Hardware Resources. I have a PC with 6 Cores @3.60GHz, 64GB RAM and an NVIDIA Quadro P400. When I run scripts in VSCode, I'm using only 2% CPU, 6% Memory and 5.4% of GPU.\n\nHow can I configure the PC to assign more resources when running python scripts?", "score": 3}, {"text": "Refactor untested code with PyTest. ", "score": 5}, {"text": "A pure python object change &amp; history tracker. Hi!\n\nI built a small package that helps you track changes in an object, as well as query its structured changelog through a simple query interface. \n\nI was hoping to get some feedback on how I can make this better! \n\nGithub link - [https://github.com/saurabh0719/object-tracker](https://github.com/saurabh0719/object-tracker)\n\nThanks :)", "score": 9}, {"text": "Open-source Mathematical Python Lib. # Functvs\n\nHey, all you nerds out there!!\n\nIf  you are really into MATHEMATICS, science in general, advanced, applied,  pure, &amp;c. And you want to contribute to the Math, Chemical, Physics  applications in this lib. Please, join!!\n\nI am going over the works of Pierre Raymond, Pascal and Euler on the sub-factorial function and all that follows.\n\n(BETA)\n\npip install Functvs\n\n[https://github.com/shimon-d/functvs](https://github.com/shimon-d/functvs)", "score": 0}, {"text": "Finding memory corruption bugs in Python libraries. ", "score": 2}, {"text": "Blaise Pabon on his developer journey, open source and why Python is great [Podcast]. ", "score": 2}, {"text": "Suggestions Conda pkg development cycle. Hey there, I'm trying to figure out a good conda development cycle, to be specific:\n- create a conda pkg\n- conda build\n- install local version\n- fix issues\n- repeat from conda build\n\nI have problems like files not properly deleted/replaced, conda not picking up the latest change.\nMaybe I'm doing something wrong and so I'm asking for suggestions.\nSomething that possibly can be an issue is that I use the --output-folder flag and install the pkg with the local path but it doesn't seems to work", "score": 2}, {"text": "Python type hints (type system) unpythonic. Python is a language with a certain ideology outline in different PEPs, mainly [**https://peps.python.org/pep-0020/**](https://peps.python.org/pep-0020/)**.** The type hints seem to be very awkward to use apart from simple/basic use cases. I'm curious what people think about the type system.", "score": 3}, {"text": "Build and run your Python web scrapers in the cloud with Apify SDK for Python. ", "score": 128}, {"text": "Solving a simple problem with ML. ", "score": 0}, {"text": "ChatGPT int the Terminal!. Me and a friend made it possible to  use openai's chatgpt right in your terminal using the new API's. Give it  a try and let us know what you think!\n\nLink: [https://github.com/AineeJames/ChatGPTerminator](https://github.com/AineeJames/ChatGPTerminator)\n\nhttps://preview.redd.it/vxu3psljsmna1.png?width=1504&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=e28dc576d0581b3283caf4e6715c45a507d5982e", "score": 402}, {"text": "Image files as input using GPT-3 with Python. ", "score": 1}, {"text": "How to Install Python on MacOS. On most versions of MacOS before Catalina, a distribution of Python is already included. Unfortunately, it\u2019s almost certainly an old version, Python 2.7. Luckily, there are two ways to easily install Python 3 on a Mac.\n\nIn general, it\u2019s not recommended to use the official Python installer from the python.org website. It\u2019s better to opt for the version provided by your operating system, as it offers the benefit of automatic updates.\n\nTo take advantage of the latest features and improvements in Python, it\u2019s recommended to install the latest version alongside the pre-installed version that comes with macOS. Before we begin the installation process, it\u2019s worth exploring why there are multiple versions of the same programming language. Programming languages continually evolve by introducing new features and enhancements. These changes are typically announced by the\u00a0Python language developers\u00a0through version updates.\n\nRead More: [https://optymize.io/blog/tutorial-how-to-install-python-on-macos/](https://optymize.io/blog/tutorial-how-to-install-python-on-macos/)", "score": 0}, {"text": "Am I the only one who doesn\u2019t like this language?. Learning python after learning a bunch of other C like languages feels like they oversimplified this language to hell and removed a bunch of useful features. I hate the for loops because every for loop is like a foreach loop and it\u2019s annoying if you want to access the index for whatever reason. I also don\u2019t like how you cant make the parameters of a function have specific datatypes for the parameters so you can just input variable and it will allow you to. I feel like it takes me longer to write code in python because of all the quirks it has.", "score": 0}, {"text": "Integrating ChatGPT in a python webapp (Django). ChatGPT has been in the press a lot recently so I put this app together to demonstrate how to integrate ChatGPT into a Python Django app.\n\nLet me know what you think.[Integrating ChatGPT into your Django project \u2013 A step-by-step guide for developers](https://youtu.be/WR7mOHhylqQ)\n\nhttps://preview.redd.it/88wjaq6gcwna1.jpg?width=1920&amp;format=pjpg&amp;auto=webp&amp;v=enabled&amp;s=0ad2c84eb6aad0045f2cf925c57db0adbff4c1cc", "score": 0}, {"text": "Python Beginner, Need some advice/route-map to get an Entry-level jobs.. Hi everyone, Hope all is well with you all. I'm writing this to seek some advice from you all. I'm 30 and I have shifted my career from e-commerce to Python recently. I was working in a company in London and had to quit because of redundancy. Hence, I thought I need to upgrade my technical skills to find a stable job. I have been teaching myself python via an Online platform and practicing hackerranks,geeksforgeeks to practice python. It's been around 6 months now and to be honest, I'm quite afraid of how I'm going to find a job. what would be the expectations for a junior python-dev? how should I approach this situation?can i actually try for interviews without any certification in Python? or Should I get any? Any tips, or anything useful to me would be highly appreciated guys! I'm losing my confidence day by day as the journey takes a long time and worried. Please share your thoughts. Thanks :)", "score": 16}, {"text": "Figuring out how to distribute Python Main and Submodules on PyPi. ", "score": 2}, {"text": "PyDict3class Generator Claas and Objekt from dict or JSON. I wrote a lib for creating dynamically classes or objects from python dicts or json on runtime.\n\nwith this lib you are be able to let your application write his entity him self.\n\nI using it for generating classes out of json request in flask for sqlalchemy or mongoengine.\n\nit works with init on class level and also with init on attributes.\n\nit works with builtin types and also own objects and types.\n\n[https://pypi.org/project/pydict2class/0.0.1/](https://pypi.org/project/pydict2class/0.0.1/)\n\n[https://github.com/dierk-bentpiening/PyDict2Class](https://github.com/dierk-bentpiening/PyDict2Class)\n\n# PyDict2Class\n\nDynamic create classes from dict or json like you would develop them yourself.\n\n## Introduction\n\nThis tool makes it possible to generate a Python class with attributes from a dict or a JSON, or to create an object with the corresponding assigned values. The data type of the value of the dict or JSON is recognized and automatically initialized with the appropriate builtins data types. Non Python standard types or methods can also be included by adding them to the type attribute, this can also override the internal data types.\n\ni use this tool to dynamically create mongoengine data classes with the appropriate attributes. Actual i am implement the Functionality to create SQLAlchemy Data Model classes.\n\n## Usage\n\ninstall the library from source or over pip. import package and inherit Class object. e builtins data types. Non Python standard types or methods can also be inc\n\n    from pydict2class import Dict2Class dict2class = Dict2Class() \n\nDefine the Dictionary you want to generate a class from.\n\n    mydict = {\"integer\": 1, \"string\": \"my string\", \"boolean\": True, \"list\": [1, 2, 3]} \n\nNow you have to decide whether you want to generate only the class or if you want to generate the class and instantiate it with the values given in your dict or json.\n\n**Only generate the class:**\n\n    myclass = dict2class.generate(mydict, \"myclassname\") \n\nThe magic is done and you have a dynamic class with the dictionary keys as attribute names and the value data type as datatype.\n\n**Generate class and initialize object:**\n\n    myobj = dict2class.generate_and_init(mydict, \"classfdict\") \n\n**Use JSON instead of Dict:**\n\n    myjsonstr = '{\"integer\": 1, \"string\": \"my string\", \"boolean\": True, \"list\": [1, 2, 3]}' myclass = dict2class.generate(myjsonstr, \"myclass\", json=True) \n\n**Add Custom methods to types and use them:**\n\n       dict2class = Dict2Class()     dict2class.types = mycustommethods      \n\n**Add list of custom methods to type and use them:**\n\n       dict2class = Dict2Class()     dict2class.types = [custommethod1, custommethod2, custommethod3, custommethod4, custommethod5] \n\n[https://pypi.org/project/pydict2class/0.0.1/](https://pypi.org/project/pydict2class/0.0.1/)\n\n[https://github.com/dierk-bentpiening/PyDict2Class](https://github.com/dierk-bentpiening/PyDict2Class)", "score": 2}, {"text": "Wednesday Daily Thread: Beginner questions. New to Python and have questions? Use this thread to ask anything about Python, there are no bad questions!\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.", "score": 0}, {"text": "Join us for PyDay!. Hey Python Community!\n\nExcited to announce Microsoft is hosting #PyDay May 2nd, 2023! (I know.. missed opportunity not having it today March, 14th)\n\nJoin us for an exciting session led by experienced developer and educator Pamela Fox, where you'll learn how to build, test, containerize, and deploy HTTP APIs and web applications using the 3 most popular Python frameworks: FastAPI, Django, and Flask.\n\nFamiliarity with Python is encouraged, but no web app experience is required.\n\nLearn more here: https://aka.ms/PyDay\n\nIf you're just getting started with Python, head over to https://aka.ms/TryPython to brush up on the basics before the session!\n\nGood session for beginners/students. Pamela is a great teacher!", "score": 4}, {"text": "March 2023 Tech Roundup: The Latest News and Innovations. ", "score": 0}, {"text": "reddit downloader in python. Hi everyone!\n\nI've made this reddit downloader/bot some time ago and now I thought of sharing it. Any feedback is welcome on programming, functions and overall functionality of it . Currently it can download saved posts, wallpapers, posts from specific user or subreddit or a link and fetches a random joke from r/Jokes\n\n&amp;#x200B;\n\nHere's the [link](https://github.com/SEKT10N/reddit-downloader) to it. Any help regarding improvement of coding and functionality is appreciated! Thanks!!", "score": 15}, {"text": "Anyone see a danger in allowing wild west rules for ' vs \" in strings?. I'm tired of nit'ing people for using \\`\"\\` instead of \\`'\\` for strings (we agreed on \\`'\\`), and quite frankly I can't see how it adds value nor that anyone really cares. If I (as a tech lead) relax this to \"use whatever you feel like\", will we suffer later from some obscure gotcha?", "score": 84}, {"text": "Check out Codon: A Python compiler if you have a need for C/C speed. ", "score": 203}, {"text": "Asks the Textualize developers anything. Hi r/Python,\n\nThere's a new version of Textual out, with a new [Tabs widget](https://textual.textualize.io/blog/2023/03/13/textual-0150-adds-a-tabs-widget/). \n\nYou might be sick of Textual posts by now, so I figured I would do an impromptu AMA. You can ask me or other Textual devs anything about Python, Textual, terminals, startups...\n\n[New Tabs widget](https://preview.redd.it/af7s7iju7jna1.png?width=1828&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=b39e2d6338a376cd2ae290a769bbc1d306ab8f10)", "score": 94}, {"text": "python security - very simply open source scanner which detect file signed untrusted or leaked certificates.  \n\n[https://github.com/password123456/CertVerify](https://github.com/password123456/CertVerify)\n\nWhy is this tool needed?\n\nExecutable files signed with compromised or untrusted code signing certificates can be used to distribute malware and other malicious software. Attackers can use these files to bypass security controls and to make their malware appear legitimate to victims. This tool helps to identify these files so that they can be removed or investigated further.", "score": 25}, {"text": "Python News: What's New From February 2023 \u2013 Real Python. ", "score": 2}, {"text": "Analyzing Interactions in a Slack Communication Network - using NetworkX. ", "score": 1}, {"text": "Lib for dynamically generating classes from json or dict on runtime. I wrote a lib for creating dynamically classes or objects from python dicts or json on runtime.\n\nwith this lib you are be able to let your application write his entity him self.\n\nI using it for generating classes out of json request in flask for sqlalchemy or mongoengine.\n\nit works with init on class level and also with init on attributes.\n\nit works with builtin types and also own objects and types.\n\n[https://pypi.org/project/pydict2class/0.0.1/](https://pypi.org/project/pydict2class/0.0.1/)\n\n[https://github.com/dierk-bentpiening/PyDict2Class](https://github.com/dierk-bentpiening/PyDict2Class)\n\n# PyDict2Class\n\nDynamic create classes from dict or json like you would develop them yourself.\n\n## Introduction\n\nThis tool makes it possible to generate a Python class with attributes from a dict or a JSON, or to create an object with the corresponding assigned values. The data type of the value of the dict or JSON is recognized and automatically initialized with the appropriate builtins data types. Non Python standard types or methods can also be included by adding them to the type attribute, this can also override the internal data types.\n\ni use this tool to dynamically create mongoengine data classes with the appropriate attributes. Actual i am implement the Functionality to create SQLAlchemy Data Model classes.\n\n## Usage\n\ninstall the library from source or over pip. import package and inherit Class object. e builtins data types. Non Python standard types or methods can also be inc\n\n    from pydict2class import Dict2Class dict2class = Dict2Class() \n\nDefine the Dictionary you want to generate a class from.\n\n    mydict = {\"integer\": 1, \"string\": \"my string\", \"boolean\": True, \"list\": [1, 2, 3]} \n\nNow you have to decide whether you want to generate only the class or if you want to generate the class and instantiate it with the values given in your dict or json.\n\n**Only generate the class:**\n\n    myclass = dict2class.generate(mydict, \"myclassname\") \n\nThe magic is done and you have a dynamic class with the dictionary keys as attribute names and the value data type as datatype.\n\n**Generate class and initialize object:**\n\n    myobj = dict2class.generate_and_init(mydict, \"classfdict\") \n\n**Use JSON instead of Dict:**\n\n    myjsonstr = '{\"integer\": 1, \"string\": \"my string\", \"boolean\": True, \"list\": [1, 2, 3]}' myclass = dict2class.generate(myjsonstr, \"myclass\", json=True) \n\n**Add Custom methods to types and use them:**\n\n       dict2class = Dict2Class()     dict2class.types = mycustommethods      \n\n**Add list of custom methods to type and use them:**\n\n       dict2class = Dict2Class()     dict2class.types = [custommethod1, custommethod2, custommethod3, custommethod4, custommethod5] \n\n[https://pypi.org/project/pydict2class/0.0.1/](https://pypi.org/project/pydict2class/0.0.1/)\n\n[https://github.com/dierk-bentpiening/PyDict2Class](https://github.com/dierk-bentpiening/PyDict2Class)", "score": 0}, {"text": "Build your own dataset generator with Python. ", "score": 0}, {"text": "Python libraries. When I first started programming I got my feet wet using python and have working knowledge about the language, but transitioned my focus on front-end web development. I want to return to python to develop a deeper understanding, what are some libraries you use in your day-to-day you\u2019d say would be worth learning? Thanks in advance!", "score": 1}, {"text": "Clicknium tutorial: automate Windows application and web browser in Python. Clicknium python module is a very useful GUI automation lib. But the office doc is not straight enough. So I write a tutorial for the lib and hope more people use it to reduce the daily task. \n\n[https://dev.to/kayyolo/clicknium-cookbook-1ai2](https://dev.to/kayyolo/clicknium-cookbook-1ai2)", "score": 3}, {"text": "Many rows -&gt; kernel died. I have a SQL query for getting data from a database and loading it to a dataframe. How ever, this drains the memory and I often get a message telling me the kernel has died. I have about 8 million rows.\n\nIs there a way solution to this?", "score": 4}, {"text": "I made a simple random password generator. [Random Password Generator](https://github.com/milkyicedtea/Random-password-generator) (~~what an orginal name!~~) or [RPG](https://github.com/milkyicedtea/Random-password-generator) for short is a simple password generator that uses [PySimpleGUI](https://github.com/PySimpleGUI/PySimpleGUI) GUI framework, in order to have a user-friendly interface ~~and also because i wanted to have fun.~~\n\nYou can find more information on the project in the [README](https://github.com/milkyicedtea/Random-password-generator#readme) (~~I'm kinda proud of how it came out~~)\n\n&gt;**Disclaimer:**  \n&gt;  \n&gt;As it's hopefully obvious, I would never use and do not recommend using this to actually generate passwords you use, as i don't know if this is secure enough, since it uses very simple algorithms to generate the passwords.\n\nOf course, any critiques and tips on how to make the code/generation better are welcome, *just please, don't paste some code in here. I'd rather figure it out myself ;)*", "score": 0}, {"text": "What is more readable for people and more Pythonic. Hello Good folks, just wondering to gather some opinions on this. Which one would you say is more pythonic.   \n\n\n    response = []\n    response = sorted(\n        [\n             something.name\n             for something in lot_of_somethings\n             if something.some_var.startswith(\"Hello There\") and \n             something.name in [\"blah\", \"bleh\", \"blue\"]     \n        ]\n    ) \n    return response\n\nOR  \n\n    response = []\n    for something in lot_of_somrthings:\n         if something.some_var.startswith(\"Hello There\") and something.name in [\"blah\", \"bleh\", \"blue\"]:        \n         response.append(something.name)\n    \n    return sorted(response)", "score": 36}, {"text": "What are the good sources to learn machine learning in Python??. I've recently finished learning about python and now I want to learn about machine learning...\nIt is confusing as there are so many modules and I just can't choose between them....\nIf anyone could suggest me 5 best modules I should learn it would be a great help....", "score": 71}, {"text": "Tuesday Daily Thread: Advanced questions. Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.\n\n**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.", "score": 5}, {"text": "PTML - Python Text Markup Language. [https://github.com/cmspeedrunner/PTML](https://github.com/cmspeedrunner/PTML)  \nopinions? (this is a meme language, not supposed to actually be used)", "score": 5}, {"text": "What is the best interactive learning tool?. Tried out a few interactive tools and really enjoyed learning before hitting paywalls. What is the best tool to learn python? It would also be usful if I could pay for it on a rolling month contract instead of an anual one.", "score": 1}, {"text": "Tinkering with Unix domain sockets. I needed to set up a proxy that relays requests to an HTTP web server communicating through a Unix domain socket (UDS). It turns out that I didn't know much about UDS. Thought I'd document the process as I started poking around it:  \n\n\n[https://rednafi.github.io/reflections/tinkering-with-unix-domain-sockets.html](https://rednafi.github.io/reflections/tinkering-with-unix-domain-sockets.html)", "score": 4}, {"text": "How do you research for bugs/issues solutions?. Hi everyone, I was wondering what is the exact process do you use to find out solutions for your code issues. Do you jump straight to StackOverflow? Or do you start by doing something different?", "score": 73}, {"text": "Question: Is there a way of using python functions within Excel/a spreadsheet, rather than VBA?. I've tried writing scripts in Python in LibreOffice, but that just allows you to do macros on your spreasheets. It won't let you define a function and then call that function from within your cells as if it were built in.\n\nI've tried writing functions in VBA and JS in Excel and GoogleSheets, respectively, but I'd rather not have to learn a new language, and it would be easier to test that my scripts work correctly if they were written in python.\n\nI've also tried pyspread, but pyspread doesnt let you reference cells like a normal spreadsheet i.e. your formulas cannot include =A1+B2\n\nI've also seen pyxll but it seems you have to pay for it, which is crazy.\n\nAnyone aware of anything?", "score": 6}, {"text": "Hypermodern Python Toolbox - a set of Python tools setting the standard in 2023. ", "score": 0}, {"text": "QCheckBox and QComboBox in PyQt6!. ", "score": 0}, {"text": "Introducing \ud83c\udf00 Ciclo: A functional training loops library for JAX. # \ud83c\udf00 Ciclo\n\n*A functional training loops library for JAX*\n\n`ciclo` provides a set of utilities and abstractions to build complex training loops with any JAX framework. `ciclo` defines a set of building blocks that naturally compose together and scale up to build higher-level abstractions, ranging from low-level custom training loops to Keras-like training APIs.\n\n[https://github.com/cgarciae/ciclo](https://github.com/cgarciae/ciclo)\n\n[code](https://preview.redd.it/srzavxixqina1.jpg?width=1938&amp;format=pjpg&amp;auto=webp&amp;v=enabled&amp;s=0014f50581761d5b8c1c5df741a3ad103ae7c835)", "score": 7}, {"text": "Why can't Python/mypy type hint functions outside the function defintion?. What I have in mind is this bit of code:\n\n    from typing import Callable\n\n    function_signature = Callable[[int], float]\n    f: function_signature\n    \n    def f(x):\n        return x ** 0.5\n\ninstead of \n\n    def f(x:int) -&gt; float:\n        return x ** 0.5\n\nThis would allow APIs to define a signature for callback functions, and users wouldn't have to retype the signature in their function definitions. \n\nI see this as analagous to allowing either\n\n    i: int = 10\n\nor\n\n    i: int\n    i = 10\n\nwhich is allowed and works fine. In fact, my suggestion is syntactically correct (the code runs), but doesn't have the intended effect on mypy.", "score": 5}, {"text": "How to run a Python Flask server inside a readonly Docker container. ", "score": 22}, {"text": "Save arbitrary files on YouTube persistently!. After seeing how a similar Rust project blew up id thought id share my program here from a few months back.\n\nI made a simple program to turn any arbitrary file into a mp4 format by saving the binary information of the file in the form of colour blocks in the frames. Naturally, the original file can be reconstructed from the mp4 file. This means you can use YouTube as persistent data storage for even non video files (not that you should, but it is possible:D) !\n\nif you like to try it out or see the code it can be found on  GitHub [https://github.com/Joensw/persyst](https://github.com/Joensw/persyst)\n\n&amp;#x200B;\n\n&amp;#x200B;\n\n[The files encoded as videos look something like this](https://reddit.com/link/11qcdxg/video/hkqefzqwxina1/player)", "score": 6}, {"text": "Paperback version of my book Develop Cross Platform Desktop Applications using Python, Qt and PySide6 now also available. There was a request to publish my new book also as paperback.  \nAnd here it is, at least in the US shop at [Amazon.com](https://www.amazon.com/dp/B0BXN5TFMM)  \nEnjoy  \n\n\n&amp;#x200B;\n\nhttps://preview.redd.it/mkpczxmi2jna1.png?width=325&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=dfa3e5f9678547ddf1478ece29f58e5f127dc0f3", "score": 3}, {"text": "code: performance vs. readability. I'm a beginner currently learning and came across following question.  \nHad to write code that computed certain items from lists with each other:\n\n    # both lists are number of people in a group having eye-color\n    data = [[23,11,5,14],[8,32,20,5]]\ncolor = input()\n    \n    # eye color in lists e.g. data[0][1]=\"brown\"\ncolor_code = [\"brown\",\"blue\",\"green\",\"black\"] \n    # index of inputted color\n    color_index = (color_code.index(color))    \n    \n    # this should print % of said color in both groups together as integer\nprint(int((((data[0][color_index]) + (data[1][color_index])) / (sum(data[0]) + sum(data[1]))) * 100))\n\nThe line with the print-statement is nearly unreadable. I could enhance that by declaring each variable in its own line but (I THINK\\*) that this decreases performance(?)   \n*\\*is my assumption about decreased performance even correct?*\n\nIn this small example it would make hardly any difference but what if I would scale that up (e.g. high frequent in-/output where performance becomes relevant?\n\nFurthermore: is there a good guideline for questions like this? E.g. when and how do I decide for performance over readability -especially when I would work in collaboration with others?   \n\n\nAnother example that is kind of alike but I am not entirely sure if it's comparable because it's concerned with storing an additional variable rather than outputting a functions result:  \nGiven a list\n\n    stuff = [a,b,c] \n\nSuggest I want to remove- and  yet keep an item somewhere else, from a list. \n\nI could:\n\n    keep = stuff.pop(index_of_kept_item)\n\nor:\n\n    kept = stuff(index_of_kept)\n    stuff.pop(index_of_kept)\n\nWhich of the two approaches would be more efficient in a small or large scale?\n\nTo be clear: this question is not about my code\\* but on performance(-and its principals) when writing code, also in regards to other aspects of usability - especially readability.  \n(\\*although I would appreciate constructive guidance if applicable)", "score": 2}, {"text": "Flask or Django for a Hyper-V Manager?.  \n\nHey, I'm planning to build a Hyper-V Manager that will be accessible over the internet. I'm considering using either Flask or Django as the web framework, but I'm not sure which one is the best choice. I'm also concerned about security since the server will be publicly accessible. Can Django provide enough security?\n\nI've been reading the Django documentation and came across this statement: \"Now\u2019s a good time to note: don\u2019t use this server in anything resembling a production environment. It\u2019s intended only for use while developing. (We\u2019re in the business of making web frameworks, not web servers.)\" This has me wondering whether Django is suitable for a public-facing server.\n\nSo, I'm looking for advice on which framework to use and whether Django is secure enough for my needs. Any insights or recommendations would be greatly appreciated. Thanks in advance!", "score": 2}, {"text": "I made a CLI to streamline Ethical Hacking workflow. Hello everyone! I created this project to help streamline my ethical hacking workflow. It includes various functions, such as:\n\n* Convert: Allows you to apply a specified decoding or hashing function to input data. (e.g. URL, HTML, Base64, ASCII, Hex, Octal, Binary &amp; GZIP).\n* Enumerator: Enumerates subdomains for a given domain using subfinder, amass, assetfinder, findomain, and active enumeration.\n* Capture: Sends a GET request to a specified URL, captures the request headers, extracts the hostname, path, and cookies, and missing headers.\n* Portscan: Scans a host for common or all possible open ports.\n* Certificate: Checks the SSL/TLS certificate information for a given URL.\n* Storm: Sends HTTP requests to a given URL with a specified number of attacks and requests.\n* Disturb: Sends multiple HTTP requests to the specified URL with the same payload.\n* Fuzz: Tests your web applications against path fuzzing and file fuzzing.\n* CIDR: Looks up the CIDR range for a company's domain name from its RDAP record.\n* CVE: Retrieves CVE data for a specific product name (company name) from NIST's National Vulnerability Database (NVD). VPS: Allows you to log in to your VPS with a single command.\n\nI want to express my gratitude to many bug bounty hunters who helped me with this project. I believe it can be useful for anyone interested in ethical hacking.\n\nPlease let me know your feedback, as I am eager to make this tool the easiest and most minimalistic for the community.\n\nHack on!\n\n[**https://github.com/kitsec-labs/kitsec-core**](https://github.com/kitsec-labs/kitsec-core)", "score": 5}, {"text": "procedurally generated fantasy names. Hello! This is one of my first projects in python. What this does is constructs a name from scratch. I found most \"name generators\" just pull from a list of predefined names and spit one or some out. Instead, this \"procedurally\" generates, if you will names based on syllables that it constructs and then joins together. I started this Friday night and it was my first time working with a GUI so I am pretty proud of what has come out so far. I have some ideas for additions but at its core as of right now it does exactly what I want it to do. It has options to export the names to a CSV file, or to copy to your clipboard as either text or an image to share elsewhere.\n\n[https://github.com/Lanecrest/RanGen-Fantasy-Names](https://github.com/Lanecrest/RanGen-Fantasy-Names)\n\nI am happy to hear what anyone has to think about the app itself or also any suggestions to the code, etc :)", "score": 21}, {"text": "Why Python keeps growing, explained. ", "score": 187}, {"text": "Is something wrong with FastAPI?. I want to build a REST api with Python, it is a long term project (new to python). I came across FastAPI and it looks pretty promising, but I wonder why there are 450 open PRs in the repo and the insights show that the project is heavily dependent on a single person. Should I feel comfortable using FastAPI or do you think this is kind of a red flag?", "score": 195}, {"text": "Lusbir: an alternative conception of integer ranges. [https://github.com/shape-warrior-t/lusbir](https://github.com/shape-warrior-t/lusbir)\n\nI made a library that provides an integer range class that works in a different way than Python's built-in `range` type. It's probably not that *useful*, but I do think it's an interesting concept to explore.\n\nPython ranges work on a start/stop/step model: start at some number and then increase by the step until you reach the stopping point. Meanwhile, these ranges -- which I've named **lusbirs** \\-- are determined by a lower bound, upper bound, step, and base. Take all numbers of the form (n \\* step + base) for some integer n, and then only include the numbers that fall between the lower and upper bounds. All four combinations of inclusive/exclusive lower/upper bounds are supported. The step can be positive or negative, which determines whether the range is ascending or descending, just like built-in ranges.\n\nAs an example, consider a lusbir with an exclusive lower bound of 10, an inclusive upper bound of 30, a step of 4, and a base of 2. It would represent the list of numbers between 10 (exclusive) and 30 (inclusive) that are of the form 4n + 2, which would be the list \\[14, 18, 22, 26, 30\\].\n\nMore info about this library -- including how to actually create a lusbir in your code -- is available on the project's GitHub page.\n\n&amp;#x200B;\n\nThis is my first published Python library, and I made it partially to gain experience with the process of packaging a Python project. I'm not planning to do long-term maintenance of this library, but if you see any notable problems in the code, tests, or documentation, please let me know.\n\nHope some of you find this cool and/or interesting! Questions, comments, critiques, etc. are all welcome.", "score": 1}, {"text": "An opinionated Python boilerplate. ", "score": 404}, {"text": "i created a new programing language that run on python. I created a simple programming language with python.  \nthe programming language called Mana.\n\ncheck it out try to program something there and tell me if there is an error and how to improve it.\n\n[https://github.com/IdanHajbeko/Mana-programming-language](https://github.com/IdanHajbeko/Mana-programming-language)", "score": 0}, {"text": "FastKafka - free open source python lib for building Kafka-based services. We were searching for something like FastAPI for Kafka-based service we were developing, but couldn\u2019t find anything similar. So we shamelessly made one by reusing beloved paradigms from FastAPI and we shamelessly named it FastKafka. The point was to set the expectations right - you get pretty much what you would expect: function decorators for consumers and producers with type hints specifying Pydantic classes for JSON encoding/decoding, automatic message routing to Kafka brokers and documentation generation.\n\nPlease take a look and tell us how to make it better. Our goal is to make using it as easy as possible for some how has experience with FastAPI.\n\n[https://github.com/airtai/fastkafka](https://github.com/airtai/fastkafka)", "score": 128}, {"text": "How virtual environments work. ", "score": 20}, {"text": "Monday Daily Thread: Project ideas!. Comment any project ideas beginner or advanced in this thread for others to give a try! If you complete one make sure to reply to the comment with how you found it and attach some source code! If you're looking for project ideas, you might be interested in checking out Al Sweigart's, [\"The Big Book of Small Python Projects\"](https://inventwithpython.com/bigbookpython/) which provides a list of projects and the code to make them work.", "score": 6}, {"text": "Best practices for caching data between runs (non-local library)?. I've got some local code that caches the results of slow functions in a `.cache` folder in my project root directory. I would like to publish this code on PyPI, and I'm looking for some best practices for dealing with this `.cache` directory.\n\nI can put it in the user's temp directory and make provisions for race conditions, bad data, etc.\n\nBut I'm wondering if this is a \"best practice.\" Is there a better way to handle this?\n\nOf course, I'm potentially *over*writing caches, so there are some decisions to be made there.\n\nFWIW:\n\n* cache size is small.\n* speed is a low priority.", "score": 11}, {"text": "Need Guidance on Python Script. I'm a sales and online marketer by trait with 16 years experience working with 4 different agencies here in Austin, Texas. I'm not a programmer. But I have about a dozen projects under my belt and worked with a lot programmers in the past. And I see the value of these python tools and emerging technologies that make everything easier today it seems like. \n\nI wanted to know, what would be the best route to take because I have two types of solutions I want to create while trying to weigh in on expense and time.\n\nOne is a Google Maps email lead scrapper tool.(linkedin also) This is right down my alley as I already have a word of mouth social media referral app. \n\nAnd this other solution is social media listening tool that could track keywords/tags from posts on social networks.This one brings way more value to the table and would be my first priority because it could easily sell as high ticket offer.\n\nI want to hire python expert or find partner with sweat equity. Due to this situation. I don't want to take on the wrong project. I'm trying to weight the difference between which one requires more advanced programming, has the least possible technical hurdles and ease on budget for a team of two? One marketer and one programmer. \n\nFYI:\n\nI'm planning to add this gmaps scrapper tool as 60 day freebie for attendees of my webinar class. The app Im promoting is a lead generation referral app called friendloops. And basically it's a high ticket sales webinar. Whoever doesn't bye the referral app on this webinar, are then placed into a sales funnel that sells gmaps scrapper on monthly subscription.\n\nThe reason I'm sharing this much detail is because I don't want people to think I'm just throwing things up in the air to see if they stick. I plan to plug in the gmaps scrapper(or listening tool) into a sales funnel along side a social omni present retargeting campaign. The very same campaigns I used to create for marketing agencies here in Austin, and across the country. I'll be using my own money to fund the funnels.", "score": 2}, {"text": "Parser combinator in Python. https://github.com/frndmg/pyrsec\n\nI know we have many already, I was just in the look for some type safe, modern looking, with operator support implementation and ended up with my own \ud83d\ude05.\n\nHope you like it.", "score": 11}, {"text": "StructIO: Library for unpacking and packing binary files. These are generic functions combined with a file-like stream for unpacking and packing binary files. I learned how to make them while trying to figure out how to read the game files of The Sims 2.\n\n[https://github.com/lingeringwillx/StructIO](https://github.com/lingeringwillx/StructIO)\n\nThoughts and opinions?\n\nOther similar tools that perform the same task. This seems to be a bit of a niche issue and so the tools for working with it are hard to find:\n\n[bitstring](https://github.com/scott-griffiths/bitstring)\n\n[Kaitai Struct](https://kaitai.io)\n\n[numpy.frombuffer](https://numpy.org/doc/stable/reference/generated/numpy.frombuffer.html) and [numpy.fromfile](https://numpy.org/doc/stable/reference/generated/numpy.fromfile.html)\n\n[Construct](https://construct.readthedocs.io/en/latest/)\n\n[rawutil](https://github.com/Tyulis/rawutil)\n\nThe last time I posted something here years ago my work was trashed, so I'm worried about posting here again :p", "score": 8}, {"text": "New book available: Python GUI - Develop Cross Platform Desktop Applications using Python, Qt and PySide6. I have just released a new book about Python and **PySide6** based on my book about PyQt5.  \nMany thanks to this community for giving me some requests to be implemented in this book.  \nI have added user controls including transitions.  \n\\- I am showing a sample of a line of business app including database access using tinydb, which is also written in Python.  \n\\- I have added a multi-treading example, where HTML will be created in the background on given markdown.  \n\\- I have also added a filterable dropdown listbox.  \nOne user control dynamically creates icons in different colors based on SVG on the fly.   \nAnd many more...  \nI will send some free copies out to those people how inspired me to add additional content and the rest of you can get the book on Amazon in [English](https://kdp.amazon.com/amazon-dp-action/us/dualbookshelf.marketplacelink/B0BY3PKBSM) and [German](https://kdp.amazon.com/amazon-dp-action/de/dualbookshelf.marketplacelink/B0BXYPZ6VY).\n\nIf you have ideas or requests what else to show in this book, then please let me know.\n\nhttps://preview.redd.it/5wq1tpxq84na1.png?width=1600&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=225dff3d591a855fe14a7cb4a0a53311607609ba", "score": 323}, {"text": "Best places/ways to learn APIs for career progression?. Looking for YT videos, chat chains, something to help me understand APIs and how to build them to use them effectively.", "score": 25}, {"text": "Godot Fast Android Export. Have you ever used Godot to write Android apps?  \nGodot is crazy fast in deploying that app to your mobile.  Seems that the APK file is already ready and all the GDScripts and Scenes where just extended to the end of that APK as resources. Even Android Studio is much slower.  \n\n\nWhat way can we go using Python on Android?  \nWhen I used PyQt5 the freezing, compiling and deploying process where soo slow.  \nWould\\`nt it be nice to have the Python engine and modules ready compiled and just also add our Python code as resource?  \n\n\nHow can we do that?  \nIs there a solution a la pyqtdeploy from riverbank for PySide6 at all, which we might tweak?", "score": 4}, {"text": "Using ChatGPT API in Python (feat. DALL-E, Karlo). **Using ChatGPT API in Python (feat. DALL-E, Karlo)**\n\n[https://wooiljeong.github.io/python/chatgpt-api/](https://wooiljeong.github.io/python/chatgpt-api/)\n\nHello, I've written a post on how to use the ChatGPT API (ChatCompletions) in Python, which was recently released.\n\nIn addition, I've also included a method for asking ChatGPT to imagine something and having image generating AIs like Karlo and DALL-E draw pictures based on the results. For example, I automated the process of requesting an imagined image of what buildings might look like if humans settled on Mars from ChatGPT and then having a picture drawn based on the results.\n\nI've attached pictures drawn by Karlo API from Kakao and DALL-E from OpenAI. The impressive thing is that the results of the different AIs' interpretations based on ChatGPT's imaginative input are unique and meaningful. As the shared link is written in Korean, I recommend using a Chrome extension to translate the content into English for those who are interested.\n\n[ The image of a human settlement on Mars drawn by DALL-E. ](https://preview.redd.it/58p82nmva9na1.jpg?width=1024&amp;format=pjpg&amp;auto=webp&amp;v=enabled&amp;s=2ca4f49b746141321ce367712456c935af3f1fda)\n\n[ The image of a human settlement on Mars drawn by Karlo ](https://preview.redd.it/ohjqtolwa9na1.jpg?width=1024&amp;format=pjpg&amp;auto=webp&amp;v=enabled&amp;s=9e30b01af6124a72927da7fe3317bae26dd7290f)", "score": 13}, {"text": "Can we expand on the usage of the walrus operator?. I found a way to run asynchronous tasks using `asyncio.gather` and immediately assign the first result to a variable. This is nice, because it uses fewer lines of code. The idea is that here one task returns the result directly, whilst the other stores the result in a class attributes. This is what the syntax looks like:\n\n    response = (_ :=  await asyncio.gather(\n        send_get_request(*args),\n        some_class.load_some_data()\n    ))[0]\n\nIt works because the walrus assignment is execute first, and the result of `gather` is stored in the temporary variable `_`. Now I can get the desired response using the desired index. I know in this example there might be a better way to perform this task, like so:\n\n    response, _ = await asyncio.gather(\n        send_get_request(*args),\n        some_class.load_some_data()\n    )\n\nCan someone think of a scenario where the  `(_ := &lt;some_task&gt; )` is useful? And whether we can consider this pythonic (likely not). I know some already find the walrus operator dubious, and this syntax makes it even more dubious, but I find it an interesting topic and would like to hear some thoughts.", "score": 3}, {"text": "Text to image flowchart creation using mermaid. I stumbled upon this over the weekend, noticing that Notion allows you to create \"mermaid blocks'.\n\nWhat is mermaid? It's a JavaScript tool that takes text input and creates flowcharts, and other diagrams. I'm always struggling to keep block diagrams up to date, and it's even worse in a team, things fall out of date really quick.\n\nSo I'm excited to try this, and while I'd love a python tool that compiles mermaid code snippets, a useful alternative is using the mermaid API to create the images in python.\n\nDoes anyone have an alternative that's more useful, or commonly used?", "score": 7}, {"text": "Easy Python scripts to impress the business. Hi Python Devs, which quick and easy scripts have you written that impressed the business and got you some kudos without requiring any real effort on your part?", "score": 159}, {"text": "Matplotlib showing close but incorrect plot?. &amp;#x200B;\n\nhttps://preview.redd.it/ijy6wrntp7na1.png?width=1153&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=e7ca32ae47d023d2916c35827d11eb6a360a411b", "score": 19}, {"text": "Trying to solve The Collatz Conjecture with python. Trying to solve The Collatz Conjecture with python\n\n&amp;#x200B;\n\nhttps://preview.redd.it/rteikgkc4bna1.jpg?width=3104&amp;format=pjpg&amp;auto=webp&amp;v=enabled&amp;s=6d06d5324d2735ebd935f8f55430e85f0dfbf324", "score": 3}, {"text": "Netmeasure - measure Internet connection quality. Netmeasure is a Python library for measuring Internet connection quality in a structured and consistent way.\n\nIt incorporates a variety of measurements that you can run from the command line or incorporate into your own applications.\n\nNetmeasure is a fork of an orphaned commercial open source measurement library that I created with some colleagues a few years ago. Now that it's been re-animated I hope that it can be of some value  to the community.\n\n[https://github.com/amorphitec/netmeasure](https://github.com/amorphitec/netmeasure)  \n[https://pypi.org/project/netmeasure/](https://pypi.org/project/netmeasure/)\n\nhttps://preview.redd.it/8zts10qefana1.png?width=1138&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=5b4e4e6d3b2d5baed82d5cb70c50b3ef866957d6", "score": 4}, {"text": "Python and KIVY for reading info from micro-controller.  I created app for reading info from port Arduino. I used Kivy and added one a button, a title and a spinner. User can chose port and read info.\n\nHere my code.\n\n[https://github.com/Pra1seTheSun322/Read-information-from-Arduino-UNO](https://github.com/Pra1seTheSun322/Read-information-from-Arduino-UNO)", "score": 0}, {"text": "How to calculate GPT-3 API call costs using python?. Tutorial for calculating GPT-3 API costs for each call.", "score": 0}, {"text": "First steps into Python (again!) with VSCode. I am once again attempting to pick up Python--as a pure (Windows!) hobbyist who programmes for pleasure and to automate tedious commandline tasks. By inclination I am a Perl and C++ programmer but... I'm also an old duffer and no longer have the necessary patience to relearn all the niceties and dogma of C++. Sadly Perl does not have a modern GUI IDE that provides all the intellisense-style features that I have become so used to leaning on in my decrepitude. So... Python! Maybe.\n\nI have read posts from several home-programmers similar to myself who suggest using 'VSCode' instead of 'PyCharm' as an IDE--which seemed like a good idea. I do however have a few questions which I may update as things occur to me. I am of course extremely grateful in advance to anyone who takes the time to answer.\n\nFirstly, when inside 'VSCode' do I need to install *both* the 'Python' *and* the 'Pylance' extensions? The official Microsoft FAQ is somewhat unclear. It could be that 'Pylance' is integrated into to the 'Python' extension.\n\nSecondly, because I am using a 16 years old machine I cannot update beyond Windows 7. I appreciate official support has ended and so on and so forth. However is Python still viable on a Windows 7 PC?\n\nMy final question for now is are there any good sites that acclimatise a new Python programmer to the language? An ideal would be something like a Python version of 'Perl Mavern' or the 'Perl Cookbook'. Most of the online material I have found seems to be focussed on professional programmers who use the language to make a living. Sadly experience has proven that 'StackExchange' is... Not a friendly place for the beginner and still less the hobbyist is perhaps the politest way to put it.\n\nAnyway... Many thanks to anyone who takes the time to read this or reply.", "score": 0}, {"text": "Python Cybersecurity \u2014 Build your own python tools (PortScanner, Visual Network Tracker and Anonymous FTP Scanner). **Python Cybersecurity \u2014 PortScanner**\n\nBuild a simple Port Scanner using the Python Programming language. Port Scanner is an application designed to probe a server or host for open ports. Such an application may be used by administrators to verify security policies of their networks and by attackers to identify network services running on a host and exploit vulnerabilities.\n\n**Link**: [https://youtu.be/bH-3PuQC\\_n0](https://youtu.be/bH-3PuQC_n0)\n\n**Python Cybersecurity \u2014 Visual Network Tracker**\n\nDive into Network Traffic visualization using the Python programming language, Wireshark and Google Maps. This tutorial covers the implementation steps needed to take a file of network traffic and convert it into a visual presentation using Google Maps.\n\n**Link**: [https://youtu.be/xuNuy8n8u-Y](https://youtu.be/xuNuy8n8u-Y)\n\n**Python Cybersecurity \u2014 Anonymous FTP Scanner**\n\nBuild a simple FTP Scanner using the Python Programming language. Anonymous FTP is a means by which archive sites allow general access to their archives of information. These sites create a special account called \u201canonymous\u201d\n\n**Link**: [https://youtu.be/BIZfRodSW9w](https://youtu.be/BIZfRodSW9w)", "score": 112}, {"text": "Tutorial: Daily scheduled Python app that adds stock prices to Airtable. ", "score": 7}, {"text": "I wrote an article about Pandas Extension types with an example of how to create your own. Thought it might be useful here!. Let me know what you think and any feedback you might have", "score": 24}, {"text": "Sunday Daily Thread: What's everyone working on this week?. Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.", "score": 8}, {"text": "Web Scraping Google News Using Python. ", "score": 12}, {"text": "A Reddit discount on my Python course for beginners. Hey r/Python! I'm testing the waters here just to see if this is something you're interested in.\n\nI'm the author of this [Python course for beginners](https://python.land/product/python-course) called **Python Fundamentals**. It's a course for beginners that will properly get you started with Python. It's the culmination of about 4 years of writing about and teaching Python. It includes quizzes and practice and allows you to learn at your own pace. You'll get a certificate of completion after finishing the course. So far, people like my course, and I got some good reviews!\n\nI'm offering the coupon code `REDDIT_100` which gives you a 50% discount on the course. It's limited to the first 100 people for now (to prevent a potential server overload). \n\nIf you have any questions, leave me a message or reply here :)", "score": 0}, {"text": "I made Flask-Squeeze 2.0, it squeezes responeses with minification and compression!. Hi guys! I just wanted to share the Flask extension [Flask-Squeeze](https://github.com/mkrd/Flask-Squeeze) with you. It will minify HTML, JS and CSS, and compress responses with brotli, deflate, or gzip depending on the request, with almost zero configuration.\n\nI know there are other extensions aswell, but as far as I know, none of them have a complete feature set of minification AND compression.\nI just published version 2.0, which noch also includes HTML minification!\n\nLet me know what you think, and what else could be added :)", "score": 31}, {"text": "PSA: conda-libmamba-solver can cut two hours off of your Anaconda install, but has only 47 GitHub stars. It deserves more praise.. If you've dealt with Conda for data science, or just because it's a cool environment, you know the algorithm Conda uses to solve library conflicts is not great. Trying to add 6 packages for example can take 300 seconds to solve. That's just normal. A bit more complex environment, and you can take 20 minutes. If you misstep in just the wrong way however, you can easily take **3+ hours** for the algorithm to figure out what's compatible. Mamba, an alternative to Conda, is a known solution but it just isn't the same. Lots of people would rather keep using Conda. Well... apparently it's fairly straightforward to *fix Conda*:\n\n    conda install -n base conda-libmamba-solver\n\nThen you just add the flag `--solver=libmamba` to each command you want to use it with thereafter and compare the difference. In my case it took a 2 hour 17 minute install down to 16 minutes or so.\n\nThis is also an interesting lesson in software design. Conda tried to roll their own solver that runs on a single core in pure Python. The alternative a proven multi-core C++ library.\n\nHopefully someone finds this useful.\n\n[Link to relevant GitHub. (no affiliation)](https://github.com/conda/conda-libmamba-solver)", "score": 322}, {"text": "Cake Day - 1st Job. Just wanted to celebrate my Reddit cake day by announcing that I may be getting my first programming job as I got an email today to be moved forward!!! That\u2019s all. Hope the best for you all.", "score": 119}, {"text": "How to debug complex tool chains?. Bat files calling python scripts and execution that jumps between multiple python interpreters and virtual environments. How do I debug that in PyCharm.\n\nI only know how to debug within one specific environment (global, virtual environment, app environment - like Maya, Blender, etc) but for chains where the execution jumps around a lot I tend to just run the whole thing manually from the entry point and so only print debugging (and it's time consuming). \n\nHow can I be more effective here?", "score": 12}, {"text": "Near-Earth Objects &amp; Asteroids: Some space science. Hey everyone,\n\nI wanted to write this small post since a few weeks, but somehow lost track due to new videos and coding I am currently doing in parallel.\n\nAnyway. In the last couple of weeks I created a small Python based project series on Near-Earth Objects (NEOs). Quick intro: NEOs are objects that approach the Sun within a distance of max. 1.3 AU. 1.0 AU corresponds to the average distance between Earth and Sun (around 150 Million km).\n\nYou may hear sometimes of these objects in the media when an asteroid is approaching us, is having a close flyby, or is detected before it vanishes while disintegrating in the night sky, [like this one](https://www.bbc.com/news/uk-64621721).\n\n*But how many objects are out there? Where are they and how do they \"travel\" around the Sun? Are they bright? If yes, how bright? How can we compute their brightness? Can we also model a theoretical distribution of NEOs to get an understanding where we have \"to look at\"? And what kind of telescopes are needed?*\n\nThese are ... a lot of questions. And in my 16 parts tutorial I try to tackle all questions as thoroughly as possible. If you are interested in getting an understanding how this particular topic is handled in \"space science\", feel free to take a look at my GitHub repository and the corresponding explanatory videos.\n\nSpace Science is approachable; and there are tons of libraries and Open Access data for Python. I try to gather my academic knowledge and create these tutorials to support students, free-time coders and everyone, who is into Python and astronomy.\n\nEnjoy!\n\nThomas\n\n[GitHub Link](https://github.com/ThomasAlbin/Astroniz-YT-Tutorials/tree/main/%5BProject%5D-Near-Earth-Objects)\n\n[YouTube Playlist](https://www.youtube.com/watch?v=tVyFqVuuM6g&amp;list=PLNvIBWkEdZ2hL5be8mQdpTU3BjhKIhD6L)", "score": 6}, {"text": "[GlassJar] Stores records as Python objects in the database!. Hi guys!\n\nI created a pickled-based database for storing Python objects. [GlassJar](https://github.com/furkanonder/glassjar) is a database that, unlike other databases, stores records as Python objects in the database and allows you to use them with ORM.\n\n*Let's look at the small example;*\n\nNormally, we can't directly store the Python dict in a database. But in the [GlassJar](https://github.com/furkanonder/glassjar) we can do that!\n\n    &gt;&gt; from glassjar.model import Model\n    &gt;&gt;&gt;\n    &gt;&gt;&gt; class Item(Model):\n    ...     name: str\n    ...     attrs: dict\n    ...\n    &gt;&gt;&gt; item = Item.records.create(name=\"item\", attrs={\"color\": \"red\", \"shape\":\"rectangle\"})\n    &gt;&gt;&gt; item.as_dict()\n    {'name': 'item', 'attrs': {'color': 'red', 'shape': 'rectangle'}}\n    &gt;&gt;&gt; item2 = Item.records.create(name=\"item 2\", attrs={\"color\": \"blue\", \"shape\":\"triangle\"})\n    &gt;&gt;&gt; Item.records.first()\n    Item(name='item', attrs={'color': 'red', 'shape': 'rectangle'})\n    &gt;&gt;&gt; Item.records.last()\n    Item(name='item 2', attrs={'color': 'blue', 'shape': 'triangle'})\n    &gt;&gt;&gt;\n\nCheck out our [documentation](https://furkanonder.github.io/glassjar/) to learn more!", "score": 10}, {"text": "Do you feel like your education prepped you in becoming a good programmer?. I am just a little bitter. I feel my undergrad was pretty much useless. Do you feel like your undergrad made you what you are today? or did you have to learn on your own?\n\n&amp;#x200B;\n\nEdit: Thank you all for your perspective. All the answers were very interesting to read. ", "score": 176}, {"text": "SayIt: a simple text-to-speech CLI app. I made a simple CLI app that can read any text aloud: https://github.com/jabbalaci/say-it . It uses the excellent gTTs library. It can be integrated in other projects too. Possible use cases: PDF to audiobook conversion, practicing pronunciation (for English learners), etc.", "score": 6}, {"text": "Please break my HTML minifier. So I recently saw this post here where this guy got absolutely wrecked for posting his shitty code here, and not gonna lie, that was pretty funny.\n\nSo here is my turn! \n\nSince the most popular Python lib for minifying HTML (htmlmin) is way too slow, I decided to make my own and honestly I'm surprised how short it is. It can't be that simple right? It is also about 10x faster than htmlmin. I challenge you to break this code to produce incorrect HTML:\n\n    from html.parser import HTMLParser\n    import rjsmin\n    import rcssmin\n\n\n    class MinifyHTMLParser(HTMLParser):\n        def __init__(self):\n            super().__init__()\n            self.minified_html = \"\"\n\n        def handle_decl(self, decl: str) -&gt; None:\n            self.minified_html += f\"&lt;!{decl}&gt;\"\n\n        def unknown_decl(self, data: str) -&gt; None:\n            self.minified_html += f\"&lt;!{data}&gt;\"\n\n        def handle_pi(self, data):\n            self.minified_html += f\"&lt;?{data}&gt;\"\n\n        def handle_startendtag(self, tag, attrs):\n            self.add_tag(tag, attrs, \"/&gt;\")\n\n        def handle_entityref(self, name):\n            self.minified_html += f\"&amp;{name};\"\n\n        def handle_charref(self, name):\n            self.minified_html += f\"&amp;#x{name};\"\n\n        def handle_starttag(self, tag, attrs):\n            self.add_tag(tag, attrs, \"&gt;\")\n\n        # TODO Rename this here and in `handle_startendtag` and `handle_starttag`\n        def add_tag(self, tag, attrs, end_tag):\n            self.minified_html += f\"&lt;{tag}\"\n            for attr in attrs:\n                self.minified_html += f' {attr[0]}'\n                if attr[1] is not None:\n                    self.minified_html += f'=\"{attr[1]}\"'\n            self.minified_html += end_tag\n\n        def handle_endtag(self, tag):\n            self.minified_html += f\"&lt;/{tag}&gt;\"\n\n        def handle_data(self, data):\n            if self.lasttag == \"style\":\n                self.minified_html += minify_css(data).strip()\n            elif self.lasttag == \"script\":\n                self.minified_html += minify_js(data).strip()\n            elif self.lasttag in [\"textarea\", \"pre\", \"code\"]:\n                self.minified_html += data\n            else:\n                self.minified_html += data.strip()\n\n    parser = MinifyHTMLParser()\n    parser.feed(html_text)\n    return parser.minified_html", "score": 0}, {"text": "Other cool python feature recommendations. I have recently learned about Python turtle and thought it was really cool. I am new to python and I am looking for other beginner friendly yet powerful modules for visuals/ drawing/ animation/ graphics that I can exploit in python. Any recommendations of where I should look next would be appreciated.", "score": 9}, {"text": "docker-compose-diagram \ud83d\udc33\ud83c\udfa8 - create diagram of your docker-compose file. ", "score": 24}, {"text": "Apache Airflow Getting Started. Hi all --\n\nI recently started digging into Apache Airflow. Rather than simply forgetting the things that are difficult as a beginner as I climbed the learning curve, I decided to try to make the process a bit easier for the next person. Enjoy!\n\n[https://codesolid.com/airflow-python-etl/](https://codesolid.com/airflow-python-etl/)", "score": 14}, {"text": "Creosote - Identify unused dependencies and avoid a bloated virtual environment. ", "score": 604}, {"text": "Pyfuck - A python to brainfuck translater. https://github.com/cmspeedrunner/Pyfuck\nWhat do you guys think", "score": 110}, {"text": "Is there some hidden genius in the handle-exception package that I'm missing?. I ran across [the handle-exception package](https://github.com/dillibk777/handle_exception) whose supposed benefit is:\n\n&gt; you can handle exceptions in a centralized way, instead of having to write try-except blocks in multiple places.\n\nBut you can *already* handle exceptions in a centralized way, correct?", "score": 31}, {"text": "Config management for deep learning. This is my first ever python package I've released, hope you guys find it useful. I'm open to any feedback (however harsh), thanks!\n\ngit: [https://github.com/sashank-tirumala/yaml_config_override](https://github.com/sashank-tirumala/yaml_config_override)\\\n\npypi:  [https://pypi.org/project/yaml-config-override/](https://pypi.org/project/yaml-config-override/)\n\nThe idea is simple, you no longer need to write argparse for your config files for machine learning and deep learning projects (or any project really). Just call a function and it will write the arg parse for you, so that you can load config files and at the same time override them from the command line interface. Below is a more detailed description:\n\n# YAML CONFIG OVERRIDE\nYAML Config Override is an extremely lightweight command line interface to your YAML configuration file.\nJust create a yaml config file, and yaml_config_override will add command line arguments to it automatically.\nSuppose you have a YAML file `test.yaml`:\n```yaml\nouter:\n    x: 0\n    inner:\n        y: 1\n        eveninner:\n            z: abc\n```\nthen you can use it in the code `main.py`:\n```python\nfrom yaml_config_override import add_arguments\nimport yaml\nfrom pathlib import Path\nmy_config_path = 'test.yaml'\nconf = yaml.safe_load(Path(my_config_path).read_text())\nconf = add_arguments(conf)\nprint(conf)\n```\nNow you can call main.py as follows:\n```\npython main.py --outer.x 2 --outer.inner.eveninner.z hello\n```\nYour program output will be:\n```\n{'outer': {'x': 2, 'inner': {'y': 1, 'eveninner': {'z': 'hello'}}}}\n```\n\nAlternatively if you want to pass the config file as a command line argument you can modify the code as follows:\n```python\nfrom yaml_config_override import add_arguments\nconf = add_arguments()\n```\n\nNow you call main.py as :\n```\npython main.py --config test.yaml --outer.x 2 --outer.inner.eveninner.z hello\n```", "score": 1}, {"text": "Saturday Daily Thread: Resource Request and Sharing! Daily Thread. Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?\n\nUse this thread to chat about and share Python resources!", "score": 1}, {"text": "GitHub - airtai/fastkafka: FastKafka is a powerful and easy-to-use Python library for building asynchronous web services that interact with Kafka topics. Built on top of Pydantic, AIOKafka and AsyncAPI, FastKafka simplifies the process of writing producers and consumers for Kafka topics.. ", "score": 15}, {"text": "pip install openfrom. hi guys, just wanted to share a python script that opens multipe endpoints from a given URL.\n\n[https://github.com/chozeur/openfrom](https://github.com/chozeur/openfrom)", "score": 0}, {"text": "heyoka.py 0.21 - ODE integration wth LLVM, now supporting multiprecision. Hello there!\n\nI posted here before about [heyoka.py](https://github.com/bluescarni/heyoka.py), our high-performance ODE integrator based on LLVM.\n\nWe recently released a new version supporting arbitrary-precision computations. This support is built on top of a multiprecision class exposed from C++ to Python, with full NumPy support. That is, this new datatype can be used as a native ``dtype`` in NumPy arrays. I believe this might be a first in the scientific Python ecosystem.\n\nHere is a tutorial introducing the new feature:\n\nhttps://bluescarni.github.io/heyoka.py/notebooks/arbitrary_precision.html\n\nThanks to the properties of the specific numerical integration method employed by heyoka.py (Taylor's method), multiprecision numerical integrations can be orders of magnitude faster than DifferentialEquations.jl, as shown in the benchmarks section here:\n\nhttps://bluescarni.github.io/heyoka/benchmarks.html#extended-and-arbitrary-precision\n\nThe latest version of heyoka.py also introduces a prebuilt ``pip`` wheel for Linux x86-64 (whereas previous versions had only ``conda`` packages):\n\n```\n$ pip install heyoka\n```\n\nPlease let me know if you have comments, questions, criticism, etc.!", "score": 7}, {"text": "Python remote debugging on windows machines is now made easy!. Hi guys, I couldn't find latterly a single solution for pycharm to remote debug my python code on other windows machines, and I wanted to do that to do my AI training stuff on my friend's pc because mine is no strong enough, I ended up making my own python library that exactly does that!  \n\n\nWith only two lines of code, you can debug an python script on a windows machine easily, and a copy of all the stdout, stderr and stdin calls will be forwarded to you and you will feel like you are working on your own machine.  \n\n\nI wanted to share it here if anyone needs such capability, I also uploaded it to PyPl so pip will be able to install it, here's the project's github page: [https://github.com/AhmedAhmedEG/PyWinRD](https://github.com/AhmedAhmedEG/PyWinRD)", "score": 4}, {"text": "iommi - your first pick for a Django power chord. ", "score": 36}, {"text": "Can you break my Flask authentication system?.  I recently created a Flask authentication system that focuses on security. As a challenge, I invite you to try and find vulnerabilities in my system.\n\nThe repository contains a comprehensive README.md that explains the system's design and implementation. I believe that it can be a great exercise for developers who are interested in security and want to test their skills.\n\nYou can access the repository at [**https://github.com/IdanHajbeko/Secure-Flask-Auth**](https://github.com/IdanHajbeko/Secure-Flask-Auth).\n\nPlease feel free to fork the repository, test the system, and share your feedback. I am open to any suggestions, comments, or contributions that can help me improve this project.\n\nLet's see if you can break my Flask authentication system!", "score": 17}, {"text": "Overhead of Python Asyncio tasks. ", "score": 8}, {"text": "Released python module for imports modules in parent directories.. I had a difficulties when importing modules in parent directory. syspend module is one of the solution.\n\n[https://pypi.org/project/syspend/](https://pypi.org/project/syspend/)\n\nIn the case, [sample.py](https://sample.py) want to import mypackage, but it locates in parent directory. syspend module searches SYSPEND\\_ROOT recursively, and calls sys.path.append. Doing so, python interpreter can find mypackage module from [sample.py](https://sample.py).\n\n&amp;#x200B;\n\n* project\n   * mypackage.py\n   * samples\n      * sample.py\n   * SYSPEND\\_ROOT &lt;------- make this file by your self. empty file is ok.\n\n&amp;#x200B;\n\nIn [sample.py](https://sample.py), you just write like this:\n\n    import syspend\n    import mypackage\n    \n    if __name__ == '__main__':\n        mypackage.hello()", "score": 0}, {"text": "Pandas 2.0 is coming soon. Here is what's new.. ", "score": 14}, {"text": "qStore - Youtube as file storage. Okay, first and foremost, I want to say that I got inspired by GitHub: DvorakDwarf's [Infinite-Storage-Glitch](https://github.com/DvorakDwarf/Infinite-Storage-Glitch). So I decided to make my own proof of concept version in python3 instead of rust. I also wanted to use steganography but youtube's compression killed any and all hope I had. I have tried LSB, RGB, DCT, and Spacial Domain steganography and ALL work normally on their own...but all have failed when I upload the video to youtube and then download it.\n\nSo I decided to be a little clever and use QR codes. I modify one of many frames in the video with a QR code, and then re make the video and then it's ready to upload. One may wonder, \"well if it's in the QR code then the data can be easily obtained.\" Yes and No. Yes in terms of it's indeed a normal QR code and works how you'd expect it to work, and no in terms of the file data is encrypted using GCMlib (AES-GCM. KDF Argon2id) before being turned into the QR code. One can use any encryption method they want but I use GCMlib. (use at your own risk obviously).\n\n&amp;#x200B;\n\n[qStore](https://github.com/therealOri/qStore) also has its own database to keep track of what videos are what and the keys used to encrypt the file that is in the QR code. This database can also be locked and unlocked. (Like bitwarden). Just give it a key that was generated and then it's up to you on how you store it and keep it safe. (You can also use your own way of encrypting files if you wish, my methods are use at your own risk obviously.) You can add, remove, and view entries/records as well.\n\nThere's nothing really more to say about it as this project is still being worked on and I still really hope that eventually I can use actual steganography to embed a file into the videos. But for now, just QR codes.\n\nIf you or anyone you know would like to help out or even try it out/use my project then the link is below. &lt;3\n\nLink to github repo: [https://github.com/therealOri/qStore](https://github.com/therealOri/qStore)  \n\n\n  \n\n\n[qStore main menu](https://preview.redd.it/gqi2fnz01rma1.png?width=851&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=aa637f2bbf49ea9a040cd6ea0be48a808ed6028d)", "score": 6}, {"text": "Training Transformer Networks in Scikit-Learn?!. Have you ever wanted to use handy scikit-learn functionalities with your neural networks, but couldn\u2019t because TensorFlow models are not compatible with the scikit-learn API?\n\nI\u2019m excited to introduce one-line wrappers for TensorFlow/Keras models that enable you to use TensorFlow models within scikit-learn workflows with features like Pipeline, GridSearch, and more.\n\n&amp;#x200B;\n\n[Swap in one line of code to use keras\\/TF models with scikit-learn.](https://preview.redd.it/g5ssnz1f6rma1.png?width=960&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=206be211c08985c0693929c445f3c274234bd58d)\n\nTransformers are extremely popular for modeling text nowadays with GPT3, ChatGPT, Bard, PaLM, FLAN excelling for conversational AI and other Transformers like T5 &amp; BERT excelling for text classification. Scikit-learn offers a broadly useful suite of features for classifier models, but these are hard to use with Transformers. However not if you use these wrappers we developed, which only require changing one line of code to make your existing Tensorflow/Keras model compatible with scikit-learn\u2019s rich ecosystem!\n\nAll you have to do is swap `keras.Model` \u2192 `KerasWrapperModel`, or `keras.Sequential` \u2192 `KerasSequentialWrapper`. The wrapper objects have all the same methods as their keras counterparts, plus you can use them with tons of awesome scikit-learn methods.\n\nYou can find a demo jupyter notebook and read more about the wrappers here: [https://cleanlab.ai/blog/transformer-sklearn/](https://cleanlab.ai/blog/transformer-sklearn/)", "score": 5}, {"text": "Python's Mutable vs Immutable Types: What's the Difference? \u2013 Real Python. ", "score": 13}, {"text": "Rayon in Rust vs Python Process and Thread Pools. Parallel data processing.. ", "score": 3}, {"text": "I made a Finance Database with over 300.000 tickers to make Investment Decisions easier. It has been well over 2 years since I first introduced the database to this community, see [here](https://github.com/JerBouma/FinanceDatabase), and since then a lot changed so I felt like it is worth sharing about my package yet again and honestly, also to ask for a little bit of help.\n\nSo, within the investment universe there exists tens of thousands of companies (and even more when you include all exchanges). Identifying all of them and understanding in detail where they fit in the world is tough up to a point that it either requires you to pay a hefty fee to obtain this type of categorisation or do a massive amount of manual research. I found it a bit strange that this information was not publicly available while it is quite crucial for investment research. Therefore I got to work.\n\n**Insert the** [**FinanceDatabase**](https://github.com/JerBouma/FinanceDatabase)**.** This is a database of over 300.000 symbols (155k+ companies, 36k+ ETFs, 57k+ Funds, 3k+ Cryptocurrencies and more) that is fully categorised per country, industry, sector, category and more. It includes a package, written in Python and installable with \\`pip install financedatabase\\`, that gives access to the data with ease. You can obtain the entire dataset per asset class, search through it and filter based on specific options. Have a look at [this Notebook](https://github.com/JerBouma/FinanceDatabase/blob/main/examples.ipynb) to have an idea what it is offering.\n\nA simple example of what it does in the following:\n\n    import financedatabase as fd\n    \n    # Initialize the Equities database\n    equities = fd.Equities()\n    \n    # Obtain all data available excluding international exchanges\n    equities.select()\n\nWhich returns the following DataFrame: https://preview.redd.it/5gmiej7pbjma1.png?width=1516&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=faa84ca0e91107530f9845a5313ff79adc54ba6a\n\nBy default it hides non-US exchanges (since the ticker symbols work for most other programs) but that can be turned off with **equities.select(exclude\\_exchanges=False)** which returns 155.000 rows.\n\nThe database explicitly does not store up to date fundamental data. It tries to be as timeless as possible so that it doesn't become outdated fast. Because there are a variety of other ways, like FinancialModelingPrep, yFinance etc, to get this data there is no use in including this in the database.\n\nI've improved this database not only by increasing the amount of symbols (from 180k to 300k) but also:\n\n* Approximated the The Global Industry Classification Standard (GICS\u00ae), a standard used for sectors and industries everywhere. Note that this was approximated and therefore no actual data is collected. Furthermore, not all categories are included.\n* Updated and removed tickers that either no longer exist or had outdated information.\n* Made the package itself object orientated making data collecting and searching much more efficient and logical. (shoutout to [Colin Delahunty](https://github.com/colin99d) for the help here too)\n* The database initially featured thousands of JSON files. At the time it made sense also given my rather novice background in programming. However, a much more efficient (and manageable way) is to work with CSV files. So instead, one CSV file per asset class.\n* Due to using CSV files, it becomes **really** easy to update accordingly.\n* To make loading data itself still quick, it automatically compresses the data so that loading in data is not slowed down by using a format that is more easy to update.\n* Updated the README, Contributing Guidelines and overal documentation.\n\nSo being an open source project and trying to maintain such a database is tough to do alone. While I strongly believe the database can stay relevant for a long period due to the fact that the majority of companies do not suddenly stop existing, some maintenance is needed. Therefore, with this post I would like to not only invite you to explore the database but also to see if you can improve it along the way. Please visit the [CONTRIBUTING GUIDELINES](https://github.com/JerBouma/FinanceDatabase/blob/main/CONTRIBUTING.md) that explains in detail how you can contribute. Just pointing out wrong or missing information is already very beneficial!\n\nHope this database is still just as useful as it was two years ago!", "score": 424}, {"text": "Hosting --- simple python sit, PySimpleGUIWeb. Can anyone recommend give ideas on where I can get some simple cheap hosting a single website built inPySimpleGUIWeb and SQLlite3 DB---  I tried all the usual suspects Bluehost said they don't support SQL Lite and amazingly Hostinger posting articles tell me they don't support Python ?", "score": 1}, {"text": "Distributed Tracing guide. If you're looking to learn more about distributed tracing, check out this [guide.](https://gethelios.dev/distributed-tracing/)\n\n&amp;#x200B;\n\nhttps://preview.redd.it/gqq8mi5jaqma1.png?width=2200&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=051e9e0c5ef03bf5bd28829652e6091a7981491e", "score": 5}, {"text": "How can I deploy a full Tkinter app with database included?. How to deploy a full desktop app with database ready to install on any pc?", "score": 50}, {"text": "Stlite - Streamlit running entirely in WebAssembly (using Pyodide). ", "score": 17}, {"text": "Overhead of Python Asyncio tasks. ", "score": 75}, {"text": "RustPython. I first read about [RustPython](https://github.com/RustPython/RustPython) today and found [this discussion](https://www.reddit.com/r/Python/comments/iirja9/rustpython/?utm_source=share&amp;utm_medium=web2x&amp;context=3) that seems very interesting and still pertinent to the topic. Here's my take on it:\n\nEven though, as mentioned in the original thread, Rust is not a magical solution for anything, I think the language's features that make it less prone to bugs (mainly memory safety, AFAIK) could speed up improvements to Python. This could happen directly, or indirectly by simplifying contributions to the interpreter.\n\nSince the original discussion, the Linux kernel has started taking contributions in Rust. It'll probably be a very long time before the majority of the kernel is in Rust; if it is ever fully converted that will definitively take much longer. But this movement gives Rust a strong vote of credibility, and IMO a confident step in establishing Rust as the successor of C as de facto system language of the day (again, a confident *first* step).\n\nConnecting to the point above about Rust succeeding C, the Rust community seems a lot more prolific than C's while both C and C++ [were reported](https://www.statista.com/statistics/793628/worldwide-developer-survey-most-used-languages/) as being used much more than Rust in 2022. I believe Rust has the qualities to dominate many of the areas C dominates today, but that trend has definitely not materialized yet. If there is indeed a trend of Rust growing more, and if this trend keeps up, an interpreter in Rust could eventually source from a larger pool of developers.\n\nLastly, I think the Rust and Python communities could mingle (e.g. over cherishing a good developer experience) and contribute much to each other in a way that doesn't happen with Python and C where there seems to be a wall imposing that Python is for flexibility and C for performance. This last point seems to me the most important/fruitful, but is also most subjective and sensible to my own biases.\n\nSo I'm curious about the community's feelings on this topic in general, but would also like to suggest the question: How important do you think it would be to have a mature Python interpreter written in Rust 10 years from now?", "score": 38}, {"text": "Company formed around Pydantic. ", "score": 177}, {"text": "If you had to develop a game in Python, what engine and tools would you use?. Why? Do you think there is one engine that is better, or more appropriate?", "score": 158}, {"text": "I used OpenAI's GPT model to create an SMS bot that has its own personality.. First of all, I know everyone is on the craze of hopping on the OpenAI API bandwagon since they opened up their GPT models on it on the 3rd of March this year. But I've been putting a good bit of work into making this look all pretty and figured I might as well show it off to get some feedback on how to streamline any of the processes.\n\n[Here is the link to the GitHub project](https://github.com/Mariner10/TARS.git)\n\n&amp;#x200B;\n\nMost of the in-depth explanation is in the readme, but I'll summarize here.\n\nSMS numbers can send to emails, and emails can send to SMS numbers by appending a carrier's address at the end, so by making an email checker with IMAP I can read new emails from an SMS number, and then send the info to openAI, who will take the personality customization into account when generating a response and will then text back.\n\nIn the GitHub I also toyed around with speech synthesis, but nothing is really complete there yet because I dont really have a use for it. But overall the `AI_SMS.py` file can be run in the background of a raspberry pi or similar device and act as a new tool on your device. Granted you'll need API access from openAI but it isn't that difficult to sign up for.\n\nThe personality settings that are put into the `constants.py` file are for a robot known as TARS, who is kind of a self-centered douche. But overall really funny and interesting to talk to. (Yes it was named after *Interstellar*). I actually plan on integrating this into a physical robot at some point and giving various sensors so that the AI can respond according to it's environment.", "score": 0}, {"text": "Using LLMs in a Streaming Context in Python. I've been playing around with different real-time/streaming use cases in Python and I got interested in where LLMs could be useful to analyze data in real-time. It is wild how much easier it has gotten to use models with Hugging Face. I wrote this notebook to share something I recently made. It is a real-time pipeline to analyze financial news in real-time ([https://colab.research.google.com/drive/1TtLcvX4Xw4vDMVUOy5mOyJmMr7AqOrG4?usp=sharing](https://colab.research.google.com/drive/1TtLcvX4Xw4vDMVUOy5mOyJmMr7AqOrG4?usp=sharing)). \n\n&amp;#x200B;\n\nDoes anyone have some interesting ideas for using LLMs in a streaming context?", "score": 3}, {"text": "smb library. Is there any easy way to download smbprotocol zip file directly?\n\nI know pip command allows installation but I am looking a straight way to download it.\n\npip portal has a download section but that gives set up only which is not relevant.\n\n\nSomething like java allows to download JAR file directly.", "score": 0}, {"text": "Thursday Daily Thread: Python Careers, Courses, and Furthering Education!. Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!\n\n**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**", "score": 2}, {"text": "Using Python to Cast Fullscreen Web Browser to TV. Trying to get a script set that will always cast to a specific device, a web browser at full screen dark mode.\n\nThink using selenium might be the best route.\n\nAny tips? Does this sound possible?", "score": 11}, {"text": "Everything you need to know about merging dataframes. ", "score": 1}, {"text": "A Programming game where you use Python to automate all kinds of machines, robots, drones and more and solve exciting bite-sized coding challenges (developer post). I had the pleasure of presenting JOY OF PROGRAMMING here on r/python before and it was met with an overwhelmingly positive reception and a lot of valuable feedback. Thank you!  In case you missed it, the game is all about practicing and applying your Python skills to challenging tasks in realistic, physically simulated 3D environments. It covers a wide variety of topics, from basic algo / ds, oop, GUI programming to control theory, robotics, image processing, machine learning, genetic algorithms, and more. Development is well underway and I'm aiming for a release in Q4 this year.\n\nToday I'd like to get your thoughts on the importance of debugging! Obviously, I already spent an unreasonable amount of time solving the problem, before talking to stakeholders :). So I did create a custom Python debugger (using sys.settrace) and hooked it up to my in-game GUI (based on Codemirror). Now you can set breakpoints, step through the code and inspect variables like you are used to - and the game / simulation steps along in sync (mostly).\n\nIf you are interested in the game, you can find a lot more information about this and all other features and an up to date devlog on the Steam page:\n\n[https://store.steampowered.com/app/2216770/JOY\\_OF\\_PROGRAMMING\\_\\_Software\\_Engineering\\_Simulator](https://store.steampowered.com/app/2216770/JOY_OF_PROGRAMMING__Software_Engineering_Simulator)\n\nI\u2019m happy to answer any questions or to hear your feedback and ideas.", "score": 698}, {"text": "Data validation in Python: a look into Pandera and Great Expectations. ", "score": 20}, {"text": "Documentation for COM support in pywin32. I'm looking for good documentation of python's WinAPI COM support. \n\nThe most conscise documentation I can find is a chapter in Mark Hammond's \"Python Programming On Win32\". However, it was published in 2000 and AFAIK never updated since.\n\nThe online documentation is quite brief and as dated (e.g. https://mhammond.github.io/pywin32/html/com/win32com/HTML/QuickStartClientCom.html).\n\nIs there anything... better? Fresher?", "score": 11}, {"text": "beartype: It has documentation now. It only took two years, my last hair follicle, precious sanity points (SPs), and working with Sphinx. Don't be like @leycec. Go hard on documentation early.. ", "score": 125}, {"text": "Processing RAW (ARW) file. Hi. I'm trying to process Sony ARW file with my custom dcp file. So I found rawpy library which does almost ok job, but it seems it is missing an ability to use a custom dcp file so colors in RGB images are bad. Does anybody know any way to programmatically process RAW files? RawTherapee does its job well as an app, but it seems there are no python bindings. Going to process thousands of images in AWS Lambda. Thanks", "score": 4}, {"text": "Using Python with the ChatGPT API. I've been playing with ChatGPT API, and wanted to post this easy to get started using Python with the API.  It goes through the basic setup and also the code and playing around with different prompts.\n\n[https://medium.com/@msgold/using-the-chatgpt-api-with-python-c56857e0e153](https://medium.com/@msgold/using-the-chatgpt-api-with-python-c56857e0e153)", "score": 14}, {"text": "Django REST Framework: Beginner's Guide. ", "score": 3}, {"text": "What are some useful standard libraries that you wish you had known earlier?. I am fairly new to to python and just discovered enum and more recently, pickle. They were perfect for this small program I was building and it seems python has something perfect for almost every scenario. What are some other useful standard libs or methods within, that would be good for a beginner to know about?", "score": 231}, {"text": "Textual widget gallery. ", "score": 228}, {"text": "How to de-duplicate a list in Python. ", "score": 0}, {"text": "I made a program to find and delete similar or identical images in Windows. Many people (me included) usually take many photos and then dump them on the PC for backup. Or even save them two or three times because we don't remember if we already have them.\n\nWe end up with our folders packed with similar or even duplicates of images all over the place.\n\nI made [SimilPhoto](https://github.com/MarceAriel99/simil-photo) to solve this.\n\nI'm a student, and this is my first time making a full Python program. If you encounter any errors, please let me know.\n\nI would be grateful if you have any suggestions or ideas on how to improve my code, as it is one of the first times I have designed around the MVP pattern, work with CNN pre-trained models, threads, etc.\n\nIt currently only works on Windows.\n\nhttps://preview.redd.it/2gem8w7etbma1.png?width=1576&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=75873c7068068495a189dd1d29e6563c084a2515\n\nhttps://preview.redd.it/c9axco27fdma1.png?width=1572&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=0066bbeadf936436e9c0a09eb60f35e5a256126b", "score": 47}, {"text": "Do you find it hard understanding other people's code and logic?. Or is it just me? If it's just me, what can I do to advance in that skill?", "score": 37}, {"text": "Building a ChatGPT-based AI Assistant with Python using OpenAI APIs. ", "score": 0}, {"text": "Why my python shell is restarted every time I\u2019m calling this recursive function. Python code I used and please share good and easy to grok resources of recursion in python. mucho gusto. import sys\n\n\ndef isprime(i,n):\n    if n%i==0:\n        print(\"Yes\")\n        return False\n    if i+1 == n:\n        print(\"True\")\n        return True\n        \n    isprime(i+1,n)\n\n#setting the recursion limit to 10**7\nsys.setrecursionlimit(10**7)\n\n#calling the recursive function for n = 12347\n#when I pass n &lt; 5000 the shell is automatically restarted why\nisprime(2,12347) # output is nothing and sometime it pops None why", "score": 0}, {"text": "If you had to pick a library from another language (Rust, JS, etc.) that isn\u2019t currently available in Python and have it instantly converted into Python for you to use, what would it be?. ", "score": 329}, {"text": "Python is too good for me. Ive discovered that I genuinely find python to be horrible to program with. Python is great, it handles so much, its so straightforward and easy to use, its so unbelievably versatile. And that's exactly why I cant stand it. Its too good.\n\nI find it so hard to deal with how laid back the whole thing is. I get scared Ill do something bad and the compiler just wont warn me. It will fight teeth and nails to run that code and it will succeed, a true feat of engineering and language design. And I hate it. I cant stand not knowing what my variable has, I cant stand not knowing how my data is being handled, it freaks me out how much control is taken away from me in favor of convenience. \n\nI know this is a very weird thing to say, but I wanted to know if anyone else has felt like this? I think python is fantastic, but its not for me. Has anyone else thought about this?", "score": 0}, {"text": "looking for a way of reading big data files into python without having to read the same file every time I run to debug. looking for a way of reading big data files into python without having to read the same file every time I run to debug\n\n\n\nWorking with big economics datasets e.g. 10-50 gb. \n\nOnce I read the data, there are some data wrangling steps like value counts, combining some columns,loc functions, drop rows based on conditions, creating new volumes you get turn drift \n\nProblem is anytime I try to debug to see if it's working fine or if the new line of code I added functional; the data is read and consumes memory, time and delays my work. \n\nAssuming I've used all the possible libraries such as pandas, dask, modin, pyarrow,ray etc. \n\nWhat other things can I add to my code:\n\n1. To not have to read my data in every time I run the code while developing n debugging \n\n2. Save this csv virtually into my environment but without it taking away memory or cores thereby worsening my performance due to resource constraints \n\nOther economists I know use stata etc where once the file is loaded in, it stays there but it occupies memory for the time it's in use", "score": 12}, {"text": "Creating a cool website using Python. Hi Pythonistas, I am building my website using Python (FastAPI) with the Atri framework (I am one of the creators). It has always been a pain point for me to develop a beautiful UI with template engines in Python. Your feedback on the website and the Atri framework are welcome.\n\n&amp;#x200B;\n\nWebsite - https://atrilabs.com\n\n&amp;#x200B;\n\nhttps://preview.redd.it/bp9g09gyucma1.png?width=614&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=8007223b5c07a706404f8d85dabd7ce12b32cb70", "score": 14}, {"text": "Mypy 1.1.1 Released. ", "score": 32}, {"text": "Bounded Zipf generator ported from Go. [https://github.com/Yiling-J/bounded-zipf](https://github.com/Yiling-J/bounded-zipf)\n\nA simple bounded [Zipf](https://en.wikipedia.org/wiki/Zipf%27s_law) generator I used in [Theine](https://github.com/Yiling-J/theine) benchmarks, maybe useful if you need a Zipf random number generator.", "score": 2}, {"text": "GitHub - odashi/davinci-functions: Library to ask OpenAI GPT for generating objects on the Python runtime.. ", "score": 1}, {"text": "PyTekla - Python wrap around the Tekla Structures Open API. We just released (actually is a pre-release) this library to work with the [Tekla Structures ](https://www.tekla.com/us/products/tekla-structures) Open API. The idea is to facilitate the experience of the engineer/architect using this API.\n\nSo, any engineer, architect, developer is invited to collaborate.\n\nWith time we'll be adding more features and examples!\n\nTake a look here: \n\nhttps://efdiloreto.github.io/PyTekla/\n\nThanks!", "score": 3}, {"text": "\ud83d\udea8\ud83d\udea8 New Awesome Polars List Release \ud83d\udea8\ud83d\udea8 Check out the new additions to the list here !. ", "score": 0}, {"text": "Regretting using pipenv for packaging a library. I learned it the hard way that pipenv is not meant to be used for packaging libraries. It is meant to be used for applications only. Any application that is using the library I packaged with pipenv is facing issues with version conflicts.\n\nNow I am using just the setuptools for packaging the library. Anything that I should must know to avoid a mistake like this.", "score": 3}, {"text": "Wednesday Daily Thread: Beginner questions. New to Python and have questions? Use this thread to ask anything about Python, there are no bad questions!\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.", "score": 2}, {"text": "Call ChatGPT from any text box (Linux only). Hey folks, I thought I'd share a cool use of ibus. I was able to configure my system so that I can press `Super+Space` and make ChatGPT requests in any textbox in my system. Here's a quick [demo](https://www.youtube.com/watch?v=XMvlGEkLioI).\n\n&amp;#x200B;\n\nTo set this up:\n\n1. Install 'shin' via this fork: [https://github.com/apockill/shin/tree/feature/arbitrary-commands](https://github.com/apockill/shin)\n2. Install 'clai' via 'pipx install clai', or from the repo here: [https://github.com/apockill/clai](https://github.com/apockill/clai)\n3. Add the following to your '\\~/.profile':export SHIN\\_DEFAULT\\_COMMAND=\"clai\"export OPENAI\\_API\\_TOKEN={your token here}\n\nNext steps are to set it up so it (optionally) reads the contents of the current window and gives that as context to the LLM. Here's hoping we get open source chatbots soon so this sort of thing can run locally!", "score": 3}, {"text": "How to make your own PIP package?. https://medium.com/@vinay.dec26/how-to-build-your-own-python-pip-package-8a787c1a5445", "score": 0}, {"text": "tgbiofy came out of beta after an year - Show on your Telegram profile the song that you're listening to on Spotify.  [tgbiofy](https://github.com/elpideus/tgbiofy) is a very little project that I started more than an year ago which a lot of people enjoyed. It basically allows to show the Spotify song that you are listening to on your profile.  \nThe script replaces your first and last name with \"Listening to &lt;song name&gt;, your profile picture with the cover of the song, and your bio with the song's Spotify link.\n\nToday I released the version [1.0](https://github.com/elpideus/tgbiofy/releases/tag/1.0) and I really hope you will like it and find it useful.\n\n`Little tip: If you're on Linux it is really easy to set this script to silently run at startup so that it runs at every startup.`", "score": 1}, {"text": "Are your django webapps scalable?. ", "score": 0}, {"text": "Introducing ItsPrompt: Prompting - the fancy way. [a presentation of ItsPrompt](https://reddit.com/link/11kfpzw/video/xtf0n71iy6ma1/player)\n\nHello r/Python!\n\nAsking the user for input is important, right?\n\nSo, i created **ItsPrompt**, a python module that asks the user various kinds of prompts, like a list, checkboxes, or text input.\n\nIt helps you getting information from the user, easy and quick, without losing focus on your main project.\n\nIf you want to try it out, it's on PyPI: [https://pypi.org/project/ItsPrompt/](https://pypi.org/project/ItsPrompt/).\n\nThe source code is available on github: [https://github.com/TheItsProjects/ItsPrompt](https://github.com/TheItsProjects/ItsPrompt).\n\nYou've got ideas or want to help us make **ItsPrompt** better, don't hesitate to open an issue, create a PR or even join our [Discord](https://discord.gg/rP9Qke2jDs)!", "score": 103}, {"text": "Two different ways to write configuration files in Python. When working on a Python project, it's often necessary to use configuration files to store application settings and parameters. Writing configuration files in Python can provide a simple and organized way to manage these settings, allowing you to easily modify and update them as needed. In this article, we'll explore the basics of writing configuration files in Python \n\n[https://datamajor.net/how-to-write-configuration-files-in-python/](https://datamajor.net/how-to-write-configuration-files-in-python/)", "score": 31}, {"text": "ApiE: blueprint of a python/flask api for json objects. # [ApiE](https://github.com/eom-dev/apie)\n\nblueprint of a python/flask api for json data\n\n## usage\n1. import DataModel and design a child class\n2. create a basic flask application\n3. import ApiE and create an instance parameterized with the DataModel child class\n4. register the ApiE instance blueprint to the flask application\n5. launch\n\n## interface\n### DataModel\n* the DataModel object is an abstract class whose children represent the json objects being operated on by the api\n* each child of the DataModel object is sourced from an underlying json file\n* DataModel children must define the following:\n\t- static variables:\n\t\t* *dataPath*: the directory in which to store json files\n\t\t* *identifier*: human-readable prefix for data id fields\n\t\t* *defaultFields*: dictionary of default fields with default values\n\t\t* *requiredFields*: list of required fields\n\t\t* *optionalFields*: list of optional fields\n\t- member variables:\n\t\t* *purge*: boolean value signaling the deletion of underlying data files\n\t- methods:\n\t\t* *filter*: returns boolean values from arbitrary filters based on supplied parameters\n\t\t* *validate*: throws errors if supplied data does not match desired schema\n\t\t\t- call the super method to validate presence of fields and supply defaults\n\n### ApiE\n* the ApiE object maintains a list of active DataModel child objects and creates a blueprint of api for that DataModel child\n* instantiate ApiE objects with DataModel child classes\n#### api methods\n\n**GET**:\n\n* retrieves json objects\n* filters may be parameterized\n\n**POST**\n\n* creates new json objects from posted data\n* requires json data to be stored\n\n**PUT**\n\n* replaces data in existing json objects with posted data\n* requires recordId and data to replace current version\n\n**PATCH**\n\n* updates data in existing json objects from patched data\n* requires recordId and data to update current version\n\n**DELETE**\n\n* removes a json object\n* requires recordId as the sole parameter\n\nNote: *recordId* is derived from the *identifier* of the DataModel child class\n\n- if *identifier* = 'example' then *recordId* = 'example-xxxxxxxxxxxx' where x is a random, hexidecimal integer", "score": 3}, {"text": "PyQt signal tricks. **Callable pyqtBoundSignal**\n\nThe usual way to connect signal to slots in PyQt is using the connect method:\n\n    button.clicked.connect(self._on_click)\n\nBut actually we can also use it as a decorator with inline `def:`\n\n    @button.clicked.connect\n    def _():\n        clicked = True\n        print('clicked')\n\nWe can make it better by removing the `connect` keyword by adding a `__call__` method to `pyqtBoundSignal`\n\n    pyqtBoundSignal.__call__ = pyqtBoundSignal.connect\n\nNow we can write\n\n    @button.clicked\n    def _():\n        clicked = True\n        print('clicked')\n\n**Access child wiget using dict syntax**\n\nIt is a challenge in a complex widget hierarchy to connect a function to a signal in a deeply nested child widget\n\n    @widget.tab.tab1.left.frame.button.clicked\n    def _():\n        print('deeply nested widget')\n\nHow about adding a name to the button and then accessing it using python `dict` syntax. First we add a `__getitem__` method to `QObject`:\n\n    QObject.__getitem__ = lambda self, name: self.findChild((QWidget, ), name)\n\nThen give the button a name\n\n    button.setObjectName('submit_button')\n\nThen we can connect the signal with\n\n    @widget['submit_button'].clicked\n    def _():\n        print('submit clicked')\n\nThis will work even if we change the widget hierarchy as long as the object name does not change and the button is a child of widget.", "score": 15}, {"text": "A Deep Dive into the __new__() Method in Python: Customizing Object Creation 4 Examples. ", "score": 67}, {"text": "Python is COOL. First off I am a self taught. Grabbed some books took a couple of Coursera certs and the learning just kept piling on. My bread and butter is with pandas. I have create automated sql db's for crypto OHLCV data which led me to creating trading bots which I run two non stop. The journey was not always easy but always fun for me. \n\nRecently I started learning Ubuntu Server and MYSQL Server as I want to become a Data Engineer (yes getting hired is hard for me) . I finally now can set and configure all that I need currently and would like to show off my skills in my portfolio. If you have any **suggestions** on what I should build my ears are open. Any suggestions/help on interviewing for this title would be helpful. \n\nAlso side note if you trying to get an automated sql db for crypto data shoot a message and will send you the code. Cant link github since LINKDIN.", "score": 25}, {"text": "I made a library to help you migrate from one language to another.. [Example](https://i.redd.it/heikyuykn3ma1.gif)\n\nHello r/Python! I am the owner of sushi - a library to help you migrate from one language to another and wanted to announce 0.1! When I first posted about sushi, it had lots of bugs and was in a really early stage. After releasing 0.1 all bugs were fixed and suggestions from my last post were applied.\n\nSo what really is sushi? As the title says it's a library to help you migrate from one language to another. It can also be used if you can't find any library for your language. In future, I want to have it compatible with any language.\n\nIf it sounds interesting, you can help me continue growing this project by giving it a star and contributing to it. Thanks for all the support!\n\nI will also listen to all your suggestions and opinions about it, so if you have any - comment it!\n\nHere's the repo: [https://github.com/dev-sushi/sushi](https://github.com/dev-sushi/sushi)  \nExamples:  [https://github.com/dev-sushi/sushi/tree/main/examples](https://github.com/dev-sushi/sushi/tree/main/examples). I will add more when auto indexing will be ready (alternative to regex based indexing)  \n\nEdit: Wow! Thanks for the suggestions and stars on github! This made my day! Also I wanted to add a quick note that sushi is just my side project and I won\u2019t be able to work on it every day. If you have any issues or suggestions create a pull request or a issue on github!\n\nOnce again thanks for all of the support!", "score": 342}, {"text": "Runtime autocompletion with Reloadium. The most reliable way to autocomplete Python code?. Hey guys, just added this feature to reloadium [https://github.com/reloadware/reloadium](https://github.com/reloadware/reloadium)\n\n[Left hand side - during debugging with reloadium, right hand side, without debugging](https://i.redd.it/qf5q9wirjama1.gif)\n\nBecause of dynamic nature of Python PyCharm and other IDEs struggle to autocomplete some libraries\n\nReloadium uses runtime data to produce autocomplete suggestions instead, making it very reliable and resulting with the actual object fields and types.\n\nI'm very curious what you guys think about it!\n\nWould this be useful for daily development?", "score": 6}, {"text": "The first game automation script I have developed using python, opencv and pyautogui. I have started learning python through courses and developing game automation scripts 2 years ago, and I wanted to share some of these, and give back to the community, I hope it helps some of you.\n\nThe project is available on [github](https://github.com/Possessed-Player/GoodGameEmpireBot), and fully explained and documented on [dev.to](https://dev.to/pssdplayer/goodgame-empire-auto-attack-bot-5g3g)\n\nThere is also a short video for it on [youtube](https://youtu.be/hzsmYM8ikW0), if you would like to see it running.", "score": 0}, {"text": "pyllama - I just published a python library for LLaMA with Single GPU inference code. pyllama - I just published a python library for LLaMA with Single GPU inference code\n\npyllama is a hacked version of LLaMA based on original Facebook's implementation but more convenient to run in a Single consumer grade GPU.\n\nInstallation:\n\n    pip install pyllama\n\nURL: [https://github.com/juncongmoo/pyllama](https://github.com/juncongmoo/pyllama)", "score": 18}, {"text": "Introduction to Knowledge Distillation with Keras. ", "score": 0}, {"text": "What's a Python Namespace Package, and What's It For? \u2013 Real Python. ", "score": 1}, {"text": "Context manager that provides simple graceful shutdown interface for your asyncio tasks.. # aioshutdown\n\nContext manager that provides simple graceful shutdown interface for your asyncio tasks.\n\n## Installation\n\n    pip install -U aioshutdown\n\n## Usage\n\nJust specify the list of signals that you want to intercept using the `|` operator:\n\n    from aioshutdown import SIGTERM, SIGINT, SIGHUP\n    \n    \n    with SIGTERM | SIGHUP | SIGINT as loop:\n        ...\n\nThe context manager will return an instance of the current event loop. You can intercept signals directly inside your coroutines:\n\n    async def my_task(sleep: int):\n        try:\n            \"\"\" Main logic of your coroutine. \"\"\"\n        except asyncio.CancelledError as exc:\n            \"\"\" In this place you can gracefully complete the work. \"\"\"\n\nFull example:\n\n    import asyncio\n    from aioshutdown import SIGTERM, SIGINT, SIGHUP\n    import logging\n    \n    \n    logging.basicConfig(\n        level=logging.INFO,\n        format=\"%(asctime)s,%(msecs)d %(levelname)s: %(message)s\",\n        datefmt=\"%H:%M:%S\",\n    )\n    \n    async def my_task(sleep: int):\n        try:\n            while True:\n                logging.info(\"Sleep from task #%s\", sleep)\n                await asyncio.sleep(sleep)\n        except asyncio.CancelledError as exc:\n            # Received an exit signal. In this place we gracefully complete the work.\n            signal = exc.args[0] # NOTE: works in Python &gt;= 3.9 only: https://docs.python.org/3/library/asyncio-future.html?highlight=Changed%20in%20version%203.9:%20Added%20the%20msg%20parameter.#asyncio.Future.cancel\n            logging.warning(\"Received %s signal. Shutting down...\", signal.value)\n    \n    # Usage with `run_forever`\n    \n    with SIGTERM | SIGHUP | SIGINT as loop:\n        tasks = [loop.create_task(my_task(i)) for i in range(1, 10)]\n        loop.run_forever()\n    \n    # Usage with `run_until_complete`\n    \n    with SIGTERM | SIGHUP | SIGINT as loop:\n        tasks = [loop.create_task(my_task(i)) for i in range(1, 10)]\n        loop.run_until_complete(asyncio.gather(*results))\n\nOutput\n\n    23:04:05,798 INFO: Sleep from task #1\n    23:04:05,798 INFO: Sleep from task #2\n    23:04:06,799 INFO: Sleep from task #1\n    23:04:07,800 INFO: Sleep from task #2\n    23:04:07,800 INFO: Sleep from task #1\n    23:04:08,801 INFO: Sleep from task #1\n    ^C23:04:09,504 INFO: Received exit signal SIGINT...\n    23:04:09,504 INFO: Cancelling 2 outstanding tasks\n    23:04:09,504 WARNING: Received 2 signal. Shutting down...\n    23:04:09,504 WARNING: Received 2 signal. Shutting down...\n    23:04:09,504 INFO: Stopping event loop\n\nProject homepage: [https://github.com/aliev/aioshutdown](https://github.com/aliev/aioshutdown)", "score": 5}, {"text": "Beginner's Python Cheat Sheets. ", "score": 25}, {"text": "Getting Started with GitHub CLI. ", "score": 1}, {"text": "We tracked mentions of OpenAI, Bing, and Bard across social media to find out who's the most talked about in Silicon Valley. [Posts about OpenAI, Bing, and Bard in the San Francisco Bay Area and Silicon Valley](https://preview.redd.it/vks8y4r40cma1.png?width=1286&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=1e9e5a5bd15a494bc6e2d3f44eccf1244d1bc6b4)\n\nWe used social media data and [geolocation models](https://github.com/1712n/yachay-public/tree/master/conf_geotagging_model) to find posts about OpenAI, Bing, and Bard in the Silicon Valley and San Francisco Bay Area for the last two weeks to see which one received the most mentions.\n\nFirst, we filtered social media data with the keywords \"openai,\" \"bing,\" \"bard,\" and then we predicted coordinates for the social media posts by using our text-based geolocation models. After selecting texts which received a confidence score higher than 0.8, we plotted their coordinates as company logos on a leaflet map using Python and the folium library, restricting the map to the bounding box of the San Francisco Bay Area and Silicon Valley.\n\nWe analyzed over 300 social media posts and found that roughly 54.5% of the time, OpenAI was the most talked about. Bing made second place with around 27.2%, and then Bard came in last with 18.3%.\n\nOpenAI may be winning the AI race at the moment, but it's not the end yet. Let us know what other AI projects you're following, and we'll check them out.", "score": 0}, {"text": "Introducing Fluke, a Python package to help you transfer your data between various remote locations. Greetings to the Python community! Back in the summer I made a post here about [PRegEx](https://github.com/manoss96/pregex), an open source project I had made for fun, for which I received mostly positive feedback. This urged me to create [Fluke](https://github.com/manoss96/fluke), yet another open-source project, based on some issues I was having at work relating to transfering data between different cloud storage services. This project is by no means considered to be complete as I have tons of ideas regarding how it could be further expanded to tackle other issues as well. However, I think that it is now at a mature enough stage that it could help you speed up certain processes that may come up during your day-to-day work. \n\nYou can find the docs in here: [fluke.rtfd.io](https://fluke.rtfd.io/)\n\nAny feedback is welcome, and please don't hesitate to raise an issue on Github if you encounter any bugs!", "score": 48}, {"text": "How to setup Python, PyEnv &amp; Poetry on Windows. ", "score": 0}, {"text": "Tuesday Daily Thread: Advanced questions. Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.\n\n**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.", "score": 6}, {"text": "Perl with Python? Turned out quite natural: alerting to Slack with Swatchdog. For a bootstrapped business, you've got to keep aware of production problems as they happen.  \n\nBut: commercial solutions can be problematic, for instance a surge of logs - indicating a possible important problem that needs to be solved - pushes volume on to another tier. \n\nShould the \u201clog ransom\u201d be paid?\n\nNot necessarily - go old school and use Swatchdog:\n\nhttps://profitview.net/blog/simple-effective-system-alerts", "score": 8}, {"text": "From NumPy to Arrow: How Pandas 2.0 is Changing Data Processing for the Better. ", "score": 20}, {"text": "Monorepo for Data Science projects in Python. I've joined an organization that uses a monorepo for their code and Bazel to manage the monorepo.\n\nI come from the land of poetry, tox, miniconda, asdf, and the like.  I don't know Bazel at all.\n\nDoes anyone have advice or pointers to docs for how to think about Monorepo/Bazel when trying to support multiple python, ds projects in that repo?", "score": 3}, {"text": "streaming now: OpenAI's Codex to optimize code using python. Hello everyone,\n\nI will try my best today to get a little project of the ground.\n\nThe idea is to use openAI's Codex with python to optimise code in a PR.  \nTune in [https://www.twitch.tv/3lmoritz](https://www.twitch.tv/3lmoritz)  \n\n\nI'm using python, because it is simple and can be used almost anywhere.\n\nHope to see you there.", "score": 4}, {"text": "I made a pydantic token validation module! Check it out!. It is called \\`bootleg-jwt\\` and can be installed in [pip](https://pypi.org/project/bootleg-jwt/)). Source: [https://github.com/freyjagp/bootleg-jwt](https://github.com/freyjagp/bootleg-jwt)\n\n\nUsing pydantic, one can easily integrate this module with any web framework for quick and simple token validation. See the readme for basic usage.\n\n\n\n\n# bootleg-jwt &lt;!-- omit in toc --&gt;\n\n`bootleg-jwt` aims to mimic JSON Web Tokens in a simple, `pydantic` way.\n\nThis module provides two main functions:\n\n- [Generate a token](#generate-a-token)\n- [Validate a token](#validate-a-token)\n\nThese are designed to be very simple to use. See below:\n\n## Generate a token\n\n```python\nfrom bootleg_jwt import BootlegJWT, Payload, header, body\nfrom pydantic import BaseModel\nfrom os import environ              # An environment variable is required.\n\n\nSECRET = \"some-secret-key\"\n\n\nDURATION = 60 * 60                  # Token expires after this many seconds\n\n\nTYPE = \"Testing Token\"              # An arbitrary name\n\n\nenviron['SECRET'] = SECRET          # This module depends upon an environment\n                                    # variable `SECRET`. You may also set this\n                                    # secret in a `.env` file in your project's root,\n                                    # or by using `export SECRET=\"secret\"`\n\n\n\n## These two pydantic models are simple examples. They may have arbitrary names and data. They must only map to Token.body.user and Token.body.data\nclass UserData(BaseModel):\n    id: int\n    username: str\n\n\nclass BodyData(BaseModel):\n    info: str\n    value: bool\n\n\npayload_user = UserData(id=69,username=\"nice\")\npayload_body = BodyData(info=\"Some Information\", value=True)\n\n\npayload = Payload(\n    header=header(duration=DURATION,type=TYPE),\n    body=body(user=payload_user,data=payload_body)\n)\n\n\ngenerate = BootlegJWT(payload=payload)\ntoken = generate.TOKEN\nencoded = generate.ENCODED\njson = generate.JSON\nvalidate = generate.VALID\ndivider = \"\\n------------------------------\\n\"\n\n\n\nprint(token,divider,encoded,divider,json,divider,validate)\n```\n\n&lt;details&gt;\n&lt;summary&gt;Output (click to expand):&lt;/summary&gt;\n&lt;br&gt;\n\n```json\nheader=Header(type='Testing Token', duration=Duration(unit=Unit(type='time', name='seconds', shorthand='s'), value=3600), created=Timestamp(unit=Unit(type='time', name='seconds since epoch', shorthand='s+epoch'), value=1677382369), expires=Timestamp(unit=Unit(type='time', name='seconds since epoch', shorthand='s+epoch'), value=1677385969)) body=Body(user=UserData(id=69, username='nice'), data=BodyData(info='Some Information', value=True)) signature=Hash(value=b'e0b99c4eca2811bd9d164185219a283a4fddc2129ec0d2b3e5ba7b22596e4c7b8ac6d7b7c81812b50ace0a5b6d0be3ce5f977f753069d951bf15d13f179014df', algorithm='blake2b', keyed=True, salt=b'', person=b'')\n------------------------------\n b'eyJoZWFkZXIiOiB7InR5cGUiOiAiVGVzdGluZyBUb2tlbiIsICJkdXJhdGlvbiI6IHsidW5pdCI6IHsidHlwZSI6ICJ0aW1lIiwgIm5hbWUiOiAic2Vjb25kcyIsICJzaG9ydGhhbmQiOiAicyJ9LCAidmFsdWUiOiAzNjAwfSwgImNyZWF0ZWQiOiB7InVuaXQiOiB7InR5cGUiOiAidGltZSIsICJuYW1lIjogInNlY29uZHMgc2luY2UgZXBvY2giLCAic2hvcnRoYW5kIjogInMrZXBvY2gifSwgInZhbHVlIjogMTY3NzM4MjM2OX0sICJleHBpcmVzIjogeyJ1bml0IjogeyJ0eXBlIjogInRpbWUiLCAibmFtZSI6ICJzZWNvbmRzIHNpbmNlIGVwb2NoIiwgInNob3J0aGFuZCI6ICJzK2Vwb2NoIn0sICJ2YWx1ZSI6IDE2NzczODU5Njl9fSwgImJvZHkiOiB7InVzZXIiOiB7ImlkIjogNjksICJ1c2VybmFtZSI6ICJuaWNlIn0sICJkYXRhIjogeyJpbmZvIjogIlNvbWUgSW5mb3JtYXRpb24iLCAidmFsdWUiOiB0cnVlfX0sICJzaWduYXR1cmUiOiB7InZhbHVlIjogImUwYjk5YzRlY2EyODExYmQ5ZDE2NDE4NTIxOWEyODNhNGZkZGMyMTI5ZWMwZDJiM2U1YmE3YjIyNTk2ZTRjN2I4YWM2ZDdiN2M4MTgxMmI1MGFjZTBhNWI2ZDBiZTNjZTVmOTc3Zjc1MzA2OWQ5NTFiZjE1ZDEzZjE3OTAxNGRmIiwgImFsZ29yaXRobSI6ICJibGFrZTJiIiwgImtleWVkIjogdHJ1ZSwgInNhbHQiOiAiIiwgInBlcnNvbiI6ICIifX0='\n------------------------------\n {\n    \"header\": {\n        \"type\": \"Testing Token\",\n        \"duration\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds\",\n                \"shorthand\": \"s\"\n            },\n            \"value\": 3600\n        },\n        \"created\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds since epoch\",\n                \"shorthand\": \"s+epoch\"\n            },\n            \"value\": 1677382369\n        },\n        \"expires\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds since epoch\",\n                \"shorthand\": \"s+epoch\"\n            },\n            \"value\": 1677385969\n        }\n    },\n    \"body\": {\n        \"user\": {\n            \"id\": 69,\n            \"username\": \"nice\"\n        },\n        \"data\": {\n            \"info\": \"Some Information\",\n            \"value\": true\n        }\n    },\n    \"signature\": {\n        \"value\": \"e0b99c4eca2811bd9d164185219a283a4fddc2129ec0d2b3e5ba7b22596e4c7b8ac6d7b7c81812b50ace0a5b6d0be3ce5f977f753069d951bf15d13f179014df\",\n        \"algorithm\": \"blake2b\",\n        \"keyed\": true,\n        \"salt\": \"\",\n        \"person\": \"\"\n    }\n}\n------------------------------\n True\n```\n\n&lt;/details&gt;\n&lt;br&gt;\n\n## Validate a token\n\n```python\nfrom bootleg_jwt import BootlegJWT, Payload, header, body\nfrom pydantic import BaseModel\nfrom os import environ              # An environment variable is required.\n\n\nSECRET = \"some-secret-key\"\n\n\nDURATION = 60 * 60                  # Token expires after this many seconds\n\n\nTYPE = \"Testing Token\"              # An arbitrary name\n\n\nenviron['SECRET'] = SECRET          # This module depends upon an environment\n                                    # variable `SECRET`. You may also set this\n                                    # secret in a `.env` file in your project's root,\n                                    # or by using `export SECRET=\"secret\"`\n\n\n\n## These two pydantic models are simple examples. They may have arbitrary names and data. They must only map to Token.body.user and Token.body.data\nclass UserData(BaseModel):\n    id: int\n    username: str\n\n\nclass BodyData(BaseModel):\n    info: str\n    value: bool\n\n\npayload_user = UserData(id=69,username=\"nice\")\npayload_body = BodyData(info=\"Some Information\", value=True)\n\n\npayload = Payload(\n    header=header(duration=DURATION,type=TYPE),\n    body=body(user=payload_user,data=payload_body)\n)\n\n\ndivider = \"\\n------------------------------\\n\"\n\n\ndef generate(payload):\n    generate = BootlegJWT(payload=payload)\n    decoded = generate.DECODED\n    encoded = generate.ENCODED\n    json = generate.JSON\n    validate = generate.VALID\n    print(decoded,divider,encoded,divider,json,divider,validate)\n    return encoded\n\n\ndef validate_token(token):\n    validate_token = BootlegJWT(token=token)\n    v_decoded = validate_token.DECODED\n    v_json = validate_token.JSON\n    v_valid = validate_token.VALID\n    print(v_decoded,divider,v_json,divider,v_valid)\n\n\nvalidate_token(generate(payload))\n```\n\n&lt;details&gt;\n&lt;summary&gt;Output (click to expand):&lt;/summary&gt;\n&lt;br&gt;\n\n```json\nheader=Header(type='Testing Token', duration=Duration(unit=Unit(type='time', name='seconds', shorthand='s'), value=3600), created=Timestamp(unit=Unit(type='time', name='seconds since epoch', shorthand='s+epoch'), value=1677383225), expires=Timestamp(unit=Unit(type='time', name='seconds since epoch', shorthand='s+epoch'), value=1677386825)) body=Body(user=UserData(id=69, username='nice'), data=BodyData(info='Some Information', value=True)) signature=Hash(value=b'9a6a3fc5c866442ee886c1d20f44fe49da29be4e56fd6f40a1c3e23f672d801c0d787f9f239265477da1339fffc41754f16a0899f5955aa0ed7602693919071d', algorithm='blake2b', keyed=True, salt=b'', person=b'')\n------------------------------\n b'eyJoZWFkZXIiOiB7InR5cGUiOiAiVGVzdGluZyBUb2tlbiIsICJkdXJhdGlvbiI6IHsidW5pdCI6IHsidHlwZSI6ICJ0aW1lIiwgIm5hbWUiOiAic2Vjb25kcyIsICJzaG9ydGhhbmQiOiAicyJ9LCAidmFsdWUiOiAzNjAwfSwgImNyZWF0ZWQiOiB7InVuaXQiOiB7InR5cGUiOiAidGltZSIsICJuYW1lIjogInNlY29uZHMgc2luY2UgZXBvY2giLCAic2hvcnRoYW5kIjogInMrZXBvY2gifSwgInZhbHVlIjogMTY3NzM4MzIyNX0sICJleHBpcmVzIjogeyJ1bml0IjogeyJ0eXBlIjogInRpbWUiLCAibmFtZSI6ICJzZWNvbmRzIHNpbmNlIGVwb2NoIiwgInNob3J0aGFuZCI6ICJzK2Vwb2NoIn0sICJ2YWx1ZSI6IDE2NzczODY4MjV9fSwgImJvZHkiOiB7InVzZXIiOiB7ImlkIjogNjksICJ1c2VybmFtZSI6ICJuaWNlIn0sICJkYXRhIjogeyJpbmZvIjogIlNvbWUgSW5mb3JtYXRpb24iLCAidmFsdWUiOiB0cnVlfX0sICJzaWduYXR1cmUiOiB7InZhbHVlIjogIjlhNmEzZmM1Yzg2NjQ0MmVlODg2YzFkMjBmNDRmZTQ5ZGEyOWJlNGU1NmZkNmY0MGExYzNlMjNmNjcyZDgwMWMwZDc4N2Y5ZjIzOTI2NTQ3N2RhMTMzOWZmZmM0MTc1NGYxNmEwODk5ZjU5NTVhYTBlZDc2MDI2OTM5MTkwNzFkIiwgImFsZ29yaXRobSI6ICJibGFrZTJiIiwgImtleWVkIjogdHJ1ZSwgInNhbHQiOiAiIiwgInBlcnNvbiI6ICIifX0='\n------------------------------\n {\n    \"header\": {\n        \"type\": \"Testing Token\",\n        \"duration\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds\",\n                \"shorthand\": \"s\"\n            },\n            \"value\": 3600\n        },\n        \"created\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds since epoch\",\n                \"shorthand\": \"s+epoch\"\n            },\n            \"value\": 1677383225\n        },\n        \"expires\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds since epoch\",\n                \"shorthand\": \"s+epoch\"\n            },\n            \"value\": 1677386825\n        }\n    },\n    \"body\": {\n        \"user\": {\n            \"id\": 69,\n            \"username\": \"nice\"\n        },\n        \"data\": {\n            \"info\": \"Some Information\",\n            \"value\": true\n        }\n    },\n    \"signature\": {\n        \"value\": \"9a6a3fc5c866442ee886c1d20f44fe49da29be4e56fd6f40a1c3e23f672d801c0d787f9f239265477da1339fffc41754f16a0899f5955aa0ed7602693919071d\",\n        \"algorithm\": \"blake2b\",\n        \"keyed\": true,\n        \"salt\": \"\",\n        \"person\": \"\"\n    }\n}\n------------------------------\n True\nheader=Header(type='Testing Token', duration=Duration(unit=Unit(type='time', name='seconds', shorthand='s'), value=3600), created=Timestamp(unit=Unit(type='time', name='seconds since epoch', shorthand='s+epoch'), value=1677383225), expires=Timestamp(unit=Unit(type='time', name='seconds since epoch', shorthand='s+epoch'), value=1677386825)) body=Body(user={'id': 69, 'username': 'nice'}, data={'info': 'Some Information', 'value': True}) signature=Hash(value=b'9a6a3fc5c866442ee886c1d20f44fe49da29be4e56fd6f40a1c3e23f672d801c0d787f9f239265477da1339fffc41754f16a0899f5955aa0ed7602693919071d', algorithm='blake2b', keyed=True, salt=b'', person=b'')\n------------------------------\n {\n    \"header\": {\n        \"type\": \"Testing Token\",\n        \"duration\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds\",\n                \"shorthand\": \"s\"\n            },\n            \"value\": 3600\n        },\n        \"created\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds since epoch\",\n                \"shorthand\": \"s+epoch\"\n            },\n            \"value\": 1677383225\n        },\n        \"expires\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds since epoch\",\n                \"shorthand\": \"s+epoch\"\n            },\n            \"value\": 1677386825\n        }\n    },\n    \"body\": {\n        \"user\": {\n            \"id\": 69,\n            \"username\": \"nice\"\n        },\n        \"data\": {\n            \"info\": \"Some Information\",\n            \"value\": true\n        }\n    },\n    \"signature\": {\n        \"value\": \"9a6a3fc5c866442ee886c1d20f44fe49da29be4e56fd6f40a1c3e23f672d801c0d787f9f239265477da1339fffc41754f16a0899f5955aa0ed7602693919071d\",\n        \"algorithm\": \"blake2b\",\n        \"keyed\": true,\n        \"salt\": \"\",\n        \"person\": \"\"\n    }\n}\n------------------------------\n True\n\n\n```", "score": 3}, {"text": "Streamlit App-A-Thon Contest \ud83c\udfc6. \ud83d\udea8 We're back with the Streamlit App-A-Thon Contest! \ud83d\udea8\n\nBuild data apps and stand a chance of winning some cool Streamlit swag! \ud83c\udf81\n\nIf you have any questions, please post them on r/StreamlitOfficial.\n\nFind more info on our [forum post](https://discuss.streamlit.io/t/streamlit-app-a-thon-contest/38815).\n\nHappy Streamlit-ing! \ud83c\udf88\n\nhttps://preview.redd.it/lkiu3g8786ma1.png?width=1200&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=2063b4b7839ff0630f9ef5a7751061505c2ffb11", "score": 5}, {"text": "Best place to find jobs as a freelancer. Greetings,  \n\n\nWanted to ask if anyone knows a place/website to find freelance jobs. Very much appreciated.", "score": 0}, {"text": "txtai 5.4 released: prompt templates, conversational task chaining and HF Hub. ", "score": 3}, {"text": "The Python on Microcontrollers Newsletter, a free weekly, no spam ever.  \n\nhttps://preview.redd.it/jrm0x547s4ma1.png?width=518&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=0b22c7b112d1add2a4bed7de906feac2cb6d7ef8\n\nWith the Python on Microcontrollers newsletter, you get all the latest information on Python running on hardware in one place!\n\nThe Python on Microcontrollers newsletter is the place for the latest news. It arrives Tuesday morning with all the week\u2019s happenings.\n\n10,354 subscribers - the largest Python on hardware newsletter out there.\n\n**Catch all the\u00a0weekly news on** [**Python for Microcontrollers**](https://www.adafruitdaily.com/)\u00a0with\u00a0[adafruitdaily.com](https://www.adafruitdaily.com/).\n\n&gt;This\u00a0*ad-free, spam-free*\u00a0weekly email is filled with\u00a0**CircuitPython**,\u00a0**MicroPython**, and\u00a0**Python**\u00a0information that you may have missed, all in one place!  \nYou get a summary of all the software, events, projects, and the latest hardware worldwide once a week, no ads!\n\nEnsure you catch the weekly Python on Hardware roundup\u2013 you can cancel anytime\u00a0**\u2013** [**try our spam-free newsletter today**](https://www.adafruitdaily.com/)**!**\n\n[**https://www.adafruitdaily.com/**](https://www.adafruitdaily.com/)", "score": 7}, {"text": "I just published my new book \"A Hands-On Introduction to Essential Python Libraries and Frameworks (With Code Samples)\". **Essential Python libraries and frameworks that every aspiring data scientist, ML engineer, and Python developer should know.** \n\n&amp;#x200B;\n\n**You can grab it at Leanpub for free:** [A Hands-On Introduction to Essential Python Libraries and Frameworks (With Code Samples)](https://leanpub.com/essential_python_libraries_and_frameworks)\n\n&amp;#x200B;", "score": 407}, {"text": "Tipe - typed pipe. Hi, everyone!\n\nSome time ago I saw how hyped JS community was about [pipeline operator proposal](https://github.com/tc39/proposal-pipeline-operator). So I tried to make something similar in python. There is how `tipe` module was created. Check it out if you are interested: [https://github.com/mishankov/tipe](https://github.com/mishankov/tipe)", "score": 2}, {"text": "I create a library that converts protocols into Pydantic models. \\[protobuf-to-pydantic\\]([https://github.com/so1n/protobuf\\_to\\_pydantic](https://github.com/so1n/protobuf_to_pydantic)) provides a functionality to convert Google Protocol Buffers to Pydantic models through parsing protocol file or protoc plugins. It supports the use of protoc-gen-validate to add optional parameters to Pydantic model fields, such as default values and validation rules. The generated Pydantic model code can be used directly in Python projects.", "score": 6}, {"text": "1 WEEK TO GO: Register for Python Web Conf Today!. https://preview.redd.it/0gopi5rds7ma1.png?width=1460&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=b35071db214286d9cab9b6ba6e6298039931576c\n\nJoin Pythonistas from around the world for the 5th annual Python Web Conference (March 13-17). Tickets include 5 days, 65+ live talks, expert-led tutorials, social events, an exclusive pass to all conference recordings for 90 days, cool swag and more. Don\u2019t wait, buy your ticket today!\n\nThat's not all, we're offering an exclusive 15% discount code for past Python Web Conference attendees! To register,  use the discount code \"PastPWCAttendee\u201d at checkout or check out this link \ud83d\udc47\n\n[https://ti.to/six-feet-up/python-web-conf-2023/discount/PastPWCAttendee](https://ti.to/six-feet-up/python-web-conf-2023/discount/PastPWCAttendee)\n\n* Full Schedule: [https://2023.pythonwebconf.com/schedule](https://2023.pythonwebconf.com/schedule)\n* Register today: [https://ti.to/six-feet-up/python-web-conf-2023](https://ti.to/six-feet-up/python-web-conf-2023)\n\nSee you on March 13!", "score": 1}, {"text": "Pynecone or Anvil works?. Which is the best in terms of features and ease of use?", "score": 2}, {"text": "mk is a python based tool for helping developer contribute to other projects. As few project maintainers have time create and polish their CONTRIBUTING documentation, few years ago I wrote a small [mk](https://github.com/pycontribs/mk) tool that detects which testing tools/scripts are used by the current repository and expose them as simple commands.\n\nBasically this should help anyone discover which testing commands they can run without having to dig the documentation or the forums in some cases. One should no longer remember that the project uses make, tox, or a bunch of shells scripts.\n\nPlease take a look at it and let me know what you think. If you spot other popular build tools that are not supported it will be extremely easy to add support for them as they can be implemented in 10-20 lines of python.\n\nIf you find it useful, don't forget to star it on github, maybe even watch it for new releases.", "score": 4}, {"text": "GitHub - fellerts/procal: Simple Qt-based programming calculator. ", "score": 6}, {"text": "What is the furthest extent one can go in python?. I\u2019m pretty much a beginner buying courses and learning more and more every day. As I go I\u2019m learning that there\u2019s a huge void of know long how much I don\u2019t know about what can be done with python is it\u2019s most advanced variations. So I wanted to know how far could one be able to program and create with Python?", "score": 0}, {"text": "Python guilds to pandas and numpy. Hello all,\n\n&amp;#x200B;\n\nI'm starting my statistics class with beginner python knowledge. Honestly I preferred java scripting and its layout and became to used to Java so now Python is confusing again. I need a good run down tutorial for numpy and pandas where i can learn to build and manipulate datasets in the form of graphs and charts. Thanks", "score": 0}, {"text": "Back-end dev: Math skills required or not really?. I tweaked Python for about two weeks before two programmers have told me I'd eventually need serious math like Fourier Transformations in order to get hired so I dropped it. But after that I've also been told that I can do back-end dev just fine with some logic and no math.\n\nSo which is it?", "score": 107}, {"text": "(rant) Can't find a library that is good for interactive animation / small game and is sharable via static web page.. I have been waiting for years (more than 5 years now) for a library like p5.js, that helps me create small animations those are interactive and which can be shared through let's say a GitHub page.\nThroughout these years,\n* WebAssembly became a reality\n* Python became faster\n* Solid game engines like Godot and Arcade became popular.\n* Pyodide became stable and started supporting many many libraries.\n* PyScript turned into reality and gave lots of hopes.\n\nBut still months after release of PyScript, the closest thing I have for my use is arcade-web, which is broken was last committed 2 months ago. Nothing else even comes close.\n\nAny thoughts / suggestions? (Other than learning JavaScript)", "score": 7}, {"text": "Do you plan to develop games using Python?. Hi all, I\u2019d like to know:   \n\n\n**Are there any Python Devs who know the language well** **(have experience in coding) and who would like to try Video Game Development for the first time?**   \n\n\nWe\u2019re currently developing a new web platform for creating and sharing indie games. It uses python. If you fit the description and are curious about Game Dev what would be the blocking point/ the difficult point in your opinion, that prevented you from giving the Game Creation a shot previously?   \nIf you don\u2019t care about Game Dev in Python you can also tell me why. We\u2019re curious to know about you.  \n\n\nhttps://preview.redd.it/r9d7yah045ma1.png?width=955&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=f96477da2282b1717f462158007ca136846b441d", "score": 0}, {"text": "Castro - A DSL created to aid devs in scripting and automation in windows, made in python. [https://github.com/cmspeedrunner/Castro](https://github.com/cmspeedrunner/Castro)\n\nonly 1 external library needed", "score": 1}, {"text": "Constant / Immutable parameters. A lot of languages support constant function parameters, to tell the user that the parameter will either be mutated (not constant) or not mutated (constant). \n\nIs there an already implemented way to achieve something similar in python?\nIf not was there ever a PEP discussing such a feature?\n\nI was thinking of writing a decorator that either overwrites the __setattr__ of each object or compare the parameter before and after the execution of the function.\nThis would decrease performance tho.\n\nA nicer option would be to be able to add a const keyword as a type-hint and have static type checkers validate, that the parameters would not be mutated in the function-body.", "score": 1}, {"text": "Python Packaging Explained. ", "score": 12}, {"text": "How do you manage malicious package security?. What are you all doing (or not doing) as far as managing security for individual python packages that aren't part of the standard distribution?\n\nI've been at a company where there was a whitelist for approved python packages and versions but obviously this was extremely slow and people were always trying to find ways around it. I'm currently at a company where we can download whatever the hell we want which is great for speed but maybe risky.\n\nAre there services or processes that you guys use to make sure you're not using a known or potentially malicious python package?", "score": 52}, {"text": "FluidFrames.RIFE 11.0 - video AI interpolation app (RIFE-HDv3). &amp;#x200B;\n\nhttps://preview.redd.it/qn8mobyr63ma1.png?width=1627&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=6596b7c74a6ff3b55e8be392a4188e3b48a75bd3\n\n* Github: [https://github.com/Djdefrag/FluidFrames.RIFE](https://github.com/Djdefrag/FluidFrames.RIFE)\n* Itch: [https://jangystudio.itch.io/fluidframesrife](https://jangystudio.itch.io/fluidframesrife)\n\n**What is\u00a0FluidFrames.RIFE?**\n\nFluidFrames.RIFE is a Windows app that uses RIFE-HDv3 artificial intelligence to doubling or quadrupling videos fps.\n\n**Version 11.0 changelog**\n\nNEW\n\n* Optimized RIFEHDv3, is now faster and more stable\n* Added a description for each widget, accessible via button next to each widget\n* When selecting 100% as Input Resolution, resizing phase will be skipped\n* Input Resolution widget will now accept values &gt; 100%\n   * video can be upscaled before passing through AI\n   * for example, a video 100x100px with Input Resolution 200%\n   * 100x100px &gt; 200x200px\n\nGUI\n\n* Removed \"Options\" button\n* Some little changes\n\nBUGFIX / IMPROVEMENTS\n\n* Fix reading and writing images with non-ascii characters in filepath. Thanks [@jaycalixto](https://github.com/jaycalixto)\n* Fixed a bug that did not allow resources to be released upon upscale failure\n* Updated dependencies:\n   * Python 3.10.9 -&gt; 3.10.10\n   * pytorch 1.13 -&gt; 1.13.1\n   * torch-directml 1.13 -&gt; 1.13.1\n* Code cleaning and improvements", "score": 1}]